{"ast":null,"code":"var _jsxFileName = \"/Users/Idan/Projects/Dev/GitHub/BCKLG/src/components/UI Elements/Navbar.js\";\nimport React, { Component } from \"react\";\nimport NavItem from \"./NavItem\";\nimport Logo from \"./Logo\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\"; // Redux\n\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/userActions\";\nimport { loadUserDataFromProps } from \"../../util/Utils\";\n\nclass Navbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      defaultClasses: \"nav-link link\",\n      selectedClasses: \"btn nav-selected\",\n      homePaths: [\"/\"],\n      // bcklgPaths: [\"/add-game\"],\n      bcklgPaths: [\"/account\"],\n      navbarType: null,\n      popupVisible: false\n    };\n\n    this.convertPageName = i_PageName => {\n      let pageName = i_PageName;\n      let convertedPageName = \"\";\n      const splitPageName = pageName.split(\" \");\n\n      if (splitPageName.length === 1) {\n        convertedPageName = splitPageName[0].toLowerCase();\n      } else {\n        for (let i = 0; i < splitPageName.length; i++) {\n          if (i === splitPageName.length - 1) {\n            convertedPageName += splitPageName[i].toLowerCase();\n          } else {\n            convertedPageName += splitPageName[i].toLowerCase() + \"-\";\n          }\n        }\n      }\n\n      return convertedPageName;\n    };\n\n    this.getNavbarType = () => {\n      let type = null;\n      const {\n        pathname\n      } = this.props.location;\n      this.state.homePaths.forEach(path => {\n        if (path === pathname) {\n          type = \"home\";\n        }\n      });\n\n      if (type === null) {\n        this.state.bcklgPaths.forEach(path => {\n          if (path === pathname) {\n            type = \"bcklg\";\n          }\n        });\n      }\n\n      return type;\n    };\n\n    this.handleNavItemClick = () => {\n      if (this.state.popupVisible) {\n        this.setState({\n          popupVisible: false\n        });\n      }\n    };\n\n    this.drawNabBar = () => {\n      let navItemArr;\n      let navbar = [];\n      let navItem = React.createElement(NavItem, {\n        handleClick: this.handleNavItemClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n      const navbarType = this.getNavbarType();\n\n      if (navbarType !== null) {\n        if (navbarType === \"home\") {\n          navItemArr = this.props.homeNav;\n        } else {\n          navItemArr = this.props.bcklgNav;\n        }\n\n        navItemArr.forEach((page, index) => {\n          navbar.push(React.createElement(React.Fragment, {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.cloneElement(navItem, {\n            defaultClasses: this.state.defaultClasses,\n            selectedClasses: this.state.selectedClasses,\n            link: this.convertPageName(page),\n            key: page,\n            value: page\n          })));\n        });\n        return navbar;\n      } else {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Error drawing navbar\");\n      }\n    };\n\n    this.setNavPaths = () => {\n      const homePaths = this.mapNavPathsfromArray(this.state.homePaths, this.props.homeNav);\n      const bcklgPaths = this.mapNavPathsfromArray(this.state.bcklgPaths, this.props.bcklgNav);\n      this.setState({\n        homePaths,\n        bcklgPaths\n      });\n    };\n\n    this.mapNavPathsfromArray = (i_StarterPaths, i_NavItems) => {\n      let navPaths = i_NavItems.map(navItem => {\n        return `/${this.convertPageName(navItem)}`;\n      });\n\n      if (i_StarterPaths.length > 0) {\n        i_StarterPaths.forEach(path => {\n          navPaths.unshift(path);\n        });\n      }\n\n      return navPaths;\n    };\n\n    this.handleLogout = () => {\n      if (window.confirm(\"Are you sure you want to logout?\")) {\n        try {\n          this.props.logoutUser();\n          this.setState({\n            popupVisible: false\n          });\n          this.props.history.push(\"/\");\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n\n    this.renderUserPopup = () => {\n      if (this.state.popupVisible) {\n        return React.createElement(\"div\", {\n          className: \"user-pop-up\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/account\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn nav-link link btn-pop-up\",\n          onClick: this.handleNavItemClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"Account\")), React.createElement(\"button\", {\n          className: \"btn nav-link link btn-pop-up\",\n          onClick: this.handleLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, \"Logout\")));\n      }\n    };\n\n    this.handleUserButtonClick = () => {\n      this.setState({\n        popupVisible: !this.state.popupVisible\n      });\n    };\n\n    this.drawUserButton = i_Username => {\n      const navbarType = this.getNavbarType();\n\n      if (navbarType !== \"home\" && i_Username !== undefined) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          key: \"username\",\n          className: \"btn username nav-link link\",\n          onClick: this.handleUserButtonClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \" \", i_Username), this.renderUserPopup());\n      }\n    };\n\n    this.renderLogo = () => {\n      const logoWidth = 150;\n      const navbarType = this.getNavbarType();\n      return React.createElement(Logo, {\n        navbarType: navbarType,\n        logoType: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      popupVisible: false\n    });\n    this.setNavPaths();\n  }\n\n  render() {\n    const {\n      username\n    } = loadUserDataFromProps(this.props);\n    return React.createElement(\"div\", {\n      className: \"navbar flex-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nav-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.renderLogo()), React.createElement(\"div\", {\n      className: \"nav-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"nav-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nav-items-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.drawNabBar(), this.drawUserButton(username))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  logoutUser\n};\nNavbar.propTypes = {\n  user: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Navbar));","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/GitHub/BCKLG/src/components/UI Elements/Navbar.js"],"names":["React","Component","NavItem","Logo","withRouter","Link","PropTypes","connect","logoutUser","loadUserDataFromProps","Navbar","state","defaultClasses","selectedClasses","homePaths","bcklgPaths","navbarType","popupVisible","convertPageName","i_PageName","pageName","convertedPageName","splitPageName","split","length","toLowerCase","i","getNavbarType","type","pathname","props","location","forEach","path","handleNavItemClick","setState","drawNabBar","navItemArr","navbar","navItem","homeNav","bcklgNav","page","index","push","cloneElement","link","key","value","setNavPaths","mapNavPathsfromArray","i_StarterPaths","i_NavItems","navPaths","map","unshift","handleLogout","window","confirm","history","err","console","log","renderUserPopup","handleUserButtonClick","drawUserButton","i_Username","undefined","renderLogo","logoWidth","componentDidMount","render","username","mapStateToProps","user","mapActionsToProps","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NavItem from \"./NavItem\";\nimport Logo from \"./Logo\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/userActions\";\nimport { loadUserDataFromProps } from \"../../util/Utils\";\n\nclass Navbar extends Component {\n  state = {\n    defaultClasses: \"nav-link link\",\n    selectedClasses: \"btn nav-selected\",\n    homePaths: [\"/\"],\n    // bcklgPaths: [\"/add-game\"],\n    bcklgPaths: [\"/account\"],\n    navbarType: null,\n    popupVisible: false\n  };\n\n  componentDidMount() {\n    this.setState({\n      popupVisible: false\n    });\n    this.setNavPaths();\n  }\n\n  convertPageName = i_PageName => {\n    let pageName = i_PageName;\n    let convertedPageName = \"\";\n    const splitPageName = pageName.split(\" \");\n    if (splitPageName.length === 1) {\n      convertedPageName = splitPageName[0].toLowerCase();\n    } else {\n      for (let i = 0; i < splitPageName.length; i++) {\n        if (i === splitPageName.length - 1) {\n          convertedPageName += splitPageName[i].toLowerCase();\n        } else {\n          convertedPageName += splitPageName[i].toLowerCase() + \"-\";\n        }\n      }\n    }\n\n    return convertedPageName;\n  };\n\n  getNavbarType = () => {\n    let type = null;\n    const { pathname } = this.props.location;\n\n    this.state.homePaths.forEach(path => {\n      if (path === pathname) {\n        type = \"home\";\n      }\n    });\n    if (type === null) {\n      this.state.bcklgPaths.forEach(path => {\n        if (path === pathname) {\n          type = \"bcklg\";\n        }\n      });\n    }\n\n    return type;\n  };\n\n  handleNavItemClick = () => {\n    if (this.state.popupVisible) {\n      this.setState({\n        popupVisible: false\n      });\n    }\n  };\n\n  drawNabBar = () => {\n    let navItemArr;\n    let navbar = [];\n    let navItem = <NavItem handleClick={this.handleNavItemClick} />;\n\n    const navbarType = this.getNavbarType();\n\n    if (navbarType !== null) {\n      if (navbarType === \"home\") {\n        navItemArr = this.props.homeNav;\n      } else {\n        navItemArr = this.props.bcklgNav;\n      }\n      navItemArr.forEach((page, index) => {\n        navbar.push(\n          <React.Fragment key={index}>\n            {React.cloneElement(navItem, {\n              defaultClasses: this.state.defaultClasses,\n              selectedClasses: this.state.selectedClasses,\n              link: this.convertPageName(page),\n              key: page,\n              value: page\n            })}\n          </React.Fragment>\n        );\n      });\n\n      return navbar;\n    } else {\n      return <p>Error drawing navbar</p>;\n    }\n  };\n\n  setNavPaths = () => {\n    const homePaths = this.mapNavPathsfromArray(\n      this.state.homePaths,\n      this.props.homeNav\n    );\n    const bcklgPaths = this.mapNavPathsfromArray(\n      this.state.bcklgPaths,\n      this.props.bcklgNav\n    );\n\n    this.setState({\n      homePaths,\n      bcklgPaths\n    });\n  };\n\n  mapNavPathsfromArray = (i_StarterPaths, i_NavItems) => {\n    let navPaths = i_NavItems.map(navItem => {\n      return `/${this.convertPageName(navItem)}`;\n    });\n\n    if (i_StarterPaths.length > 0) {\n      i_StarterPaths.forEach(path => {\n        navPaths.unshift(path);\n      });\n    }\n\n    return navPaths;\n  };\n\n  handleLogout = () => {\n    if (window.confirm(\"Are you sure you want to logout?\")) {\n      try {\n        this.props.logoutUser();\n        this.setState({\n          popupVisible: false\n        });\n        this.props.history.push(\"/\");\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  renderUserPopup = () => {\n    if (this.state.popupVisible) {\n      return (\n        <div className=\"user-pop-up\">\n          <ul>\n            <Link to=\"/account\">\n              <button\n                className=\"btn nav-link link btn-pop-up\"\n                onClick={this.handleNavItemClick}\n              >\n                Account\n              </button>\n            </Link>\n            <button\n              className=\"btn nav-link link btn-pop-up\"\n              onClick={this.handleLogout}\n            >\n              Logout\n            </button>\n          </ul>\n        </div>\n      );\n    }\n  };\n\n  handleUserButtonClick = () => {\n    this.setState({\n      popupVisible: !this.state.popupVisible\n    });\n  };\n\n  drawUserButton = i_Username => {\n    const navbarType = this.getNavbarType();\n    if (navbarType !== \"home\" && i_Username !== undefined) {\n      return (\n        <React.Fragment>\n          <button\n            key={\"username\"}\n            className=\"btn username nav-link link\"\n            onClick={this.handleUserButtonClick}\n          >\n            {\" \"}\n            {i_Username}\n          </button>\n          {this.renderUserPopup()}\n        </React.Fragment>\n      );\n    }\n  };\n\n  renderLogo = () => {\n    const logoWidth = 150;\n    const navbarType = this.getNavbarType();\n\n    return <Logo navbarType={navbarType} logoType=\"nav\" />;\n  };\n\n  render() {\n    const { username } = loadUserDataFromProps(this.props);\n\n    return (\n      <div className=\"navbar flex-row\">\n        <nav className=\"nav\">\n          <div className=\"nav-logo\">{this.renderLogo()}</div>\n          <div className=\"nav-wrapper\">\n            <ul className=\"nav-list\">\n              <div className=\"nav-items-wrapper\">\n                {this.drawNabBar()}\n                {this.drawUserButton(username)}\n              </div>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = { logoutUser };\n\nNavbar.propTypes = {\n  user: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Navbar));\n"]},"metadata":{},"sourceType":"module"}