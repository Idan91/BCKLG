{"ast":null,"code":"var _jsxFileName = \"/Users/Idan/Projects/Dev/GitHub/BCKLG/src/components/UI Elements/Cards.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport GameFocus from \"./GameFocus\";\n\nclass Cards extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gameFocusVisible: false,\n      gameForFocus: \"\",\n      gameFocus: \"\"\n    };\n\n    this.handleCardClick = event => {\n      let target = event.target;\n\n      while (!target.classList.value.includes(\"game-card\")) {\n        target = target.parentNode;\n      }\n\n      const targetGame = target;\n      const gameSlug = targetGame.getAttribute(\"slug\");\n\n      if (this.props.currentPage === \"My Backlog\") {\n        this.props.handleToggleFilter(\"hide\");\n      }\n\n      this.renderGameFocus(gameSlug);\n    };\n\n    this.drawCards = () => {\n      const cardsArr = this.props.games;\n      let cardDisplay;\n      cardDisplay = cardsArr.map((item, index) => {\n        const animationStyle = {\n          animationDelay: `${0.05 * (index + 1)}s`\n        };\n        return React.createElement(Card, {\n          key: index,\n          game: item,\n          handleClick: this.handleCardClick,\n          currentPage: this.props.currentPage,\n          animationStyle: animationStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      });\n      return cardDisplay;\n    };\n\n    this.renderGameFocus = async i_Game => {\n      if (this.props.currentPage === \"My Backlog\") {\n        const game = this.props.handleGetGameFromList(i_Game);\n        this.setState({\n          gameFocusVisible: true,\n          gameForFocus: game,\n          gameFocus: React.createElement(GameFocus, {\n            game: game,\n            currentPage: this.props.currentPage,\n            handleEditGame: this.props.handleEditGame,\n            handleDeleteGame: this.props.handleDeleteGame,\n            handleGetGameFromApi: this.props.handleGetGameFromApi,\n            handleClose: this.hideGameFocus,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          })\n        });\n      } else {\n        try {\n          this.props.handleGetGameFromApi(i_Game).then(game => {\n            this.setState({\n              gameFocusVisible: true,\n              gameForFocus: game,\n              gameFocus: React.createElement(GameFocus, {\n                game: game,\n                currentPage: this.props.parentComponent,\n                handleAddGame: this.props.handleAddGame,\n                handleGetGameFromApi: this.props.handleGetGameFromApi,\n                handleSearchVisibility: this.props.handleSearchVisibility,\n                handleClose: this.hideGameFocus,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78\n                },\n                __self: this\n              })\n            });\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n\n    this.hideGameFocus = () => {\n      this.setState({\n        gameFocusVisible: false\n      });\n\n      if (this.props.currentPage === \"Add Game\") {\n        this.props.handleSearchVisibility();\n      } else if (this.props.currentPage === \"My Backlog\") {\n        this.props.handleToggleFilter(\"show\");\n      }\n    };\n  }\n\n  renderItems() {\n    if (this.state.gameFocusVisible) {\n      return this.state.gameFocus;\n    } else {\n      return this.drawCards();\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), this.renderItems());\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/GitHub/BCKLG/src/components/UI Elements/Cards.js"],"names":["React","Component","Card","GameFocus","Cards","state","gameFocusVisible","gameForFocus","gameFocus","handleCardClick","event","target","classList","value","includes","parentNode","targetGame","gameSlug","getAttribute","props","currentPage","handleToggleFilter","renderGameFocus","drawCards","cardsArr","games","cardDisplay","map","item","index","animationStyle","animationDelay","i_Game","game","handleGetGameFromList","setState","handleEditGame","handleDeleteGame","handleGetGameFromApi","hideGameFocus","then","parentComponent","handleAddGame","handleSearchVisibility","err","console","log","renderItems","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport GameFocus from \"./GameFocus\";\n\nclass Cards extends Component {\n  state = {\n    gameFocusVisible: false,\n    gameForFocus: \"\",\n    gameFocus: \"\"\n  };\n\n  handleCardClick = event => {\n    let target = event.target;\n\n    while (!target.classList.value.includes(\"game-card\")) {\n      target = target.parentNode;\n    }\n\n    const targetGame = target;\n\n    const gameSlug = targetGame.getAttribute(\"slug\");\n\n    if (this.props.currentPage === \"My Backlog\") {\n      this.props.handleToggleFilter(\"hide\");\n    }\n    this.renderGameFocus(gameSlug);\n  };\n\n  drawCards = () => {\n    const cardsArr = this.props.games;\n\n    let cardDisplay;\n\n    cardDisplay = cardsArr.map((item, index) => {\n      const animationStyle = {\n        animationDelay: `${0.05 * (index + 1)}s`\n      };\n\n      return (\n        <Card\n          key={index}\n          game={item}\n          handleClick={this.handleCardClick}\n          currentPage={this.props.currentPage}\n          animationStyle={animationStyle}\n        />\n      );\n    });\n\n    return cardDisplay;\n  };\n\n  renderGameFocus = async i_Game => {\n    if (this.props.currentPage === \"My Backlog\") {\n      const game = this.props.handleGetGameFromList(i_Game);\n\n      this.setState({\n        gameFocusVisible: true,\n        gameForFocus: game,\n        gameFocus: (\n          <GameFocus\n            game={game}\n            currentPage={this.props.currentPage}\n            handleEditGame={this.props.handleEditGame}\n            handleDeleteGame={this.props.handleDeleteGame}\n            handleGetGameFromApi={this.props.handleGetGameFromApi}\n            handleClose={this.hideGameFocus}\n          />\n        )\n      });\n    } else {\n      try {\n        this.props.handleGetGameFromApi(i_Game).then(game => {\n          this.setState({\n            gameFocusVisible: true,\n            gameForFocus: game,\n            gameFocus: (\n              <GameFocus\n                game={game}\n                currentPage={this.props.parentComponent}\n                handleAddGame={this.props.handleAddGame}\n                handleGetGameFromApi={this.props.handleGetGameFromApi}\n                handleSearchVisibility={this.props.handleSearchVisibility}\n                handleClose={this.hideGameFocus}\n              />\n            )\n          });\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  hideGameFocus = () => {\n    this.setState({\n      gameFocusVisible: false\n    });\n    if (this.props.currentPage === \"Add Game\") {\n      this.props.handleSearchVisibility();\n    } else if (this.props.currentPage === \"My Backlog\") {\n      this.props.handleToggleFilter(\"show\");\n    }\n  };\n\n  renderItems() {\n    if (this.state.gameFocusVisible) {\n      return this.state.gameFocus;\n    } else {\n      return this.drawCards();\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <br />\n        {this.renderItems()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}