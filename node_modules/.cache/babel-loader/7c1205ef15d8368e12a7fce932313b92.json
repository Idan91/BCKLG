{"ast":null,"code":"var _jsxFileName = \"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/src/components/Cards.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport GameFocus from \"./GameFocus\";\n\nclass Cards extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gameFocusVisible: false,\n      gameForFocus: \"\"\n    };\n\n    this.handleCardClick = event => {\n      let target = event.target;\n\n      while (!target.classList.value.includes(\"game-card\")) {\n        target = target.parentNode;\n      }\n\n      const game = target;\n      const gameSlug = game.getAttribute(\"slug\");\n      this.showGameFocus(gameSlug); // if (this.props.parentComponent === \"Add Item\") {\n      //   this.props.handleAddGame(gameSlug);\n      // }\n    };\n\n    this.showGameFocus = i_Game => {\n      this.setState({\n        gameFocusVisible: true,\n        gameForFocus: i_Game\n      });\n    };\n\n    this.drawCards = () => {\n      const cardsArr = this.props.games;\n      let cardDisplay;\n      cardDisplay = cardsArr.map((item, index) => {\n        return React.createElement(Card, {\n          key: index,\n          game: item,\n          handleClick: this.handleCardClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      });\n      return cardDisplay;\n    };\n\n    this.renderGameFocus = async () => {\n      const gameSlug = this.state.gameForFocus;\n      const gameFocus = await this.props.handleGetGame(gameSlug).then(game => {\n        console.log(game); // return <GameFocus game={game} currentPage={this.props.parentComponent} />;\n      }); // return gameFocus;\n    };\n  }\n\n  renderItems() {\n    if (this.state.gameFocusVisible) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Test\");\n    } else {\n      return this.drawCards();\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), this.renderItems());\n  }\n\n}\n\nexport default Cards;","map":{"version":3,"sources":["/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/src/components/Cards.js"],"names":["React","Component","Card","GameFocus","Cards","state","gameFocusVisible","gameForFocus","handleCardClick","event","target","classList","value","includes","parentNode","game","gameSlug","getAttribute","showGameFocus","i_Game","setState","drawCards","cardsArr","props","games","cardDisplay","map","item","index","renderGameFocus","gameFocus","handleGetGame","then","console","log","renderItems","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BI,KAD4B,GACpB;AACNC,MAAAA,gBAAgB,EAAE,KADZ;AAENC,MAAAA,YAAY,EAAE;AAFR,KADoB;;AAAA,SAM5BC,eAN4B,GAMVC,KAAK,IAAI;AACzB,UAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;;AAEA,aAAO,CAACA,MAAM,CAACC,SAAP,CAAiBC,KAAjB,CAAuBC,QAAvB,CAAgC,WAAhC,CAAR,EAAsD;AACpDH,QAAAA,MAAM,GAAGA,MAAM,CAACI,UAAhB;AACD;;AAED,YAAMC,IAAI,GAAGL,MAAb;AAEA,YAAMM,QAAQ,GAAGD,IAAI,CAACE,YAAL,CAAkB,MAAlB,CAAjB;AAEA,WAAKC,aAAL,CAAmBF,QAAnB,EAXyB,CAazB;AACA;AACA;AACD,KAtB2B;;AAAA,SAwB5BE,aAxB4B,GAwBZC,MAAM,IAAI;AACxB,WAAKC,QAAL,CAAc;AACZd,QAAAA,gBAAgB,EAAE,IADN;AAEZC,QAAAA,YAAY,EAAEY;AAFF,OAAd;AAID,KA7B2B;;AAAA,SA+B5BE,SA/B4B,GA+BhB,MAAM;AAChB,YAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,KAA5B;AAEA,UAAIC,WAAJ;AAEAA,MAAAA,WAAW,GAAGH,QAAQ,CAACI,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1C,eACE,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,KAAX;AAAkB,UAAA,IAAI,EAAED,IAAxB;AAA8B,UAAA,WAAW,EAAE,KAAKnB,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJa,CAAd;AAMA,aAAOiB,WAAP;AACD,KA3C2B;;AAAA,SA6C5BI,eA7C4B,GA6CV,YAAY;AAC5B,YAAMb,QAAQ,GAAG,KAAKX,KAAL,CAAWE,YAA5B;AAEA,YAAMuB,SAAS,GAAG,MAAM,KAAKP,KAAL,CAAWQ,aAAX,CAAyBf,QAAzB,EAAmCgB,IAAnC,CAAwCjB,IAAI,IAAI;AACtEkB,QAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ,EADsE,CAEtE;AACD,OAHuB,CAAxB,CAH4B,CAQ5B;AACD,KAtD2B;AAAA;;AAwD5BoB,EAAAA,WAAW,GAAG;AACZ,QAAI,KAAK9B,KAAL,CAAWC,gBAAf,EAAiC;AAC/B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAKe,SAAL,EAAP;AACD;AACF;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKD,WAAL,EAFH,CADF;AAMD;;AAvE2B;;AA0E9B,eAAe/B,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport GameFocus from \"./GameFocus\";\n\nclass Cards extends Component {\n  state = {\n    gameFocusVisible: false,\n    gameForFocus: \"\"\n  };\n\n  handleCardClick = event => {\n    let target = event.target;\n\n    while (!target.classList.value.includes(\"game-card\")) {\n      target = target.parentNode;\n    }\n\n    const game = target;\n\n    const gameSlug = game.getAttribute(\"slug\");\n\n    this.showGameFocus(gameSlug);\n\n    // if (this.props.parentComponent === \"Add Item\") {\n    //   this.props.handleAddGame(gameSlug);\n    // }\n  };\n\n  showGameFocus = i_Game => {\n    this.setState({\n      gameFocusVisible: true,\n      gameForFocus: i_Game\n    });\n  };\n\n  drawCards = () => {\n    const cardsArr = this.props.games;\n\n    let cardDisplay;\n\n    cardDisplay = cardsArr.map((item, index) => {\n      return (\n        <Card key={index} game={item} handleClick={this.handleCardClick} />\n      );\n    });\n\n    return cardDisplay;\n  };\n\n  renderGameFocus = async () => {\n    const gameSlug = this.state.gameForFocus;\n\n    const gameFocus = await this.props.handleGetGame(gameSlug).then(game => {\n      console.log(game);\n      // return <GameFocus game={game} currentPage={this.props.parentComponent} />;\n    });\n\n    // return gameFocus;\n  };\n\n  renderItems() {\n    if (this.state.gameFocusVisible) {\n      return <h1>Test</h1>;\n    } else {\n      return this.drawCards();\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <br />\n        {this.renderItems()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}