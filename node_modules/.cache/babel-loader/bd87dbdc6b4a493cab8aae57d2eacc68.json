{"ast":null,"code":"var _jsxFileName = \"/Users/Idan/Projects/Dev/GitHub/BCKLG/src/components/BCKLG Pages/Account.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\"; // Redux\n\nimport { connect } from \"react-redux\";\nimport { logoutUser, deleteAccount, updateUserPassword } from \"../../redux/actions/userActions\";\n\nclass Account extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\",\n      editVisible: false,\n      errors: {},\n      passwordChanged: false\n    };\n\n    this.handleDeleteAccount = event => {\n      const {\n        user: {\n          credentials: {\n            username,\n            email\n          }\n        }\n      } = this.props;\n\n      if (window.confirm(\"Are you sure you want to delete your account?\")) {\n        if (window.prompt(\"Enter your account's email address below to confirm:\") !== email) {\n          alert(\"Incorrect input! Please try again\");\n        } else {\n          try {\n            this.props.deleteAccount(username);\n            alert(\"Account successfully deleted!\");\n            this.props.logoutUser();\n            this.props.history.push(\"/\");\n          } catch (err) {\n            console.log(err);\n            alert(err);\n          }\n        }\n      } else {\n        event.preventDefault();\n      }\n    };\n\n    this.handleSaveChanges = async event => {\n      event.preventDefault();\n      const {\n        user: {\n          credentials: {\n            email\n          }\n        }\n      } = this.props;\n      const updatePasswordRequest = {\n        email: email,\n        currentPassword: this.state.currentPassword,\n        newPassword: this.state.newPassword,\n        confirmNewPassword: this.state.confirmNewPassword\n      };\n      await this.props.updateUserPassword(updatePasswordRequest).then(result => {\n        if (result) {\n          this.handleEditAccount();\n          this.props.history.push(\"/account\");\n          this.setState({\n            currentPassword: \"\",\n            newPassword: \"\",\n            confirmNewPassword: \"\"\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleKeyDown = event => {\n      if (event.keyCode === 13) {\n        this.handleSaveChanges(event);\n      }\n    };\n\n    this.handleEditAccount = event => {\n      this.setState({\n        editVisible: !this.state.editVisible\n      });\n    };\n\n    this.renderEditAccount = i_Errors => {\n      const {\n        UI: {\n          loading\n        }\n      } = this.props;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"sub-page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Change Password\"), React.createElement(\"form\", {\n        onSubmit: this.handleSaveChanges,\n        className: \"form login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field-label-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.currentPassword !== \"\" && React.createElement(\"p\", {\n        className: \"field-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Current Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"userdata-input userdata-input-account\",\n        name: \"currentPassword\",\n        placeholder: \"Current Password\",\n        onChange: this.handleInputChange,\n        onKeyDown: this.handleKeyDown,\n        value: this.state.currentPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), i_Errors.currentPassword && React.createElement(\"p\", {\n        className: \"helper-text change-password-helper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, i_Errors.currentPassword)), React.createElement(\"div\", {\n        className: \"field-label-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.state.newPassword !== \"\" && React.createElement(\"p\", {\n        className: \"field-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"New Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"userdata-input userdata-input-account\",\n        name: \"newPassword\",\n        placeholder: \"New Password\",\n        onChange: this.handleInputChange,\n        onKeyDown: this.handleKeyDown,\n        value: this.state.newPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), i_Errors.newPassword && React.createElement(\"p\", {\n        className: \"change-password-helper helper-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, i_Errors.newPassword)), React.createElement(\"div\", {\n        className: \"field-label-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.state.confirmNewPassword !== \"\" && React.createElement(\"p\", {\n        className: \"field-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Confirm New Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        className: \"userdata-input userdata-input-account\",\n        name: \"confirmNewPassword\",\n        placeholder: \"Confirm New Password\",\n        onChange: this.handleInputChange,\n        value: this.state.confirmNewPassword,\n        onKeyDown: this.handleKeyDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), i_Errors.confirmNewPassword && React.createElement(\"p\", {\n        className: \"change-password-helper helper-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, i_Errors.confirmNewPassword)), React.createElement(\"div\", {\n        className: \"loader-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, loading && React.createElement(\"div\", {\n        className: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Save Changes\"), React.createElement(\"button\", {\n        className: \"btn btn-negative link\",\n        onClick: this.handleDeleteAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Delete account\")), React.createElement(\"button\", {\n        className: \"btn link btn-gray\",\n        onClick: this.handleEditAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Cancel\"));\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      user: {\n        credentials: {\n          username,\n          email\n        }\n      }\n    } = this.props;\n\n    if (this.state.passwordChanged) {\n      alert(\"Password updated successfully!\");\n      this.setState({\n        passwordChanged: false\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"center-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"page-title page-title-sml\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Account\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"field-label-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Username\")), React.createElement(\"div\", {\n      className: \"field-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, username)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"field-label-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"field-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Email\")), React.createElement(\"div\", {\n      className: \"field-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, email)), this.state.editVisible ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, this.renderEditAccount(errors)) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn link\",\n      onClick: this.handleEditAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Change Password\"))));\n  }\n\n}\n\nAccount.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  updateUserPassword: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  deleteAccount,\n  updateUserPassword,\n  logoutUser\n};\nexport default connect(mapStateToProps, mapActionsToProps)(Account);","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/GitHub/BCKLG/src/components/BCKLG Pages/Account.js"],"names":["React","Component","PropTypes","connect","logoutUser","deleteAccount","updateUserPassword","Account","state","currentPassword","newPassword","confirmNewPassword","editVisible","errors","passwordChanged","handleDeleteAccount","event","user","credentials","username","email","props","window","confirm","prompt","alert","history","push","err","console","log","preventDefault","handleSaveChanges","updatePasswordRequest","then","result","handleEditAccount","setState","catch","handleInputChange","target","name","value","handleKeyDown","keyCode","renderEditAccount","i_Errors","UI","loading","UNSAFE_componentWillReceiveProps","nextProps","render","propTypes","func","isRequired","object","mapStateToProps","mapActionsToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,UADF,EAEEC,aAFF,EAGEC,kBAHF,QAIO,iCAJP;;AAMA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BO,KAD8B,GACtB;AACNC,MAAAA,eAAe,EAAE,EADX;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,kBAAkB,EAAE,EAHd;AAINC,MAAAA,WAAW,EAAE,KAJP;AAKNC,MAAAA,MAAM,EAAE,EALF;AAMNC,MAAAA,eAAe,EAAE;AANX,KADsB;;AAAA,SAkB9BC,mBAlB8B,GAkBRC,KAAK,IAAI;AAC7B,YAAM;AACJC,QAAAA,IAAI,EAAE;AACJC,UAAAA,WAAW,EAAE;AAAEC,YAAAA,QAAF;AAAYC,YAAAA;AAAZ;AADT;AADF,UAIF,KAAKC,KAJT;;AAMA,UAAIC,MAAM,CAACC,OAAP,CAAe,+CAAf,CAAJ,EAAqE;AACnE,YACED,MAAM,CAACE,MAAP,CACE,sDADF,MAEMJ,KAHR,EAIE;AACAK,UAAAA,KAAK,CAAC,mCAAD,CAAL;AACD,SAND,MAMO;AACL,cAAI;AACF,iBAAKJ,KAAL,CAAWhB,aAAX,CAAyBc,QAAzB;AACAM,YAAAA,KAAK,CAAC,+BAAD,CAAL;AACA,iBAAKJ,KAAL,CAAWjB,UAAX;AACA,iBAAKiB,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,WALD,CAKE,OAAOC,GAAP,EAAY;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAH,YAAAA,KAAK,CAACG,GAAD,CAAL;AACD;AACF;AACF,OAlBD,MAkBO;AACLZ,QAAAA,KAAK,CAACe,cAAN;AACD;AACF,KA9C6B;;AAAA,SAgD9BC,iBAhD8B,GAgDV,MAAMhB,KAAN,IAAe;AACjCA,MAAAA,KAAK,CAACe,cAAN;AACA,YAAM;AACJd,QAAAA,IAAI,EAAE;AACJC,UAAAA,WAAW,EAAE;AAAEE,YAAAA;AAAF;AADT;AADF,UAIF,KAAKC,KAJT;AAMA,YAAMY,qBAAqB,GAAG;AAC5Bb,QAAAA,KAAK,EAAEA,KADqB;AAE5BX,QAAAA,eAAe,EAAE,KAAKD,KAAL,CAAWC,eAFA;AAG5BC,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE,WAHI;AAI5BC,QAAAA,kBAAkB,EAAE,KAAKH,KAAL,CAAWG;AAJH,OAA9B;AAOA,YAAM,KAAKU,KAAL,CACHf,kBADG,CACgB2B,qBADhB,EAEHC,IAFG,CAEEC,MAAM,IAAI;AACd,YAAIA,MAAJ,EAAY;AACV,eAAKC,iBAAL;AACA,eAAKf,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACA,eAAKU,QAAL,CAAc;AACZ5B,YAAAA,eAAe,EAAE,EADL;AAEZC,YAAAA,WAAW,EAAE,EAFD;AAGZC,YAAAA,kBAAkB,EAAE;AAHR,WAAd;AAKD;AACF,OAZG,EAaH2B,KAbG,CAaGV,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAfG,CAAN;AAgBD,KA/E6B;;AAAA,SAiF9BW,iBAjF8B,GAiFVvB,KAAK,IAAI;AAC3B,WAAKqB,QAAL,CAAc;AACZ,SAACrB,KAAK,CAACwB,MAAN,CAAaC,IAAd,GAAqBzB,KAAK,CAACwB,MAAN,CAAaE;AADtB,OAAd;AAGD,KArF6B;;AAAA,SAuF9BC,aAvF8B,GAuFd3B,KAAK,IAAI;AACvB,UAAIA,KAAK,CAAC4B,OAAN,KAAkB,EAAtB,EAA0B;AACxB,aAAKZ,iBAAL,CAAuBhB,KAAvB;AACD;AACF,KA3F6B;;AAAA,SA6F9BoB,iBA7F8B,GA6FVpB,KAAK,IAAI;AAC3B,WAAKqB,QAAL,CAAc;AACZzB,QAAAA,WAAW,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AADb,OAAd;AAGD,KAjG6B;;AAAA,SAmG9BiC,iBAnG8B,GAmGVC,QAAQ,IAAI;AAC9B,YAAM;AACJC,QAAAA,EAAE,EAAE;AAAEC,UAAAA;AAAF;AADA,UAEF,KAAK3B,KAFT;AAIA,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAM,QAAA,QAAQ,EAAE,KAAKW,iBAArB;AAAwC,QAAA,SAAS,EAAC,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKxB,KAAL,CAAWC,eAAX,KAA+B,EAA/B,IACC;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAIE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,uCAFZ;AAGE,QAAA,IAAI,EAAC,iBAHP;AAIE,QAAA,WAAW,EAAC,kBAJd;AAKE,QAAA,QAAQ,EAAE,KAAK8B,iBALjB;AAME,QAAA,SAAS,EAAE,KAAKI,aANlB;AAOE,QAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWC,eAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcGqC,QAAQ,CAACrC,eAAT,IACC;AAAG,QAAA,SAAS,EAAC,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGqC,QAAQ,CAACrC,eADZ,CAfJ,CADF,EAqBE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,WAAX,KAA2B,EAA3B,IACC;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAIE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,uCAFZ;AAGE,QAAA,IAAI,EAAC,aAHP;AAIE,QAAA,WAAW,EAAC,cAJd;AAKE,QAAA,QAAQ,EAAE,KAAK6B,iBALjB;AAME,QAAA,SAAS,EAAE,KAAKI,aANlB;AAOE,QAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWE,WAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcGoC,QAAQ,CAACpC,WAAT,IACC;AAAG,QAAA,SAAS,EAAC,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGoC,QAAQ,CAACpC,WADZ,CAfJ,CArBF,EAyCE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWG,kBAAX,KAAkC,EAAlC,IACC;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFJ,EAIE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,uCAFZ;AAGE,QAAA,IAAI,EAAC,oBAHP;AAIE,QAAA,WAAW,EAAC,sBAJd;AAKE,QAAA,QAAQ,EAAE,KAAK4B,iBALjB;AAME,QAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWG,kBANpB;AAOE,QAAA,SAAS,EAAE,KAAKgC,aAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcGG,QAAQ,CAACnC,kBAAT,IACC;AAAG,QAAA,SAAS,EAAC,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGmC,QAAQ,CAACnC,kBADZ,CAfJ,CAzCF,EA6DE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGqC,OAAO,IAAI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADd,CA7DF,EAgEE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhEF,EAiEE;AACE,QAAA,SAAS,EAAC,uBADZ;AAEE,QAAA,OAAO,EAAE,KAAKjC,mBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjEF,CAFF,EA0EE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE,KAAKqB,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1EF,CADF;AAgFD,KAxL6B;AAAA;;AAU9Ba,EAAAA,gCAAgC,CAACC,SAAD,EAAY;AAC1C,QAAIA,SAAS,CAACH,EAAV,CAAalC,MAAjB,EAAyB;AACvB,WAAKwB,QAAL,CAAc;AACZxB,QAAAA,MAAM,EAAEqC,SAAS,CAACH,EAAV,CAAalC;AADT,OAAd;AAGD;AACF;;AA0KDsC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtC,MAAAA;AAAF,QAAa,KAAKL,KAAxB;AAEA,UAAM;AACJS,MAAAA,IAAI,EAAE;AACJC,QAAAA,WAAW,EAAE;AAAEC,UAAAA,QAAF;AAAYC,UAAAA;AAAZ;AADT;AADF,QAIF,KAAKC,KAJT;;AAMA,QAAI,KAAKb,KAAL,CAAWM,eAAf,EAAgC;AAC9BW,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACA,WAAKY,QAAL,CAAc;AACZvB,QAAAA,eAAe,EAAE;AADL,OAAd;AAGD;;AAED,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAHF,EAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIK,QAAJ,CADF,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAVF,EAaE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIC,KAAJ,CADF,CAbF,EAgBG,KAAKZ,KAAL,CAAWI,WAAX,GACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKiC,iBAAL,CAAuBhC,MAAvB,CAAjB,CADD,GAGC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAE,KAAKuB,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CAnBJ,CAJF,CADF;AAqCD;;AA/O6B;;AAkPhC7B,OAAO,CAAC6C,SAAR,GAAoB;AAClBhD,EAAAA,UAAU,EAAEF,SAAS,CAACmD,IAAV,CAAeC,UADT;AAElBjD,EAAAA,aAAa,EAAEH,SAAS,CAACmD,IAAV,CAAeC,UAFZ;AAGlBhD,EAAAA,kBAAkB,EAAEJ,SAAS,CAACmD,IAAV,CAAeC,UAHjB;AAIlBrC,EAAAA,IAAI,EAAEf,SAAS,CAACqD,MAAV,CAAiBD,UAJL;AAKlBP,EAAAA,EAAE,EAAE7C,SAAS,CAACqD,MAAV,CAAiBD;AALH,CAApB;;AAQA,MAAME,eAAe,GAAGhD,KAAK,KAAK;AAChCS,EAAAA,IAAI,EAAET,KAAK,CAACS,IADoB;AAEhC8B,EAAAA,EAAE,EAAEvC,KAAK,CAACuC;AAFsB,CAAL,CAA7B;;AAKA,MAAMU,iBAAiB,GAAG;AACxBpD,EAAAA,aADwB;AAExBC,EAAAA,kBAFwB;AAGxBF,EAAAA;AAHwB,CAA1B;AAMA,eAAeD,OAAO,CAACqD,eAAD,EAAkBC,iBAAlB,CAAP,CAA4ClD,OAA5C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\nimport {\n  logoutUser,\n  deleteAccount,\n  updateUserPassword\n} from \"../../redux/actions/userActions\";\n\nclass Account extends Component {\n  state = {\n    currentPassword: \"\",\n    newPassword: \"\",\n    confirmNewPassword: \"\",\n    editVisible: false,\n    errors: {},\n    passwordChanged: false\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  handleDeleteAccount = event => {\n    const {\n      user: {\n        credentials: { username, email }\n      }\n    } = this.props;\n\n    if (window.confirm(\"Are you sure you want to delete your account?\")) {\n      if (\n        window.prompt(\n          \"Enter your account's email address below to confirm:\"\n        ) !== email\n      ) {\n        alert(\"Incorrect input! Please try again\");\n      } else {\n        try {\n          this.props.deleteAccount(username);\n          alert(\"Account successfully deleted!\");\n          this.props.logoutUser();\n          this.props.history.push(\"/\");\n        } catch (err) {\n          console.log(err);\n          alert(err);\n        }\n      }\n    } else {\n      event.preventDefault();\n    }\n  };\n\n  handleSaveChanges = async event => {\n    event.preventDefault();\n    const {\n      user: {\n        credentials: { email }\n      }\n    } = this.props;\n\n    const updatePasswordRequest = {\n      email: email,\n      currentPassword: this.state.currentPassword,\n      newPassword: this.state.newPassword,\n      confirmNewPassword: this.state.confirmNewPassword\n    };\n\n    await this.props\n      .updateUserPassword(updatePasswordRequest)\n      .then(result => {\n        if (result) {\n          this.handleEditAccount();\n          this.props.history.push(\"/account\");\n          this.setState({\n            currentPassword: \"\",\n            newPassword: \"\",\n            confirmNewPassword: \"\"\n          });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleInputChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13) {\n      this.handleSaveChanges(event);\n    }\n  };\n\n  handleEditAccount = event => {\n    this.setState({\n      editVisible: !this.state.editVisible\n    });\n  };\n\n  renderEditAccount = i_Errors => {\n    const {\n      UI: { loading }\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <h2 className=\"sub-page-title\">Change Password</h2>\n        <form onSubmit={this.handleSaveChanges} className=\"form login-form\">\n          <div className=\"field-label-container\">\n            {this.state.currentPassword !== \"\" && (\n              <p className=\"field-label\">Current Password</p>\n            )}\n            <input\n              type=\"password\"\n              className=\"userdata-input userdata-input-account\"\n              name=\"currentPassword\"\n              placeholder=\"Current Password\"\n              onChange={this.handleInputChange}\n              onKeyDown={this.handleKeyDown}\n              value={this.state.currentPassword}\n            ></input>\n            <br />\n            {i_Errors.currentPassword && (\n              <p className=\"helper-text change-password-helper\">\n                {i_Errors.currentPassword}\n              </p>\n            )}\n          </div>\n          <div className=\"field-label-container\">\n            {this.state.newPassword !== \"\" && (\n              <p className=\"field-label\">New Password</p>\n            )}\n            <input\n              type=\"password\"\n              className=\"userdata-input userdata-input-account\"\n              name=\"newPassword\"\n              placeholder=\"New Password\"\n              onChange={this.handleInputChange}\n              onKeyDown={this.handleKeyDown}\n              value={this.state.newPassword}\n            ></input>\n            <br />\n            {i_Errors.newPassword && (\n              <p className=\"change-password-helper helper-text\">\n                {i_Errors.newPassword}\n              </p>\n            )}\n          </div>\n          <div className=\"field-label-container\">\n            {this.state.confirmNewPassword !== \"\" && (\n              <p className=\"field-label\">Confirm New Password</p>\n            )}\n            <input\n              type=\"password\"\n              className=\"userdata-input userdata-input-account\"\n              name=\"confirmNewPassword\"\n              placeholder=\"Confirm New Password\"\n              onChange={this.handleInputChange}\n              value={this.state.confirmNewPassword}\n              onKeyDown={this.handleKeyDown}\n            ></input>\n            <br />\n            {i_Errors.confirmNewPassword && (\n              <p className=\"change-password-helper helper-text\">\n                {i_Errors.confirmNewPassword}\n              </p>\n            )}\n          </div>\n          <div className=\"loader-container\">\n            {loading && <div className=\"loader\" />}\n          </div>\n          <button className=\"btn link\">Save Changes</button>\n          <button\n            className=\"btn btn-negative link\"\n            onClick={this.handleDeleteAccount}\n          >\n            Delete account\n          </button>\n        </form>\n        <button className=\"btn link btn-gray\" onClick={this.handleEditAccount}>\n          Cancel\n        </button>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    const {\n      user: {\n        credentials: { username, email }\n      }\n    } = this.props;\n\n    if (this.state.passwordChanged) {\n      alert(\"Password updated successfully!\");\n      this.setState({\n        passwordChanged: false\n      });\n    }\n\n    return (\n      <React.Fragment>\n        {/* <div className=\"inner-body\">\n          <div className=\"main\">\n        <div className=\"content\"> */}\n        <div className=\"center-container\">\n          <h1 className=\"page-title page-title-sml\">Account</h1>\n          <br />\n          <div className=\"field-label-container\">\n            <p className=\"field-label\">Username</p>\n          </div>\n          <div className=\"field-box\">\n            <p>{username}</p>\n          </div>\n          <br />\n          <div className=\"field-label-container\">\n            <p className=\"field-label\">Email</p>\n          </div>\n          <div className=\"field-box\">\n            <p>{email}</p>\n          </div>\n          {this.state.editVisible ? (\n            <React.Fragment>{this.renderEditAccount(errors)}</React.Fragment>\n          ) : (\n            <React.Fragment>\n              <br />\n              <button className=\"btn link\" onClick={this.handleEditAccount}>\n                Change Password\n              </button>\n            </React.Fragment>\n          )}\n        </div>\n        {/* </div>\n          </div>\n        </div> */}\n      </React.Fragment>\n    );\n  }\n}\n\nAccount.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  updateUserPassword: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  deleteAccount,\n  updateUserPassword,\n  logoutUser\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Account);\n"]},"metadata":{},"sourceType":"module"}