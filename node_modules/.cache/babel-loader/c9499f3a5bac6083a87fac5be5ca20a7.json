{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";// Redux\nimport{connect}from\"react-redux\";import{logoutUser,updateGames,sendEmailVerification}from\"../../redux/actions/userActions\";import MyBacklog from\"./MyBacklog\";import Game from\"../../model/Game\";import{searchGame}from\"../../model/Api\";import{loadUserDataFromProps}from\"../../util/Utils\";var BCKLG=/*#__PURE__*/function(_Component){_inherits(BCKLG,_Component);function BCKLG(){var _getPrototypeOf2;var _this;_classCallCheck(this,BCKLG);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(BCKLG)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={isLoaded:false,rawger:\"\",pageIndex:0,navbarClasses:[],username:\"\",games:[],verified:\"\",userData:\"\"};_this.startRawger=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var Rawger;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:Rawger=require(\"rawger\");_context.next=3;return Rawger({}).then(function(data){_this.setState({rawger:data});});case 3:case\"end\":return _context.stop();}}},_callee);}));_this.getGameFromApi=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(i_GameSlug){var Rawger,_ref3,games,results;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:Rawger=require(\"rawger\");_context2.next=3;return Rawger({});case 3:_ref3=_context2.sent;games=_ref3.games;_context2.next=7;return games.get(i_GameSlug).then(function(result){return result.get();}).then(function(data){return data.raw;});case 7:results=_context2.sent;return _context2.abrupt(\"return\",results);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x){return _ref2.apply(this,arguments);};}();_this.getGameFromList=function(i_Game){var _loadUserDataFromProp=loadUserDataFromProps(_this.props),games=_loadUserDataFromProp.games;var myGameList=games;var myGame;myGameList.forEach(function(game){if(i_Game===game.slug){myGame=game;}});return myGame;};_this.editGame=function(i_Game,i_Platform,i_Status){var _loadUserDataFromProp2=loadUserDataFromProps(_this.props),username=_loadUserDataFromProp2.username,games=_loadUserDataFromProp2.games;var myGameList=games;var newGame=new Game(i_Game.raw,i_Platform,i_Status);var newGameList=myGameList.map(function(game){if(game.name===i_Game.raw.name){return newGame;}else{return game;}});_this.props.updateGames(username,newGameList);};_this.deleteGame=function(i_Game){var _loadUserDataFromProp3=loadUserDataFromProps(_this.props),username=_loadUserDataFromProp3.username,games=_loadUserDataFromProp3.games;var myGameList=games;var newGameList=myGameList.filter(function(game){var listGame;if(!(game.name===i_Game.raw.name)){listGame=game;}return listGame;});_this.props.updateGames(username,newGameList);};_this.loadUserDataFromProps=function(){var _this$props$user=_this.props.user,_this$props$user$cred=_this$props$user.credentials,username=_this$props$user$cred.username,games=_this$props$user$cred.games,emailVerified=_this$props$user$cred.emailVerified,loading=_this$props$user.loading,authenticated=_this$props$user.authenticated;var user=_this.props.user;return{user:user,username:username,games:games,emailVerified:emailVerified,loading:loading,authenticated:authenticated};};_this.onSwitchPage=function(i_Index){_this.setState({pageIndex:i_Index});};_this.handleLogout=function(){try{_this.props.logoutUser();_this.setState({popupVisible:false});_this.props.history.push(\"/login\");}catch(err){console.log(err);}};_this.renderBacklog=function(){var _loadUserDataFromProp4=loadUserDataFromProps(_this.props),games=_loadUserDataFromProp4.games,emailVerified=_loadUserDataFromProp4.emailVerified,loading=_loadUserDataFromProp4.loading,authenticated=_loadUserDataFromProp4.authenticated;var content=React.createElement(MyBacklog,{pageName:\"My Backlog\",games:games,handleSearch:searchGame,handleAddGame:_this.addGameToList,handleEditGame:_this.editGame,handleDeleteGame:_this.deleteGame,handleGetGameFromApi:_this.getGameFromApi,handleGetGameFromList:_this.getGameFromList});var loader=React.createElement(\"div\",{className:\"page-container\"},React.createElement(\"div\",{className:\"main\"},React.createElement(\"div\",{className:\"content\"},React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{className:\"loader-container\"},loading&&React.createElement(\"div\",{className:\"loader\"})))));var unverified=React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"page-container\"},React.createElement(\"div\",{className:\"main\"},React.createElement(\"div\",{className:\"content\"},React.createElement(\"div\",{className:\"center-container\"},React.createElement(\"h2\",{className:\"page-title\"},\"Your email is not verified!\"),React.createElement(\"br\",null),React.createElement(\"p\",{className:\"unverified-body\"},\"In order to use BCKLG, please click the button below and follow the instructions sent your email.\"),React.createElement(\"br\",null),React.createElement(\"button\",{className:\"btn link\",onClick:_this.props.sendEmailVerification},\"Send verification email\"),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"p\",null,\"Once you've verified your email, logout and re-login to use BCKLG.\"),React.createElement(\"button\",{className:\"btn nav-link link btn-pop-up\",onClick:_this.handleLogout},\"Logout\"))))));return(// <React.Fragment>\n//   {!loading\n//     ? authenticated\n//       ? emailVerified\n//         ? content\n//         : unverified\n//       : this.props.history.push(\"/\")\n//     : loader}\n// </React.Fragment>\nReact.createElement(React.Fragment,null,!loading?authenticated?content:_this.props.history.push(\"/\"):loader));};return _this;}_createClass(BCKLG,[{key:\"componentDidMount\",/* #region  LIFE-CYCLE METHODS */value:function componentDidMount(){this.startRawger();}/* #endregion */ /* #region  API METHODS */},{key:\"render\",/* #endregion */value:function render(){return this.renderBacklog();}}]);return BCKLG;}(Component);var mapStateToProps=function mapStateToProps(state){return{user:state.user};};var mapActionsToProps={logoutUser:logoutUser,updateGames:updateGames,sendEmailVerification:sendEmailVerification};export default connect(mapStateToProps,mapActionsToProps)(BCKLG);","map":{"version":3,"sources":["/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/src/components/BCKLG Pages/BCKLG.js"],"names":["React","Component","connect","logoutUser","updateGames","sendEmailVerification","MyBacklog","Game","searchGame","loadUserDataFromProps","BCKLG","state","isLoaded","rawger","pageIndex","navbarClasses","username","games","verified","userData","startRawger","Rawger","require","then","data","setState","getGameFromApi","i_GameSlug","get","result","raw","results","getGameFromList","i_Game","props","myGameList","myGame","forEach","game","slug","editGame","i_Platform","i_Status","newGame","newGameList","map","name","deleteGame","filter","listGame","user","credentials","emailVerified","loading","authenticated","onSwitchPage","i_Index","handleLogout","popupVisible","history","push","err","console","log","renderBacklog","content","addGameToList","loader","unverified","mapStateToProps","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\nimport {\n  logoutUser,\n  updateGames,\n  sendEmailVerification\n} from \"../../redux/actions/userActions\";\nimport MyBacklog from \"./MyBacklog\";\nimport Game from \"../../model/Game\";\nimport { searchGame } from \"../../model/Api\";\nimport { loadUserDataFromProps } from \"../../util/Utils\";\n\nclass BCKLG extends Component {\n  state = {\n    isLoaded: false,\n    rawger: \"\",\n    pageIndex: 0,\n    navbarClasses: [],\n    username: \"\",\n    games: [],\n    verified: \"\",\n    userData: \"\"\n  };\n\n  /* #region  LIFE-CYCLE METHODS */\n  componentDidMount() {\n    this.startRawger();\n  }\n  /* #endregion */\n\n  /* #region  API METHODS */\n  startRawger = async () => {\n    const Rawger = require(\"rawger\");\n    await Rawger({}).then(data => {\n      this.setState({\n        rawger: data\n      });\n    });\n  };\n\n  getGameFromApi = async i_GameSlug => {\n    const Rawger = require(\"rawger\");\n    const { games } = await Rawger({});\n    const results = await games\n      .get(i_GameSlug)\n      .then(result => {\n        return result.get();\n      })\n      .then(data => {\n        return data.raw;\n      });\n\n    return results;\n  };\n\n  /* #endregion */\n\n  /* #region  GAME METHODS */\n  getGameFromList = i_Game => {\n    const { games } = loadUserDataFromProps(this.props);\n\n    const myGameList = games;\n    let myGame;\n\n    myGameList.forEach(game => {\n      if (i_Game === game.slug) {\n        myGame = game;\n      }\n    });\n\n    return myGame;\n  };\n\n  editGame = (i_Game, i_Platform, i_Status) => {\n    const { username, games } = loadUserDataFromProps(this.props);\n\n    const myGameList = games;\n    const newGame = new Game(i_Game.raw, i_Platform, i_Status);\n\n    const newGameList = myGameList.map(game => {\n      if (game.name === i_Game.raw.name) {\n        return newGame;\n      } else {\n        return game;\n      }\n    });\n\n    this.props.updateGames(username, newGameList);\n  };\n\n  deleteGame = i_Game => {\n    const { username, games } = loadUserDataFromProps(this.props);\n\n    const myGameList = games;\n\n    const newGameList = myGameList.filter(game => {\n      let listGame;\n      if (!(game.name === i_Game.raw.name)) {\n        listGame = game;\n      }\n      return listGame;\n    });\n\n    this.props.updateGames(username, newGameList);\n  };\n\n  loadUserDataFromProps = () => {\n    const {\n      user: {\n        credentials: { username, games, emailVerified },\n        loading,\n        authenticated\n      }\n    } = this.props;\n\n    const { user } = this.props;\n\n    return { user, username, games, emailVerified, loading, authenticated };\n  };\n  /* #endregion */\n\n  /* #region  UI METHODS */\n  onSwitchPage = i_Index => {\n    this.setState({\n      pageIndex: i_Index\n    });\n  };\n\n  handleLogout = () => {\n    try {\n      this.props.logoutUser();\n      this.setState({\n        popupVisible: false\n      });\n      this.props.history.push(\"/login\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  renderBacklog = () => {\n    const {\n      games,\n      emailVerified,\n      loading,\n      authenticated\n    } = loadUserDataFromProps(this.props);\n\n    const content = (\n      <MyBacklog\n        pageName=\"My Backlog\"\n        games={games}\n        handleSearch={searchGame}\n        handleAddGame={this.addGameToList}\n        handleEditGame={this.editGame}\n        handleDeleteGame={this.deleteGame}\n        handleGetGameFromApi={this.getGameFromApi}\n        handleGetGameFromList={this.getGameFromList}\n      />\n    );\n\n    const loader = (\n      <div className=\"page-container\">\n        <div className=\"main\">\n          <div className=\"content\">\n            <br />\n            <br />\n            <div className=\"loader-container\">\n              {loading && <div className=\"loader\" />}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    const unverified = (\n      <React.Fragment>\n        <div className=\"page-container\">\n          <div className=\"main\">\n            <div className=\"content\">\n              <div className=\"center-container\">\n                <h2 className=\"page-title\">Your email is not verified!</h2>\n                <br />\n                <p className=\"unverified-body\">\n                  In order to use BCKLG, please click the button below and\n                  follow the instructions sent your email.\n                </p>\n                <br />\n                <button\n                  className=\"btn link\"\n                  onClick={this.props.sendEmailVerification}\n                >\n                  Send verification email\n                </button>\n                <br />\n                <br />\n                <p>\n                  Once you've verified your email, logout and re-login to use\n                  BCKLG.\n                </p>\n                <button\n                  className=\"btn nav-link link btn-pop-up\"\n                  onClick={this.handleLogout}\n                >\n                  Logout\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n\n    return (\n      // <React.Fragment>\n      //   {!loading\n      //     ? authenticated\n      //       ? emailVerified\n      //         ? content\n      //         : unverified\n      //       : this.props.history.push(\"/\")\n      //     : loader}\n      // </React.Fragment>\n      <React.Fragment>\n        {!loading\n          ? authenticated\n            ? content\n            : this.props.history.push(\"/\")\n          : loader}\n      </React.Fragment>\n    );\n  };\n  /* #endregion */\n\n  render() {\n    return this.renderBacklog();\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  logoutUser,\n  updateGames,\n  sendEmailVerification\n};\n\nBCKLG.propTypes = {\n  user: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  updateGames: PropTypes.func.isRequired,\n  sendEmailVerification: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(BCKLG);\n"]},"metadata":{},"sourceType":"module"}