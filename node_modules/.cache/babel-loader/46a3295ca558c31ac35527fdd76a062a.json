{"ast":null,"code":"import _classCallCheck from\"/Users/Idan/Projects/Dev/GitHub/BCKLG/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Idan/Projects/Dev/GitHub/BCKLG/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Idan/Projects/Dev/GitHub/BCKLG/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Idan/Projects/Dev/GitHub/BCKLG/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Idan/Projects/Dev/GitHub/BCKLG/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Card from\"./Card\";import{getStatusTypes}from\"../../model/Status\";var GameFocus=/*#__PURE__*/function(_Component){_inherits(GameFocus,_Component);function GameFocus(){var _getPrototypeOf2;var _this;_classCallCheck(this,GameFocus);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(GameFocus)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={selectedPlatform:\"\",platformButtonClasses:\"btn-search link preset focus-button focus-platform\",selectedStatus:\"\",statusButtonClasses:\"btn-search link preset focus-button focus-status\",selectedButtonClass:\"focus-button-selected\",editGame:false};_this.handleOptionChange=function(event){var target=event.target;var type=target.getAttribute(\"type\");if(type===\"Platform\"){_this.setState({selectedPlatform:target.value});}else{_this.setState({selectedStatus:target.value});}};_this.toggleEditGame=function(){_this.setState({selectedPlatform:_this.props.game.platform.name,selectedStatus:_this.props.game.status,editGame:true});};_this.renderPlatformButtons=function(){var platformHeader;var gamePlatforms;if(_this.props.currentPage===\"My Backlog\"&&!_this.state.editGame){platformHeader=React.createElement(\"h2\",{className:\"focus-header\"},\"Platform:\");gamePlatforms=React.createElement(\"button\",{key:_this.props.game.platform.slug,value:_this.props.game.platform.name,className:\"\".concat(_this.state.platformButtonClasses,\" \").concat(_this.props.game.platform.slug)},_this.props.game.platform.name);}else{platformHeader=React.createElement(\"h2\",{className:\"focus-header\"},\"Platforms:\");var game;if(_this.props.currentPage===\"My Backlog\"){game=_this.props.game.raw;}else{game=_this.props.game;}var platforms=game.platforms;if(platforms!==undefined&&platforms!==null&&platforms.length>0){gamePlatforms=platforms.map(function(platform,index){var isSelected=_this.state.selectedPlatform===platform.platform.name;return React.createElement(\"button\",{key:platform.platform.slug,value:platform.platform.name,type:\"Platform\",selected:isSelected,className:\"\".concat(_this.state.platformButtonClasses,\" \").concat(platform.platform.slug,\" \").concat(isSelected&&_this.state.selectedButtonClass),onClick:_this.handleOptionChange},platform.platform.name);});}}return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"focus-platform-container\"},platformHeader,gamePlatforms));};_this.renderStatus=function(){var statusTypes;var releaseDate=new Date(_this.props.game.released);var today=new Date();if(releaseDate.getTime()>=today.getTime()||_this.props.game.released===null){statusTypes=[getStatusTypes()[0]];}else{statusTypes=getStatusTypes();}var statusHeader=React.createElement(\"h2\",{className:\"focus-header focus-header-status\"},\"Status:\");var statusToRender;if(_this.props.currentPage===\"Add Game\"||_this.state.editGame){statusToRender=statusTypes.map(function(status,index){var isSelected=_this.state.selectedStatus===status;return React.createElement(\"button\",{key:index,value:status,selected:isSelected,className:\"\".concat(_this.state.statusButtonClasses,\" \").concat(isSelected&&_this.state.selectedButtonClass),onClick:_this.handleOptionChange},status);});}else{var status=_this.props.game.status;statusToRender=React.createElement(React.Fragment,null,React.createElement(\"button\",{key:_this.props.game.status,value:status,selected:false,className:\"\".concat(_this.state.statusButtonClasses)},status));}return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"focus-status-container\"},statusHeader,statusToRender));};_this.addGame=function(){try{if(_this.validateSelections()){_this.props.handleAddGame(_this.props.game.slug,_this.state.selectedPlatform,_this.state.selectedStatus);_this.props.handleClose();}else{alert(\"Please select a platform and a status!\");}}catch(err){console.log(err);}};_this.editGame=function(){try{if(_this.validateSelections()){_this.props.handleEditGame(_this.props.game,_this.state.selectedPlatform,_this.state.selectedStatus);_this.props.handleClose();}else{alert(\"Please select a platform and a status!\");}}catch(err){console.log(err);}};_this.deleteGame=function(){if(window.confirm(\"Are you sure you want to delete this game from your backlog?\")){try{_this.props.handleDeleteGame(_this.props.game);_this.props.handleClose();}catch(err){console.log(err);}}};_this.renderBottomPortion=function(){if(_this.props.currentPage===\"Add Game\"){return React.createElement(React.Fragment,null,React.createElement(\"button\",{className:\"btn btn-positive link\",onClick:_this.addGame},\"Add To Backlog\"));}else if(_this.state.editGame){return React.createElement(React.Fragment,null,React.createElement(\"button\",{className:\"btn btn-positive link\",onClick:_this.editGame},\"Save Edits\"),React.createElement(\"button\",{className:\"btn link btn-close\",onClick:_this.deleteGame},\"Delete From Backlog\"));}else{return React.createElement(\"button\",{className:\"btn link\",onClick:_this.toggleEditGame},\"Edit\");}};return _this;}_createClass(GameFocus,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.currentPage===\"Add Game\"){this.props.handleSearchVisibility();}}},{key:\"validateSelections\",value:function validateSelections(){return this.state.selectedPlatform!==\"\"&&this.state.selectedStatus!==\"\";}},{key:\"render\",value:function render(){var focusDetailsClasses=\"focus-details\";console.log(this.props.game);return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"focus-outer-container\"},React.createElement(\"button\",{className:\"btn link btn-gray close-game-focus\",onClick:this.props.handleClose},React.createElement(\"i\",{class:\"fas fa-arrow-left\"})),React.createElement(\"div\",{className:\"focus-container\"},React.createElement(\"div\",{className:\"focus-box\"},React.createElement(\"div\",{className:\"card-container\"},React.createElement(Card,{key:this.props.game.name,game:this.props.game,parentComponent:\"Game Focus\",currentPage:this.props.currentPage})),React.createElement(\"div\",{className:focusDetailsClasses},React.createElement(\"div\",{className:\"platform-container\"},this.renderPlatformButtons()),this.renderStatus(),React.createElement(\"br\",null),React.createElement(\"div\",{className:\"focus-bottom-buttons\"},this.renderBottomPortion())))),React.createElement(\"br\",null)));}}]);return GameFocus;}(Component);export default GameFocus;","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/GitHub/BCKLG/src/components/UI Elements/GameFocus.js"],"names":["React","Component","Card","getStatusTypes","GameFocus","state","selectedPlatform","platformButtonClasses","selectedStatus","statusButtonClasses","selectedButtonClass","editGame","handleOptionChange","event","target","type","getAttribute","setState","value","toggleEditGame","props","game","platform","name","status","renderPlatformButtons","platformHeader","gamePlatforms","currentPage","slug","raw","platforms","undefined","length","map","index","isSelected","renderStatus","statusTypes","releaseDate","Date","released","today","getTime","statusHeader","statusToRender","addGame","validateSelections","handleAddGame","handleClose","alert","err","console","log","handleEditGame","deleteGame","window","confirm","handleDeleteGame","renderBottomPortion","handleSearchVisibility","focusDetailsClasses"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport { getStatusTypes } from \"../../model/Status\";\n\nclass GameFocus extends Component {\n  state = {\n    selectedPlatform: \"\",\n    platformButtonClasses: \"btn-search link preset focus-button focus-platform\",\n    selectedStatus: \"\",\n    statusButtonClasses: \"btn-search link preset focus-button focus-status\",\n    selectedButtonClass: \"focus-button-selected\",\n    editGame: false\n  };\n\n  componentDidMount() {\n    if (this.props.currentPage === \"Add Game\") {\n      this.props.handleSearchVisibility();\n    }\n  }\n\n  handleOptionChange = event => {\n    const { target } = event;\n    const type = target.getAttribute(\"type\");\n\n    if (type === \"Platform\") {\n      this.setState({\n        selectedPlatform: target.value\n      });\n    } else {\n      this.setState({\n        selectedStatus: target.value\n      });\n    }\n  };\n\n  toggleEditGame = () => {\n    this.setState({\n      selectedPlatform: this.props.game.platform.name,\n      selectedStatus: this.props.game.status,\n      editGame: true\n    });\n  };\n\n  renderPlatformButtons = () => {\n    let platformHeader;\n    let gamePlatforms;\n\n    if (this.props.currentPage === \"My Backlog\" && !this.state.editGame) {\n      platformHeader = <h2 className=\"focus-header\">Platform:</h2>;\n\n      gamePlatforms = (\n        <button\n          key={this.props.game.platform.slug}\n          value={this.props.game.platform.name}\n          className={`${this.state.platformButtonClasses} ${this.props.game.platform.slug}`}\n        >\n          {this.props.game.platform.name}\n        </button>\n      );\n    } else {\n      platformHeader = <h2 className=\"focus-header\">Platforms:</h2>;\n      let game;\n\n      if (this.props.currentPage === \"My Backlog\") {\n        game = this.props.game.raw;\n      } else {\n        game = this.props.game;\n      }\n\n      const platforms = game.platforms;\n\n      if (\n        platforms !== undefined &&\n        platforms !== null &&\n        platforms.length > 0\n      ) {\n        gamePlatforms = platforms.map((platform, index) => {\n          const isSelected =\n            this.state.selectedPlatform === platform.platform.name;\n\n          return (\n            <button\n              key={platform.platform.slug}\n              value={platform.platform.name}\n              type=\"Platform\"\n              selected={isSelected}\n              className={`${this.state.platformButtonClasses} ${\n                platform.platform.slug\n              } ${isSelected && this.state.selectedButtonClass}`}\n              onClick={this.handleOptionChange}\n            >\n              {platform.platform.name}\n            </button>\n          );\n        });\n      }\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"focus-platform-container\">\n          {platformHeader}\n          {gamePlatforms}\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  renderStatus = () => {\n    let statusTypes;\n\n    const releaseDate = new Date(this.props.game.released);\n    const today = new Date();\n\n    if (\n      releaseDate.getTime() >= today.getTime() ||\n      this.props.game.released === null\n    ) {\n      statusTypes = [getStatusTypes()[0]];\n    } else {\n      statusTypes = getStatusTypes();\n    }\n\n    const statusHeader = (\n      <h2 className=\"focus-header focus-header-status\">Status:</h2>\n    );\n    let statusToRender;\n\n    if (this.props.currentPage === \"Add Game\" || this.state.editGame) {\n      statusToRender = statusTypes.map((status, index) => {\n        const isSelected = this.state.selectedStatus === status;\n\n        return (\n          <button\n            key={index}\n            value={status}\n            selected={isSelected}\n            className={`${this.state.statusButtonClasses} ${isSelected &&\n              this.state.selectedButtonClass}`}\n            onClick={this.handleOptionChange}\n          >\n            {status}\n          </button>\n        );\n      });\n    } else {\n      const status = this.props.game.status;\n\n      statusToRender = (\n        <React.Fragment>\n          <button\n            key={this.props.game.status}\n            value={status}\n            selected={false}\n            className={`${this.state.statusButtonClasses}`}\n          >\n            {status}\n          </button>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"focus-status-container\">\n          {statusHeader}\n          {statusToRender}\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  addGame = () => {\n    try {\n      if (this.validateSelections()) {\n        this.props.handleAddGame(\n          this.props.game.slug,\n          this.state.selectedPlatform,\n          this.state.selectedStatus\n        );\n        this.props.handleClose();\n      } else {\n        alert(\"Please select a platform and a status!\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  editGame = () => {\n    try {\n      if (this.validateSelections()) {\n        this.props.handleEditGame(\n          this.props.game,\n          this.state.selectedPlatform,\n          this.state.selectedStatus\n        );\n        this.props.handleClose();\n      } else {\n        alert(\"Please select a platform and a status!\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  deleteGame = () => {\n    if (\n      window.confirm(\n        \"Are you sure you want to delete this game from your backlog?\"\n      )\n    ) {\n      try {\n        this.props.handleDeleteGame(this.props.game);\n        this.props.handleClose();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  validateSelections() {\n    return (\n      this.state.selectedPlatform !== \"\" && this.state.selectedStatus !== \"\"\n    );\n  }\n\n  renderBottomPortion = () => {\n    if (this.props.currentPage === \"Add Game\") {\n      return (\n        <React.Fragment>\n          <button className=\"btn btn-positive link\" onClick={this.addGame}>\n            Add To Backlog\n          </button>\n        </React.Fragment>\n      );\n    } else if (this.state.editGame) {\n      return (\n        <React.Fragment>\n          <button className=\"btn btn-positive link\" onClick={this.editGame}>\n            Save Edits\n          </button>\n          <button className=\"btn link btn-close\" onClick={this.deleteGame}>\n            Delete From Backlog\n          </button>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <button className=\"btn link\" onClick={this.toggleEditGame}>\n          Edit\n        </button>\n      );\n    }\n  };\n\n  render() {\n    const focusDetailsClasses = \"focus-details\";\n\n    console.log(this.props.game);\n\n    return (\n      <React.Fragment>\n        <div className=\"focus-outer-container\">\n          <button\n            className=\"btn link btn-gray close-game-focus\"\n            onClick={this.props.handleClose}\n          >\n            <i class=\"fas fa-arrow-left\"></i>\n          </button>\n          <div className=\"focus-container\">\n            <div className=\"focus-box\">\n              <div className=\"card-container\">\n                <Card\n                  key={this.props.game.name}\n                  game={this.props.game}\n                  parentComponent={\"Game Focus\"}\n                  currentPage={this.props.currentPage}\n                />\n              </div>\n              <div className={focusDetailsClasses}>\n                <div className=\"platform-container\">\n                  {this.renderPlatformButtons()}\n                </div>\n                {this.renderStatus()}\n                <br />\n                <div className=\"focus-bottom-buttons\">\n                  {this.renderBottomPortion()}\n                </div>\n              </div>\n            </div>\n          </div>\n          <br />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GameFocus;\n"]},"metadata":{},"sourceType":"module"}