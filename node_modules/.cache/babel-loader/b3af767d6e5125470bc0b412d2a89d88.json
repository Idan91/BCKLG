{"ast":null,"code":"import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER } from \"../types\";\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  games: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      {\n        return { ...state,\n          authenticated: true\n        };\n      }\n\n    case SET_UNAUTHENTICATED:\n      {\n        return initialState;\n      }\n\n    case SET_USER:\n      {\n        return {\n          authenticated: true,\n          loading: false,\n          ...action.payload\n        };\n      }\n\n    case LOADING_USER:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USER","initialState","authenticated","loading","credentials","games","state","action","type","payload"],"mappings":"AAAA,SACEA,QADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,YAJF,QAKO,UALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,WAAW,EAAE,EAHM;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,iBAAL;AAAwB;AACtB,eAAO,EACL,GAAGQ,KADE;AAELJ,UAAAA,aAAa,EAAE;AAFV,SAAP;AAID;;AACD,SAAKH,mBAAL;AAA0B;AACxB,eAAOE,YAAP;AACD;;AACD,SAAKJ,QAAL;AAAe;AACb,eAAO;AACLK,UAAAA,aAAa,EAAE,IADV;AAELC,UAAAA,OAAO,EAAE,KAFJ;AAGL,aAAGI,MAAM,CAACE;AAHL,SAAP;AAKD;;AACD,SAAKT,YAAL;AAAmB;AACjB,eAAO,EACL,GAAGM,KADE;AAELH,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AACD;AACE,aAAOG,KAAP;AAxBJ;AA0BD","sourcesContent":["import {\n  SET_USER,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  LOADING_USER\n} from \"../types\";\n\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  games: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED: {\n      return {\n        ...state,\n        authenticated: true\n      };\n    }\n    case SET_UNAUTHENTICATED: {\n      return initialState;\n    }\n    case SET_USER: {\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload\n      };\n    }\n    case LOADING_USER: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}