{"ast":null,"code":"import _classCallCheck from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Cards from\"../UI Elements/Cards\";import{getStatusTypes}from\"../../model/Status\";import{Link}from\"react-router-dom\";// Redux\nimport{connect}from\"react-redux\";var MyBacklog=/*#__PURE__*/function(_Component){_inherits(MyBacklog,_Component);function MyBacklog(){var _getPrototypeOf2;var _this;_classCallCheck(this,MyBacklog);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(MyBacklog)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={addGameVisible:false,statusTypes:[],filterButtonVisible:true,filterVisible:false,filterIndex:0};_this.toggleAddItem=function(){if(_this.state.addGameVisible){_this.setState({addItemVisible:false,addItemClasses:\"btn btn-add-item link\"});}else{_this.setState({addItemVisible:true,addItemClasses:\"btn btn-add-item btn-selected link\"});}};_this.hideAddItem=function(){_this.setState({addItemVisible:false,addItemClasses:\"btn link\"});};_this.displayAddGame=function(){_this.props.history.push(\"/add-game\");};_this.filterBacklogGames=function(i_Games){var filteredGames;var filterIndex=_this.state.filterIndex;if(filterIndex!=0){var statusType=_this.state.statusTypes[filterIndex];filteredGames=i_Games.filter(function(game){if(game.status===statusType){return game;}});}else{filteredGames=i_Games;}return filteredGames;};_this.renderStatBar=function(i_Games){var statusTypes=_this.state.statusTypes;var gameStatusCount=statusTypes.map(function(status){var count=0;var gameStatus={};i_Games.forEach(function(game){if(game.status===status){count++;}});gameStatus.status=status;gameStatus.count=count;return gameStatus;});var statusStats=gameStatusCount.map(function(gameStatus,index){if(index>0){return React.createElement(React.Fragment,{key:gameStatus.status},React.createElement(\"p\",{className:\"stat\"},\"\".concat(gameStatus.status,\": \").concat(gameStatus.count)),index!==gameStatusCount.length-1&&React.createElement(\"p\",{className:\"stat stat-separator\"},\"|\"));}});return React.createElement(\"div\",{className:\"stat-container\"},React.createElement(\"div\",{className:\"stat-bar\"},React.createElement(\"p\",{className:\"stat\"},\"# of Games: \",i_Games.length),React.createElement(\"p\",{className:\"stat stat-separator\"},\"|\"),statusStats));};_this.renderStatusFilters=function(){var statusTypes=_this.state.statusTypes;var filterIndex=_this.state.filterIndex;var statusToRender;var statusButtonClasses=\"btn btn-status-filter link\";var selectedButtonClass=\"btn-selected-outline\";statusToRender=statusTypes.map(function(status,index){var isSelected=index==filterIndex;return React.createElement(\"button\",{key:index,value:status,\"value-index\":index,selected:isSelected,className:\"\".concat(statusButtonClasses,\" \").concat(isSelected&&selectedButtonClass),onClick:_this.handleFilterSelect},status);});return React.createElement(React.Fragment,null,statusToRender);};_this.handleFilterSelect=function(event){var target=event.target;var filterIndex=target.getAttribute(\"value-index\");_this.setState({filterIndex:filterIndex});};_this.handleFilterGames=function(){_this.setState({filterVisible:!_this.state.filterVisible});};_this.toggleFilter=function(i_ActionType){if(i_ActionType===\"hide\"){_this.setState({filterButtonVisible:false,filterVisible:false});}else if(i_ActionType===\"show\"){_this.setState({filterButtonVisible:true});}};_this.renderCards=function(i_Games){return React.createElement(\"div\",{className:\"content card-container\"},React.createElement(Cards,{games:_this.filterBacklogGames(i_Games),parentComponent:\"My Backlog\",currentPage:\"My Backlog\",handleToggleFilter:_this.toggleFilter,handleEditGame:_this.props.handleEditGame,handleDeleteGame:_this.props.handleDeleteGame,handleGetGameFromApi:_this.props.handleGetGameFromApi,handleGetGameFromList:_this.props.handleGetGameFromList}));};_this.renderContent=function(i_Games){return React.createElement(React.Fragment,null,React.createElement(\"h1\",{className:\"page-title\"},_this.props.pageName),React.createElement(\"div\",{className:\"main\"},React.createElement(\"div\",{className:\"option-bar\"},React.createElement(\"div\",{className:\"option-bar-item\"},React.createElement(Link,{to:\"/add-game\"},React.createElement(\"button\",{className:\"btn btn-add-game link\"},\"+ Add Game\"))),React.createElement(\"br\",null)),_this.renderStatBar(i_Games),React.createElement(\"div\",{className:\"center-container\"},_this.state.filterButtonVisible&&React.createElement(React.Fragment,null,React.createElement(\"button\",{className:\"btn btn-filter link\",onClick:_this.handleFilterGames},\"Filter\"),!_this.state.filterVisible&&_this.state.filterIndex>0&&React.createElement(\"div\",{className:\"status-filter-container \"},\"Status: \".concat(_this.state.statusTypes[_this.state.filterIndex]))),_this.state.filterVisible&&_this.renderStatusFilters()),React.createElement(\"div\",{className:\"content\"},_this.renderCards(i_Games))));};return _this;}_createClass(MyBacklog,[{key:\"componentDidMount\",value:function componentDidMount(){var statusTypes=getStatusTypes();statusTypes.unshift(\"All\");this.setState({statusTypes:statusTypes});}},{key:\"render\",value:function render(){var myGames=this.props.games;if(myGames===undefined){myGames=[];}return this.renderContent(myGames);}}]);return MyBacklog;}(Component);var mapStateToProps=function mapStateToProps(state){return{user:state.user,UI:state.UI};};export default connect(mapStateToProps)(MyBacklog);","map":{"version":3,"sources":["/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/src/components/BCKLG Pages/MyBacklog.js"],"names":["React","Component","Cards","getStatusTypes","Link","connect","MyBacklog","state","addGameVisible","statusTypes","filterButtonVisible","filterVisible","filterIndex","toggleAddItem","setState","addItemVisible","addItemClasses","hideAddItem","displayAddGame","props","history","push","filterBacklogGames","i_Games","filteredGames","statusType","filter","game","status","renderStatBar","gameStatusCount","map","count","gameStatus","forEach","statusStats","index","length","renderStatusFilters","statusToRender","statusButtonClasses","selectedButtonClass","isSelected","handleFilterSelect","event","target","getAttribute","handleFilterGames","toggleFilter","i_ActionType","renderCards","handleEditGame","handleDeleteGame","handleGetGameFromApi","handleGetGameFromList","renderContent","pageName","unshift","myGames","games","undefined","mapStateToProps","user","UI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cards from \"../UI Elements/Cards\";\nimport { getStatusTypes } from \"../../model/Status\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\n\nclass MyBacklog extends Component {\n  state = {\n    addGameVisible: false,\n    statusTypes: [],\n    filterButtonVisible: true,\n    filterVisible: false,\n    filterIndex: 0\n  };\n\n  componentDidMount() {\n    const statusTypes = getStatusTypes();\n\n    statusTypes.unshift(\"All\");\n\n    this.setState({\n      statusTypes\n    });\n  }\n\n  toggleAddItem = () => {\n    if (this.state.addGameVisible) {\n      this.setState({\n        addItemVisible: false,\n        addItemClasses: \"btn btn-add-item link\"\n      });\n    } else {\n      this.setState({\n        addItemVisible: true,\n        addItemClasses: \"btn btn-add-item btn-selected link\"\n      });\n    }\n  };\n\n  hideAddItem = () => {\n    this.setState({\n      addItemVisible: false,\n      addItemClasses: \"btn link\"\n    });\n  };\n\n  displayAddGame = () => {\n    this.props.history.push(\"/add-game\");\n  };\n\n  filterBacklogGames = i_Games => {\n    let filteredGames;\n    const filterIndex = this.state.filterIndex;\n\n    if (filterIndex != 0) {\n      const statusType = this.state.statusTypes[filterIndex];\n      filteredGames = i_Games.filter(game => {\n        if (game.status === statusType) {\n          return game;\n        }\n      });\n    } else {\n      filteredGames = i_Games;\n    }\n\n    return filteredGames;\n  };\n\n  renderStatBar = i_Games => {\n    const statusTypes = this.state.statusTypes;\n    const gameStatusCount = statusTypes.map(status => {\n      let count = 0;\n      let gameStatus = {};\n      i_Games.forEach(game => {\n        if (game.status === status) {\n          count++;\n        }\n      });\n      gameStatus.status = status;\n      gameStatus.count = count;\n\n      return gameStatus;\n    });\n\n    const statusStats = gameStatusCount.map((gameStatus, index) => {\n      if (index > 0) {\n        return (\n          <React.Fragment key={gameStatus.status}>\n            <p className=\"stat\">{`${gameStatus.status}: ${gameStatus.count}`}</p>\n            {index !== gameStatusCount.length - 1 && (\n              <p className=\"stat stat-separator\">|</p>\n            )}\n          </React.Fragment>\n        );\n      }\n    });\n\n    return (\n      <div className=\"stat-container\">\n        <div className=\"stat-bar\">\n          <p className=\"stat\"># of Games: {i_Games.length}</p>\n          <p className=\"stat stat-separator\">|</p>\n          {statusStats}\n        </div>\n      </div>\n    );\n  };\n\n  renderStatusFilters = () => {\n    let statusTypes = this.state.statusTypes;\n    const filterIndex = this.state.filterIndex;\n    let statusToRender;\n\n    const statusButtonClasses = \"btn btn-status-filter link\";\n    const selectedButtonClass = \"btn-selected-outline\";\n\n    statusToRender = statusTypes.map((status, index) => {\n      const isSelected = index == filterIndex;\n\n      return (\n        <button\n          key={index}\n          value={status}\n          value-index={index}\n          selected={isSelected}\n          className={`${statusButtonClasses} ${isSelected &&\n            selectedButtonClass}`}\n          onClick={this.handleFilterSelect}\n        >\n          {status}\n        </button>\n      );\n    });\n\n    return <React.Fragment>{statusToRender}</React.Fragment>;\n  };\n\n  handleFilterSelect = event => {\n    const { target } = event;\n    const filterIndex = target.getAttribute(\"value-index\");\n\n    this.setState({\n      filterIndex\n    });\n  };\n\n  handleFilterGames = () => {\n    this.setState({\n      filterVisible: !this.state.filterVisible\n    });\n  };\n\n  toggleFilter = i_ActionType => {\n    if (i_ActionType === \"hide\") {\n      this.setState({\n        filterButtonVisible: false,\n        filterVisible: false\n      });\n    } else if (i_ActionType === \"show\") {\n      this.setState({\n        filterButtonVisible: true\n      });\n    }\n  };\n\n  renderCards = i_Games => {\n    return (\n      <div className=\"content card-container\">\n        <Cards\n          games={this.filterBacklogGames(i_Games)}\n          parentComponent={\"My Backlog\"}\n          currentPage={\"My Backlog\"}\n          handleToggleFilter={this.toggleFilter}\n          handleEditGame={this.props.handleEditGame}\n          handleDeleteGame={this.props.handleDeleteGame}\n          handleGetGameFromApi={this.props.handleGetGameFromApi}\n          handleGetGameFromList={this.props.handleGetGameFromList}\n        />\n      </div>\n    );\n  };\n\n  renderContent = i_Games => {\n    return (\n      <React.Fragment>\n        <h1 className=\"page-title\">{this.props.pageName}</h1>\n        <div className=\"main\">\n          <div className=\"option-bar\">\n            <div className=\"option-bar-item\">\n              <Link to=\"/add-game\">\n                <button className=\"btn btn-add-game link\">+ Add Game</button>\n              </Link>\n            </div>\n            <br />\n          </div>\n          {this.renderStatBar(i_Games)}\n          <div className=\"center-container\">\n            {this.state.filterButtonVisible && (\n              <React.Fragment>\n                <button\n                  className=\"btn btn-filter link\"\n                  onClick={this.handleFilterGames}\n                >\n                  Filter\n                </button>\n\n                {!this.state.filterVisible && this.state.filterIndex > 0 && (\n                  <div className=\"status-filter-container \">\n                    {`Status: ${\n                      this.state.statusTypes[this.state.filterIndex]\n                    }`}\n                  </div>\n                )}\n              </React.Fragment>\n            )}\n            {this.state.filterVisible && this.renderStatusFilters()}\n          </div>\n          <div className=\"content\">{this.renderCards(i_Games)}</div>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    let myGames = this.props.games;\n\n    if (myGames === undefined) {\n      myGames = [];\n    }\n\n    return this.renderContent(myGames);\n  }\n}\n\nMyBacklog.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps)(MyBacklog);\n"]},"metadata":{},"sourceType":"module"}