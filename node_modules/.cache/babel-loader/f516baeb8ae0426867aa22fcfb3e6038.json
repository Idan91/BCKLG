{"ast":null,"code":"var _jsxFileName = \"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/src/components/GameFocus.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\n\nclass GameFocus extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.renderPlatformButtons = () => {\n      let platformHeader;\n      let gamePlatforms;\n\n      if (this.props.currentPage === \"My Backlog\") {\n        platformHeader = React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, \"Platform:\");\n        gamePlatforms = React.createElement(\"button\", {\n          key: this.props.game,\n          value: this.props.game.name,\n          className: `btn-search link preset focus-button focus-platform ${this.props.game.platform.slug}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, this.props.game.platform.name);\n      } else {\n        platformHeader = React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Platforms:\");\n        const platforms = this.props.game.platforms;\n\n        if (platforms !== undefined && platforms !== null && platforms.length > 0) {\n          gamePlatforms = platforms.map((platform, index) => {\n            return React.createElement(\"button\", {\n              key: index,\n              value: platform.platform.name,\n              className: `btn-search link preset focus-button focus-platform ${platform.platform.slug}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }, platform.platform.name);\n          });\n        }\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, platformHeader, gamePlatforms); // return <h2>test</h2>;\n    };\n\n    this.addGame = event => {\n      try {\n        this.props.handleAddGame(this.props.game.slug);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        this.props.handleClose();\n      }\n    };\n\n    this.renderStatus = () => {\n      const statusTypes = [\"Owned\", \"Started\", \"Beaten\", \"Dropped\"];\n\n      if (this.props.currentPage === \"Add Item\") {\n        const statusButtons = statusTypes.map((status, index) => {\n          return React.createElement(\"button\", {\n            key: index,\n            value: status,\n            className: `btn-search link preset focus-button focus-status`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, status);\n        });\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Status:\"), statusButtons);\n      } else {// const status = this.props.game.status;\n        // console.log(\"props.game\", this.props.game);\n        // console.log(\"props.game.platform\", this.props.game.platform);\n        // console.log(\"status\", status);\n        // return (\n        //   <button\n        //     key={this.props.game.status}\n        //     value={status}\n        //     className={`btn-search link preset focus-button focus-status`}\n        //   >\n        //     {status}\n        //   </button>\n        // );\n      }\n    };\n\n    this.renderAddGamePortion = () => {\n      if (this.props.currentPage == \"Add Item\") {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-add-to-backlog link\",\n          onClick: this.addGame,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Add to backlog\"));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn link\",\n      onClick: this.props.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Close\"), (() => {\n      if (this.props.currentPage === \"My Backlog\") {\n        return React.createElement(\"button\", {\n          className: \"btn link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Edit\");\n      }\n    })(), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"focus-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-container-focus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Card, {\n      key: this.props.game.name,\n      game: this.props.game,\n      parentComponent: \"Game Focus\",\n      currentPage: this.props.currentPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"focus-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-properties\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.renderPlatformButtons(), this.renderStatus(), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), this.renderAddGamePortion())))));\n  }\n\n}\n\nexport default GameFocus;","map":{"version":3,"sources":["/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/src/components/GameFocus.js"],"names":["React","Component","Card","GameFocus","state","renderPlatformButtons","platformHeader","gamePlatforms","props","currentPage","game","name","platform","slug","platforms","undefined","length","map","index","addGame","event","handleAddGame","error","console","log","handleClose","renderStatus","statusTypes","statusButtons","status","renderAddGamePortion","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./Card\";\n\nclass GameFocus extends Component {\n  state = {};\n\n  renderPlatformButtons = () => {\n    let platformHeader;\n    let gamePlatforms;\n\n    if (this.props.currentPage === \"My Backlog\") {\n      platformHeader = <h2>Platform:</h2>;\n\n      gamePlatforms = (\n        <button\n          key={this.props.game}\n          value={this.props.game.name}\n          className={`btn-search link preset focus-button focus-platform ${this.props.game.platform.slug}`}\n        >\n          {this.props.game.platform.name}\n        </button>\n      );\n    } else {\n      platformHeader = <h2>Platforms:</h2>;\n\n      const platforms = this.props.game.platforms;\n\n      if (\n        platforms !== undefined &&\n        platforms !== null &&\n        platforms.length > 0\n      ) {\n        gamePlatforms = platforms.map((platform, index) => {\n          return (\n            <button\n              key={index}\n              value={platform.platform.name}\n              className={`btn-search link preset focus-button focus-platform ${platform.platform.slug}`}\n            >\n              {platform.platform.name}\n            </button>\n          );\n        });\n      }\n    }\n\n    return (\n      <React.Fragment>\n        {platformHeader}\n        {gamePlatforms}\n      </React.Fragment>\n    );\n    // return <h2>test</h2>;\n  };\n\n  addGame = event => {\n    try {\n      this.props.handleAddGame(this.props.game.slug);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.props.handleClose();\n    }\n  };\n\n  renderStatus = () => {\n    const statusTypes = [\"Owned\", \"Started\", \"Beaten\", \"Dropped\"];\n\n    if (this.props.currentPage === \"Add Item\") {\n      const statusButtons = statusTypes.map((status, index) => {\n        return (\n          <button\n            key={index}\n            value={status}\n            className={`btn-search link preset focus-button focus-status`}\n          >\n            {status}\n          </button>\n        );\n      });\n      return (\n        <React.Fragment>\n          <h2>Status:</h2>\n          {statusButtons}\n        </React.Fragment>\n      );\n    } else {\n      // const status = this.props.game.status;\n      // console.log(\"props.game\", this.props.game);\n      // console.log(\"props.game.platform\", this.props.game.platform);\n      // console.log(\"status\", status);\n      // return (\n      //   <button\n      //     key={this.props.game.status}\n      //     value={status}\n      //     className={`btn-search link preset focus-button focus-status`}\n      //   >\n      //     {status}\n      //   </button>\n      // );\n    }\n  };\n\n  renderAddGamePortion = () => {\n    if (this.props.currentPage == \"Add Item\") {\n      return (\n        <React.Fragment>\n          <button\n            className=\"btn btn-add-to-backlog link\"\n            onClick={this.addGame}\n          >\n            Add to backlog\n          </button>\n        </React.Fragment>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <br />\n        <button className=\"btn link\" onClick={this.props.handleClose}>\n          Close\n        </button>\n        {(() => {\n          if (this.props.currentPage === \"My Backlog\") {\n            return <button className=\"btn link\">Edit</button>;\n          }\n        })()}\n        <br />\n        <br />\n        <div className=\"focus-container\">\n          <div className=\"card-container-focus\">\n            <Card\n              key={this.props.game.name}\n              game={this.props.game}\n              parentComponent={\"Game Focus\"}\n              currentPage={this.props.currentPage}\n            />\n            <div className=\"focus-details\">\n              <div className=\"game-properties\">\n                {this.renderPlatformButtons()}\n                {this.renderStatus()}\n                <br />\n                <br />\n                {this.renderAddGamePortion()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GameFocus;\n"]},"metadata":{},"sourceType":"module"}