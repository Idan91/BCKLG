{"ast":null,"code":"var _jsxFileName = \"/Users/Idan/Projects/Dev/GitHub/BCKLG/src/components/UI Elements/Logo.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BCKLG_Logo from \"../../resources/BCKLG_Logo.svg\";\nimport BCKLG_Logo_vertical from \"../../resources/BCKLG_Logo_vertical.svg\";\n\nclass Logo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      logoSrc: BCKLG_Logo,\n      logoClasses: \"logo-img\",\n      navClasses: \"logo-img logo-img-link link logo-nav\",\n      vertClasses: \"logo-login logo-img logo-vert\",\n      inlineClasses: \"logo-img logo-inline\"\n    };\n\n    this.defineLogo = i_Page => {\n      if (i_Page === \"Login\") {\n        this.setState({\n          logoSrc: BCKLG_Logo_vertical\n        });\n      } else {\n        this.setState({\n          logoSrc: BCKLG_Logo\n        });\n      }\n\n      this.defineLogoClasses(this.props.logoType, i_Page);\n    };\n\n    this.defineLogoClasses = (i_LogoType, i_Context) => {\n      if (i_LogoType === \"nav\") {\n        this.setState({\n          logoClasses: this.state.navClasses\n        });\n      } else if (i_LogoType === \"vert\") {\n        this.setState({\n          logoClasses: this.state.vertClasses\n        });\n      } else if (i_LogoType === \"inline\") {\n        if (i_Context === \"Join\") {\n          const classes = `${this.state.inlineClasses} logo-join`;\n          this.setState({\n            logoClasses: classes\n          });\n        } else {\n          this.setState({\n            logoClasses: this.state.inlineClasses\n          });\n        }\n      }\n    };\n\n    this.renderLogo = i_Context => {\n      if (i_Context === \"home\") {\n        return React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: this.state.logoClasses,\n          src: this.state.logoSrc,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n      } else if (i_Context === \"bcklg\") {\n        return React.createElement(Link, {\n          to: \"/my-backlog\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: this.state.logoClasses,\n          src: this.state.logoSrc,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"img\", {\n          className: this.state.logoClasses,\n          src: this.state.logoSrc,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.currentPage !== undefined) {\n      this.defineLogo(this.props.currentPage);\n    } else if (this.props.navbarType !== undefined) {\n      this.defineLogo(this.props.navbarType);\n    }\n  }\n\n  render() {\n    return this.renderLogo(this.props.navbarType);\n  }\n\n}\n\nexport default Logo;","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/GitHub/BCKLG/src/components/UI Elements/Logo.js"],"names":["React","Component","Link","Logo","state","logoSrc","BCKLG_Logo","logoClasses","navClasses","vertClasses","inlineClasses","defineLogo","i_Page","setState","BCKLG_Logo_vertical","defineLogoClasses","props","logoType","i_LogoType","i_Context","classes","renderLogo","componentDidMount","currentPage","undefined","navbarType","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BCKLG_Logo from \"../../resources/BCKLG_Logo.svg\";\nimport BCKLG_Logo_vertical from \"../../resources/BCKLG_Logo_vertical.svg\";\n\nclass Logo extends Component {\n  state = {\n    logoSrc: BCKLG_Logo,\n    logoClasses: \"logo-img\",\n    navClasses: \"logo-img logo-img-link link logo-nav\",\n    vertClasses: \"logo-login logo-img logo-vert\",\n    inlineClasses: \"logo-img logo-inline\"\n  };\n\n  componentDidMount() {\n    if (this.props.currentPage !== undefined) {\n      this.defineLogo(this.props.currentPage);\n    } else if (this.props.navbarType !== undefined) {\n      this.defineLogo(this.props.navbarType);\n    }\n  }\n\n  defineLogo = i_Page => {\n    if (i_Page === \"Login\") {\n      this.setState({\n        logoSrc: BCKLG_Logo_vertical\n      });\n    } else {\n      this.setState({\n        logoSrc: BCKLG_Logo\n      });\n    }\n    this.defineLogoClasses(this.props.logoType, i_Page);\n  };\n\n  defineLogoClasses = (i_LogoType, i_Context) => {\n    if (i_LogoType === \"nav\") {\n      this.setState({\n        logoClasses: this.state.navClasses\n      });\n    } else if (i_LogoType === \"vert\") {\n      this.setState({\n        logoClasses: this.state.vertClasses\n      });\n    } else if (i_LogoType === \"inline\") {\n      if (i_Context === \"Join\") {\n        const classes = `${this.state.inlineClasses} logo-join`;\n        this.setState({\n          logoClasses: classes\n        });\n      } else {\n        this.setState({\n          logoClasses: this.state.inlineClasses\n        });\n      }\n    }\n  };\n\n  renderLogo = i_Context => {\n    if (i_Context === \"home\") {\n      return (\n        <Link to=\"/\">\n          <img\n            className={this.state.logoClasses}\n            src={this.state.logoSrc}\n            alt=\"\"\n          />\n        </Link>\n      );\n    } else if (i_Context === \"bcklg\") {\n      return (\n        <Link to=\"/my-backlog\">\n          <img\n            className={this.state.logoClasses}\n            src={this.state.logoSrc}\n            alt=\"\"\n          />\n        </Link>\n      );\n    } else {\n      return (\n        <img\n          className={this.state.logoClasses}\n          src={this.state.logoSrc}\n          alt=\"\"\n        />\n      );\n    }\n  };\n\n  render() {\n    return this.renderLogo(this.props.navbarType);\n  }\n}\n\nexport default Logo;\n"]},"metadata":{},"sourceType":"module"}