{"ast":null,"code":"var _jsxFileName = \"/Users/Idan/Projects/Dev/BCKLG/v2/BCKLG/bcklg/src/App.js\";\nimport React, { Component, useLayoutEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Content from \"./components/Content\";\nimport Footer from \"./components/Footer\";\nimport Game from \"./Game\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      navItems: [\"My Backlog\", \"Settings\", \"Account\"],\n      isLoaded: false,\n      games: [],\n      rawger: \"\",\n      pageIndex: 0,\n      navbarClasses: [],\n      username: \"idan91\",\n      myGames: [],\n      myPlatforms: []\n    };\n\n    this.addGameToList = i_Game => {\n      const myGameList = this.state.myGames;\n      const game = this.getGame(i_Game);\n      console.log(game.value); // const convertedGame = this.convertToGameObject(game, \"PS4\");\n      // console.log(convertedGame);\n      // myGameList.push(i_Game);\n      // this.setState({\n      //   myGames: myGameList\n      // });\n    };\n\n    this.startRawger = async () => {\n      const Rawger = require(\"rawger\");\n\n      await Rawger({}).then(data => {\n        this.setState({\n          rawger: data\n        });\n      });\n    };\n\n    this.getGame = async () => {\n      const Rawger = require(\"rawger\");\n\n      const _ref = await Rawger({}),\n            games = _ref.games;\n\n      const results = await games.get(\"the-witcher-3-wild-hunt\").then(result => {\n        return result.get();\n      }).then(data => {\n        return data.raw;\n      });\n      return results;\n    };\n\n    this.searchGame = async i_GameName => {\n      const Rawger = require(\"rawger\");\n\n      const _ref2 = await Rawger({}),\n            games = _ref2.games;\n\n      try {\n        const results = await games.search(i_GameName).then(result => {\n          return result.raw();\n        }).then(data => {\n          return data;\n        });\n        const filteredResults = results.filter(item => item.rating > 0);\n        return filteredResults;\n      } catch (error) {\n        return error.toString();\n      }\n    };\n\n    this.switchPage = event => {\n      const navItem = event.target.getAttribute(\"value\");\n      this.state.navItems.forEach((item, index) => {\n        if (item === navItem) {\n          this.setState({\n            pageIndex: index\n          });\n          this.defineNavbarClasses(index);\n        }\n      });\n    };\n\n    this.defineNavbarClasses = i_Index => {\n      const navItems = this.state.navItems;\n      let navClasses = [];\n      const defaultClasses = \"nav-link link\";\n\n      for (let i = 0; i < navItems.length; i++) {\n        if (i === i_Index) {\n          navClasses.push(`${defaultClasses} btn nav-selected`);\n        } else {\n          navClasses.push(`${defaultClasses}`);\n        }\n      }\n\n      this.setState({\n        navbarClasses: navClasses\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.rawg.io/api/games?dates=2019-01-01,2019-12-31&ordering=-added\").then(result => {\n      return result.json();\n    }).then(data => {\n      this.setState({\n        isLoaded: true,\n        games: data.results\n      });\n    });\n    this.startRawger();\n    this.defineNavbarClasses(this.state.pageIndex);\n  }\n\n  convertToGameObject(i_Game, i_Platform, i_Status = 1) {\n    return new Game(i_Game, i_Platform, i_Status);\n  }\n\n  render() {\n    console.log(\"My Games:\", this.state.myGames);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      navItems: this.state.navItems,\n      pageName: this.state.navItems[this.state.pageIndex],\n      pageIndex: this.state.pageIndex,\n      handleClick: this.switchPage,\n      classes: this.state.navbarClasses,\n      username: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"inner-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Content, {\n      pageName: this.state.navItems[this.state.pageIndex],\n      pageIndex: this.state.pageIndex,\n      games: this.state.games,\n      handleSearch: this.searchGame,\n      handleAddGame: this.addGameToList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/BCKLG/v2/BCKLG/bcklg/src/App.js"],"names":["React","Component","useLayoutEffect","Navbar","Content","Footer","Game","App","state","navItems","isLoaded","games","rawger","pageIndex","navbarClasses","username","myGames","myPlatforms","addGameToList","i_Game","myGameList","game","getGame","console","log","value","startRawger","Rawger","require","then","data","setState","results","get","result","raw","searchGame","i_GameName","search","filteredResults","filter","item","rating","error","toString","switchPage","event","navItem","target","getAttribute","forEach","index","defineNavbarClasses","i_Index","navClasses","defaultClasses","i","length","push","componentDidMount","fetch","json","convertToGameObject","i_Platform","i_Status","render"],"mappings":"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","sourcesContent":["import React, { Component, useLayoutEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Content from \"./components/Content\";\nimport Footer from \"./components/Footer\";\nimport Game from \"./Game\";\n\nclass App extends Component {\n  state = {\n    navItems: [\"My Backlog\", \"Settings\", \"Account\"],\n    isLoaded: false,\n    games: [],\n    rawger: \"\",\n    pageIndex: 0,\n    navbarClasses: [],\n    username: \"idan91\",\n    myGames: [],\n    myPlatforms: []\n  };\n\n  addGameToList = i_Game => {\n    const myGameList = this.state.myGames;\n\n    const game = this.getGame(i_Game);\n\n    console.log(game.value);\n\n    // const convertedGame = this.convertToGameObject(game, \"PS4\");\n\n    // console.log(convertedGame);\n\n    // myGameList.push(i_Game);\n\n    // this.setState({\n    //   myGames: myGameList\n    // });\n  };\n\n  componentDidMount() {\n    fetch(\n      \"https://api.rawg.io/api/games?dates=2019-01-01,2019-12-31&ordering=-added\"\n    )\n      .then(result => {\n        return result.json();\n      })\n      .then(data => {\n        this.setState({\n          isLoaded: true,\n          games: data.results\n        });\n      });\n\n    this.startRawger();\n\n    this.defineNavbarClasses(this.state.pageIndex);\n  }\n\n  startRawger = async () => {\n    const Rawger = require(\"rawger\");\n    await Rawger({}).then(data => {\n      this.setState({\n        rawger: data\n      });\n    });\n  };\n\n  getGame = async () => {\n    const Rawger = require(\"rawger\");\n    const { games } = await Rawger({});\n    const results = await games\n      .get(\"the-witcher-3-wild-hunt\")\n      .then(result => {\n        return result.get();\n      })\n      .then(data => {\n        return data.raw;\n      });\n\n    return results;\n  };\n\n  searchGame = async i_GameName => {\n    const Rawger = require(\"rawger\");\n    const { games } = await Rawger({});\n    try {\n      const results = await games\n        .search(i_GameName)\n        .then(result => {\n          return result.raw();\n        })\n        .then(data => {\n          return data;\n        });\n\n      const filteredResults = results.filter(item => item.rating > 0);\n\n      return filteredResults;\n    } catch (error) {\n      return error.toString();\n    }\n  };\n\n  convertToGameObject(i_Game, i_Platform, i_Status = 1) {\n    return new Game(i_Game, i_Platform, i_Status);\n  }\n\n  switchPage = event => {\n    const navItem = event.target.getAttribute(\"value\");\n\n    this.state.navItems.forEach((item, index) => {\n      if (item === navItem) {\n        this.setState({ pageIndex: index });\n        this.defineNavbarClasses(index);\n      }\n    });\n  };\n\n  defineNavbarClasses = i_Index => {\n    const navItems = this.state.navItems;\n    let navClasses = [];\n\n    const defaultClasses = \"nav-link link\";\n\n    for (let i = 0; i < navItems.length; i++) {\n      if (i === i_Index) {\n        navClasses.push(`${defaultClasses} btn nav-selected`);\n      } else {\n        navClasses.push(`${defaultClasses}`);\n      }\n    }\n    this.setState({\n      navbarClasses: navClasses\n    });\n  };\n\n  render() {\n    console.log(\"My Games:\", this.state.myGames);\n\n    return (\n      <React.Fragment>\n        <Navbar\n          navItems={this.state.navItems}\n          pageName={this.state.navItems[this.state.pageIndex]}\n          pageIndex={this.state.pageIndex}\n          handleClick={this.switchPage}\n          classes={this.state.navbarClasses}\n          username={this.state.username}\n        />\n        <div className=\"inner-body\">\n          <Content\n            pageName={this.state.navItems[this.state.pageIndex]}\n            pageIndex={this.state.pageIndex}\n            games={this.state.games}\n            handleSearch={this.searchGame}\n            handleAddGame={this.addGameToList}\n          />\n        </div>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}