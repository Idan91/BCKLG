{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nrequire('./fetchLoader');\n\nvar merge = require('lodash/merge');\n\nvar defaultHeaders = {\n  headers: {\n    'content-type': 'application/json',\n    'accept': 'application/json'\n  }\n};\n\nvar get = function get(cache, timeout, token) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(path) {\n        var options,\n            resp,\n            json,\n            timeoutID,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n                if (!(typeof cache[path] !== 'undefined')) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", cache[path].data);\n\n              case 3:\n                _context.next = 5;\n                return fetch(path, merge(options, {\n                  headers: {\n                    token: token\n                  }\n                }, defaultHeaders));\n\n              case 5:\n                resp = _context.sent;\n                _context.next = 8;\n                return resp.json();\n\n              case 8:\n                json = _context.sent;\n                // saves timeoutID for purging timers\n                timeoutID = setTimeout(function () {\n                  delete cache[path];\n                }, timeout);\n                cache[path] = {\n                  timeout: timeoutID,\n                  data: json\n                };\n                return _context.abrupt(\"return\", json);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar post = function post(token) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(path, data) {\n        var options,\n            resp,\n            json,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n                _context2.next = 3;\n                return fetch(path, merge(options, {\n                  method: 'POST',\n                  headers: {\n                    token: \"Token \".concat(token)\n                  },\n                  body: JSON.stringify(data)\n                }, defaultHeaders));\n\n              case 3:\n                resp = _context2.sent;\n                _context2.next = 6;\n                return resp.json();\n\n              case 6:\n                json = _context2.sent;\n                return _context2.abrupt(\"return\", json);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar patch = function patch(token) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(path, data) {\n        var options,\n            resp,\n            json,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n                _context3.next = 3;\n                return fetch(path, merge(options, {\n                  method: 'PATCH',\n                  headers: {\n                    token: \"Token \".concat(token)\n                  },\n                  body: JSON.stringify(data)\n                }, defaultHeaders));\n\n              case 3:\n                resp = _context3.sent;\n                _context3.next = 6;\n                return resp.json();\n\n              case 6:\n                json = _context3.sent;\n                return _context3.abrupt(\"return\", json);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nmodule.exports = function (cache, timeout, token) {\n  return {\n    get: get(cache, timeout, token),\n    post: post(token),\n    patch: patch(token)\n  };\n};","map":{"version":3,"sources":["/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/rawger/src/fetcher.js"],"names":["require","merge","defaultHeaders","headers","get","cache","timeout","token","path","options","data","fetch","resp","json","timeoutID","setTimeout","post","method","body","JSON","stringify","patch","module","exports"],"mappings":"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","sourcesContent":["require('./fetchLoader');\nconst merge = require('lodash/merge');\n\nconst defaultHeaders = {\n  headers: {\n    'content-type': 'application/json',\n    'accept': 'application/json'\n  }\n};\n\nconst get = (cache, timeout, token) => async (path, options = {}) => {\n  if (typeof cache[path] !== 'undefined') return cache[path].data;\n  \n  const resp = await fetch(path, merge(options, { headers: { token } }, defaultHeaders));\n  const json = await resp.json();\n\n  // saves timeoutID for purging timers\n  const timeoutID = setTimeout(() => { delete cache[path]; }, timeout);\n\n  cache[path] = {\n    timeout: timeoutID,\n    data: json\n  };\n  return json;\n}\n\nconst post = token => async (path, data, options = {}) => {\n  const resp = await fetch(path, merge(options, {\n    method: 'POST',\n    headers: { token: `Token ${token}` },\n    body: JSON.stringify(data)\n  }, defaultHeaders));\n  const json = await resp.json();\n  return json;\n}\n\nconst patch = token => async (path, data, options = {}) => {\n  const resp = await fetch(path, merge(options, {\n    method: 'PATCH',\n    headers: {\n      token: `Token ${token}`\n    },\n    body: JSON.stringify(data)\n  }, defaultHeaders));\n  const json = await resp.json();\n  return json;\n}\n\nmodule.exports = (cache, timeout, token) => ({\n  get: get(cache, timeout, token),\n  post: post(token),\n  patch: patch(token)\n});\n"]},"metadata":{},"sourceType":"script"}