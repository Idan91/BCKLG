{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/Idan/Projects/Dev/GitHub/BCKLG/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/Idan/Projects/Dev/GitHub/BCKLG/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('./utils'),\n    pather = _require.pather,\n    fetchPage = _require.fetchPage,\n    single = _require.single,\n    collection = _require.collection;\n\nvar formatters = require('./formatters');\n\nvar gamesPather = pather('games');\n\nvar search = function search(fetcher) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(game) {\n        var path, json, formatted;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                path = gamesPather('', null, \"?page_size=20&page=1&search=\".concat(game));\n                _context.next = 3;\n                return fetcher.get(path);\n\n              case 3:\n                json = _context.sent;\n                formatted = json.results.map(formatters.formatGame);\n                console.log('json');\n                return _context.abrupt(\"return\", collection(fetcher)(json, formatted, formatters.formatGame));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar get = function get(fetcher) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(slug) {\n        var path, json, formatted;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                path = gamesPather(slug);\n                _context2.next = 3;\n                return fetcher.get(path);\n\n              case 3:\n                json = _context2.sent;\n                formatted = formatters.formatGame(json);\n                return _context2.abrupt(\"return\", single(fetcher)(json, formatted));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nvar games = function games(fetcher) {\n  return {\n    search: search(fetcher),\n    get: get(fetcher)\n  };\n};\n\nmodule.exports = function (fetcher) {\n  return games(fetcher);\n};","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/GitHub/BCKLG/node_modules/rawger/src/games.js"],"names":["require","pather","fetchPage","single","collection","formatters","gamesPather","search","fetcher","game","path","get","json","formatted","results","map","formatGame","console","log","slug","games","module","exports"],"mappings":";;;;eAAkDA,OAAO,CAAC,SAAD,C;IAAjDC,M,YAAAA,M;IAAQC,S,YAAAA,S;IAAWC,M,YAAAA,M;IAAQC,U,YAAAA,U;;AACnC,IAAMC,UAAU,GAAGL,OAAO,CAAC,cAAD,CAA1B;;AAEA,IAAMM,WAAW,GAAGL,MAAM,CAAC,OAAD,CAA1B;;AAEA,IAAMM,MAAM,GAAG,SAATA,MAAS,CAAAC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,gBAAAA,IADkB,GACXJ,WAAW,CAAC,EAAD,EAAK,IAAL,wCAA0CG,IAA1C,EADA;AAAA;AAAA,uBAELD,OAAO,CAACG,GAAR,CAAYD,IAAZ,CAFK;;AAAA;AAElBE,gBAAAA,IAFkB;AAIlBC,gBAAAA,SAJkB,GAIND,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBV,UAAU,CAACW,UAA5B,CAJM;AAKxBC,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AALwB,iDAMjBd,UAAU,CAACI,OAAD,CAAV,CAAoBI,IAApB,EAA0BC,SAA1B,EAAqCR,UAAU,CAACW,UAAhD,CANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AASA,IAAML,GAAG,GAAG,SAANA,GAAM,CAAAH,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAMW,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACfT,gBAAAA,IADe,GACRJ,WAAW,CAACa,IAAD,CADH;AAAA;AAAA,uBAEFX,OAAO,CAACG,GAAR,CAAYD,IAAZ,CAFE;;AAAA;AAEfE,gBAAAA,IAFe;AAIfC,gBAAAA,SAJe,GAIHR,UAAU,CAACW,UAAX,CAAsBJ,IAAtB,CAJG;AAAA,kDAKdT,MAAM,CAACK,OAAD,CAAN,CAAgBI,IAAhB,EAAsBC,SAAtB,CALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAQA,IAAMO,KAAK,GAAG,SAARA,KAAQ,CAAAZ,OAAO;AAAA,SAAK;AACxBD,IAAAA,MAAM,EAAEA,MAAM,CAACC,OAAD,CADU;AAExBG,IAAAA,GAAG,EAAEA,GAAG,CAACH,OAAD;AAFgB,GAAL;AAAA,CAArB;;AAKAa,MAAM,CAACC,OAAP,GAAiB,UAAAd,OAAO;AAAA,SAAIY,KAAK,CAACZ,OAAD,CAAT;AAAA,CAAxB","sourcesContent":["const { pather, fetchPage, single, collection } = require('./utils');\nconst formatters = require('./formatters');\n\nconst gamesPather = pather('games');\n\nconst search = fetcher => async game => {\n  const path = gamesPather('', null, `?page_size=20&page=1&search=${game}`);\n  const json = await fetcher.get(path);\n\n  const formatted = json.results.map(formatters.formatGame);\n  console.log('json');\n  return collection(fetcher)(json, formatted, formatters.formatGame);\n};\n\nconst get = fetcher => async slug => {\n  const path = gamesPather(slug);\n  const json = await fetcher.get(path);\n\n  const formatted = formatters.formatGame(json);\n  return single(fetcher)(json, formatted);\n};\n\nconst games = fetcher => ({\n  search: search(fetcher),\n  get: get(fetcher)\n});\n\nmodule.exports = fetcher => games(fetcher);\n"]},"metadata":{},"sourceType":"script"}