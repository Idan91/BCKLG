{"ast":null,"code":"var _jsxFileName = \"/Users/Idan/Projects/Dev/GitHub/BCKLG/src/components/UI Elements/Card.js\";\nimport React, { Component } from \"react\";\nimport { parseRAWGDate } from \"../../util/UI_Utils\";\n\nclass Card extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      defaultClasses: \"game-card link\",\n      homeClasses: \"game-card-home game-card-add-game\",\n      addGameClasses: \"game-card game-card-add-game link\"\n    };\n\n    this.renderGameDetails = () => {\n      let status = \"\";\n      let platform = \"\";\n      let showRating = true;\n      const releaseDate = new Date(this.props.game.released);\n      const today = new Date();\n\n      if (releaseDate.getTime() >= today.getTime()) {\n        showRating = false;\n      }\n\n      if (this.props.currentPage === \"My Backlog\") {\n        status = React.createElement(\"div\", {\n          className: \"game-detail game-detail-line\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"game-detail game-detail-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Status:\"), React.createElement(\"p\", {\n          className: \"game-detail game-detail-value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, this.props.game.status));\n        platform = React.createElement(\"div\", {\n          className: `platform ${this.props.game.platform.slug}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: `platform-name`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, this.props.game.platform.name));\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-detail-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, showRating && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-detail-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"game-detail game-detail-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Rating:\"), React.createElement(\"p\", {\n        className: \"game-detail game-detail-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, `${this.props.game.rating} / 5`)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), !showRating && React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"game-detail-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"game-detail game-detail-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Release Date:\"), React.createElement(\"p\", {\n        className: \"game-detail game-detail-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, parseRAWGDate(this.props.game.released))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), status, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), platform);\n    };\n  }\n\n  render() {\n    let classes;\n\n    if (this.props.currentPage === \"Home\") {\n      classes = this.state.homeClasses;\n    } else if (this.props.currentPage === \"Add Game\") {\n      classes = this.state.addGameClasses;\n    } else {\n      classes = this.state.defaultClasses;\n    }\n\n    return React.createElement(\"div\", {\n      key: this.props.game.name,\n      className: `${classes}`,\n      onClick: this.props.handleClick,\n      game: this.props.game,\n      name: this.props.game.name,\n      slug: this.props.game.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"img-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"game-img\",\n      src: this.props.game.background_image,\n      alt: this.props.game.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"game-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.game.name)), this.renderGameDetails());\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/GitHub/BCKLG/src/components/UI Elements/Card.js"],"names":["React","Component","parseRAWGDate","Card","state","defaultClasses","homeClasses","addGameClasses","renderGameDetails","status","platform","showRating","releaseDate","Date","props","game","released","today","getTime","currentPage","slug","name","rating","render","classes","handleClick","background_image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { parseRAWGDate } from \"../../util/UI_Utils\";\n\nclass Card extends Component {\n  state = {\n    defaultClasses: \"game-card link\",\n    homeClasses: \"game-card-home game-card-add-game\",\n    addGameClasses: \"game-card game-card-add-game link\"\n  };\n\n  renderGameDetails = () => {\n    let status = \"\";\n    let platform = \"\";\n    let showRating = true;\n\n    const releaseDate = new Date(this.props.game.released);\n    const today = new Date();\n\n    if (releaseDate.getTime() >= today.getTime()) {\n      showRating = false;\n    }\n\n    if (this.props.currentPage === \"My Backlog\") {\n      status = (\n        <div className=\"game-detail game-detail-line\">\n          <p className=\"game-detail game-detail-label\">Status:</p>\n          <p className=\"game-detail game-detail-value\">\n            {this.props.game.status}\n          </p>\n        </div>\n      );\n\n      platform = (\n        <div className={`platform ${this.props.game.platform.slug}`}>\n          <p className={`platform-name`}>{this.props.game.platform.name}</p>\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"game-detail-container\">\n          {showRating && (\n            <React.Fragment>\n              <div className=\"game-detail-line\">\n                <p className=\"game-detail game-detail-label\">Rating:</p>\n                <p className=\"game-detail game-detail-value\">\n                  {`${this.props.game.rating} / 5`}\n                </p>\n              </div>\n              <br />\n            </React.Fragment>\n          )}\n          {!showRating && <br />}\n          <div className=\"game-detail-line\">\n            <p className=\"game-detail game-detail-label\">Release Date:</p>\n            <p className=\"game-detail game-detail-value\">\n              {parseRAWGDate(this.props.game.released)}\n            </p>\n          </div>\n          <br />\n          {status}\n          <br />\n        </div>\n        {platform}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    let classes;\n\n    if (this.props.currentPage === \"Home\") {\n      classes = this.state.homeClasses;\n    } else if (this.props.currentPage === \"Add Game\") {\n      classes = this.state.addGameClasses;\n    } else {\n      classes = this.state.defaultClasses;\n    }\n\n    return (\n      <div\n        key={this.props.game.name}\n        className={`${classes}`}\n        onClick={this.props.handleClick}\n        game={this.props.game}\n        name={this.props.game.name}\n        slug={this.props.game.slug}\n      >\n        <div className=\"img-container\">\n          <img\n            className=\"game-img\"\n            src={this.props.game.background_image}\n            alt={this.props.game.name}\n          />\n        </div>\n        <div className=\"title-container\">\n          <p className=\"game-title\">{this.props.game.name}</p>\n        </div>\n        {this.renderGameDetails()}\n      </div>\n    );\n  }\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}