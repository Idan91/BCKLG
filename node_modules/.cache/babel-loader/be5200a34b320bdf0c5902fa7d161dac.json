{"ast":null,"code":"var _defineProperty = require(\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/@babel/runtime/regenerator\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _require = require('./utils'),\n    pather = _require.pather,\n    fetchPage = _require.fetchPage,\n    single = _require.single,\n    collection = _require.collection;\n\nvar formatters = require('./formatters');\n\nvar usersPather = pather('users');\n\nvar games = function games(fetcher) {\n  return function (user) {\n    return function _callee(statuses) {\n      var filteredStatuses, path, json, formatted;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              filteredStatuses = typeof statuses === 'string' ? statuses : statuses.join(',');\n              path = usersPather(user, 'games', \"?page=1&statuses=\".concat(filteredStatuses));\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetcher.get(path));\n\n            case 4:\n              json = _context.sent;\n              formatted = json.results.map(formatters.formatGame);\n              return _context.abrupt(\"return\", collection(fetcher)(json, formatted, formatters.formatGame));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n  };\n};\n\nvar profile = function profile(fetcher) {\n  return function (user) {\n    return function _callee2() {\n      var path, json, formatted;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              path = usersPather(user);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(fetcher.get(path));\n\n            case 3:\n              json = _context2.sent;\n              formatted = formatters.formatProfile(json);\n              return _context2.abrupt(\"return\", single(fetcher)(json, formatted));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n  };\n};\n\nvar favorite = function favorite(fetcher) {\n  return function (user) {\n    return function _callee3() {\n      var path, json, formatted;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              path = usersPather(user, 'favorites');\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(fetcher.get(path));\n\n            case 3:\n              json = _context3.sent;\n              formatted = json.results.map(formatters.formatGame);\n              return _context3.abrupt(\"return\", collection(fetcher)(json, formatted, formatters.formatGame));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n  };\n};\n\nvar collections = function collections(fetcher) {\n  return function (user) {\n    return function _callee4() {\n      var path, json, formatted;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              path = usersPather(user, 'collections');\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(fetcher.get(path));\n\n            case 3:\n              json = _context4.sent;\n              formatted = json.results.map(formatters.formatCollection);\n              return _context4.abrupt(\"return\", collection(fetcher)(json, formatted, formatters.formatCollection));\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    };\n  };\n};\n\nvar reviews = function reviews(fetcher) {\n  return function (user) {\n    return function _callee5() {\n      var path, json, formatted;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              path = usersPather(user, 'reviews');\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(fetcher.get(path));\n\n            case 3:\n              json = _context5.sent;\n              formatted = json.results.map(formatters.formatReviews);\n              return _context5.abrupt(\"return\", collection(fetcher)(json, formatted, formatters.formatReviews));\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    };\n  };\n};\n\nvar update = function update(fetcher) {\n  return function (user) {\n    return function () {\n      return {\n        game: updateGame(fetcher)(user)\n      };\n    };\n  };\n};\n\nvar updateGame = function updateGame(fetcher) {\n  return function (user) {\n    return function _callee6(id, data) {\n      var path, json;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              path = usersPather('current', \"games/\".concat(id));\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(fetcher.patch(path, data));\n\n            case 3:\n              json = _context6.sent;\n              return _context6.abrupt(\"return\", single(fetcher)(json, _objectSpread({}, json, {\n                user: user\n              })));\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    };\n  };\n};\n\nvar users = function users(fetcher) {\n  return function (user) {\n    return {\n      profile: profile(fetcher)(user),\n      favorite: favorite(fetcher)(user),\n      games: games(fetcher)(user),\n      collections: collections(fetcher)(user),\n      reviews: reviews(fetcher)(user),\n      update: update(fetcher)(user)\n    };\n  };\n};\n\nmodule.exports = function (fetcher) {\n  return users(fetcher);\n};","map":{"version":3,"sources":["/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/rawger/src/users.js"],"names":["require","pather","fetchPage","single","collection","formatters","usersPather","games","fetcher","user","statuses","filteredStatuses","join","path","get","json","formatted","results","map","formatGame","profile","formatProfile","favorite","collections","formatCollection","reviews","formatReviews","update","game","updateGame","id","data","patch","users","module","exports"],"mappings":"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","sourcesContent":["const { pather, fetchPage, single, collection } = require('./utils');\nconst formatters = require('./formatters');\n\nconst usersPather = pather('users');\n\nconst games = fetcher => user => async statuses => {\n  const filteredStatuses =\n    typeof statuses === 'string' ? statuses : statuses.join(',');\n  const path = usersPather(\n    user,\n    'games',\n    `?page=1&statuses=${filteredStatuses}`\n  );\n  const json = await fetcher.get(path);\n\n  const formatted = json.results.map(formatters.formatGame);\n  return collection(fetcher)(json, formatted, formatters.formatGame);\n};\n\nconst profile = fetcher => user => async () => {\n  const path = usersPather(user);\n  const json = await fetcher.get(path);\n\n  const formatted = formatters.formatProfile(json);\n  return single(fetcher)(json, formatted);\n};\n\nconst favorite = fetcher => user => async () => {\n  const path = usersPather(user, 'favorites');\n  const json = await fetcher.get(path);\n\n  const formatted = json.results.map(formatters.formatGame);\n  return collection(fetcher)(json, formatted, formatters.formatGame);\n};\n\nconst collections = fetcher => user => async () => {\n  const path = usersPather(user, 'collections');\n  const json = await fetcher.get(path);\n\n  const formatted = json.results.map(formatters.formatCollection);\n  return collection(fetcher)(json, formatted, formatters.formatCollection);\n};\n\nconst reviews = fetcher => user => async () => {\n  const path = usersPather(user, 'reviews');\n  const json = await fetcher.get(path);\n\n  const formatted = json.results.map(formatters.formatReviews);\n  return collection(fetcher)(json, formatted, formatters.formatReviews);\n};\n\nconst update = fetcher => user => () => ({\n  game: updateGame(fetcher)(user)\n});\n\nconst updateGame = fetcher => user => async (id, data) => {\n  const path = usersPather('current', `games/${id}`);\n  const json = await fetcher.patch(path, data);\n\n  return single(fetcher)(json, { ...json, user });\n};\n\nconst users = fetcher => user => ({\n  profile: profile(fetcher)(user),\n  favorite: favorite(fetcher)(user),\n  games: games(fetcher)(user),\n  collections: collections(fetcher)(user),\n  reviews: reviews(fetcher)(user),\n  update: update(fetcher)(user)\n});\n\nmodule.exports = fetcher => users(fetcher);\n"]},"metadata":{},"sourceType":"script"}