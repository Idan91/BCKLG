{"ast":null,"code":"export const Rawger = require(\"rawger\");\nexport const startRawger = async () => {\n  const Rawger = require(\"rawger\");\n\n  await Rawger({}).then(data => {\n    this.setState({\n      rawger: data\n    });\n  });\n};\nexport const getGameFromApi = async i_GameSlug => {\n  const Rawger = require(\"rawger\");\n\n  const {\n    games\n  } = await Rawger({});\n  const results = await games.get(i_GameSlug).then(result => {\n    return result.get();\n  }).then(data => {\n    return data.raw;\n  });\n  return results;\n};\nexport const searchGame = async i_GameName => {\n  const Rawger = require(\"rawger\");\n\n  const {\n    games\n  } = await Rawger({});\n\n  try {\n    const results = await games.search(i_GameName).then(result => {\n      return result.raw();\n    }).then(data => {\n      return data;\n    });\n    const filteredResults = results.filter(item => item.rating > 0);\n    return filteredResults;\n  } catch (error) {\n    return error.toString();\n  }\n};","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/GitHub/BCKLG/src/model/Api.js"],"names":["Rawger","require","startRawger","then","data","setState","rawger","getGameFromApi","i_GameSlug","games","results","get","result","raw","searchGame","i_GameName","search","filteredResults","filter","item","rating","error","toString"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;AAEP,OAAO,MAAMC,WAAW,GAAG,YAAY;AACrC,QAAMF,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,QAAMD,MAAM,CAAC,EAAD,CAAN,CAAWG,IAAX,CAAgBC,IAAI,IAAI;AAC5B,SAAKC,QAAL,CAAc;AACZC,MAAAA,MAAM,EAAEF;AADI,KAAd;AAGD,GAJK,CAAN;AAKD,CAPM;AASP,OAAO,MAAMG,cAAc,GAAG,MAAMC,UAAN,IAAoB;AAChD,QAAMR,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAY,MAAMT,MAAM,CAAC,EAAD,CAA9B;AACA,QAAMU,OAAO,GAAG,MAAMD,KAAK,CACxBE,GADmB,CACfH,UADe,EAEnBL,IAFmB,CAEdS,MAAM,IAAI;AACd,WAAOA,MAAM,CAACD,GAAP,EAAP;AACD,GAJmB,EAKnBR,IALmB,CAKdC,IAAI,IAAI;AACZ,WAAOA,IAAI,CAACS,GAAZ;AACD,GAPmB,CAAtB;AASA,SAAOH,OAAP;AACD,CAbM;AAeP,OAAO,MAAMI,UAAU,GAAG,MAAMC,UAAN,IAAoB;AAC5C,QAAMf,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAY,MAAMT,MAAM,CAAC,EAAD,CAA9B;;AACA,MAAI;AACF,UAAMU,OAAO,GAAG,MAAMD,KAAK,CACxBO,MADmB,CACZD,UADY,EAEnBZ,IAFmB,CAEdS,MAAM,IAAI;AACd,aAAOA,MAAM,CAACC,GAAP,EAAP;AACD,KAJmB,EAKnBV,IALmB,CAKdC,IAAI,IAAI;AACZ,aAAOA,IAAP;AACD,KAPmB,CAAtB;AASA,UAAMa,eAAe,GAAGP,OAAO,CAACQ,MAAR,CAAeC,IAAI,IAAIA,IAAI,CAACC,MAAL,GAAc,CAArC,CAAxB;AAEA,WAAOH,eAAP;AACD,GAbD,CAaE,OAAOI,KAAP,EAAc;AACd,WAAOA,KAAK,CAACC,QAAN,EAAP;AACD;AACF,CAnBM","sourcesContent":["export const Rawger = require(\"rawger\");\n\nexport const startRawger = async () => {\n  const Rawger = require(\"rawger\");\n  await Rawger({}).then(data => {\n    this.setState({\n      rawger: data\n    });\n  });\n};\n\nexport const getGameFromApi = async i_GameSlug => {\n  const Rawger = require(\"rawger\");\n  const { games } = await Rawger({});\n  const results = await games\n    .get(i_GameSlug)\n    .then(result => {\n      return result.get();\n    })\n    .then(data => {\n      return data.raw;\n    });\n\n  return results;\n};\n\nexport const searchGame = async i_GameName => {\n  const Rawger = require(\"rawger\");\n  const { games } = await Rawger({});\n  try {\n    const results = await games\n      .search(i_GameName)\n      .then(result => {\n        return result.raw();\n      })\n      .then(data => {\n        return data;\n      });\n\n    const filteredResults = results.filter(item => item.rating > 0);\n\n    return filteredResults;\n  } catch (error) {\n    return error.toString();\n  }\n};\n"]},"metadata":{},"sourceType":"module"}