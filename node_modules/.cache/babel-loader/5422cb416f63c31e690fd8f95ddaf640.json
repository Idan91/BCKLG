{"ast":null,"code":"var _jsxFileName = \"/Users/Idan/Projects/Dev/BCKLG/v2/BCKLG/bcklg/src/App.js\";\nimport React, { Component, useLayoutEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Content from \"./components/Content\";\nimport Footer from \"./components/Footer\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      navItems: [\"My Backlog\", \"Settings\", \"Account\"],\n      isLoaded: false,\n      games: [],\n      rawger: \"\",\n      pageIndex: 0,\n      navbarClasses: []\n    };\n\n    this.startRawger = async () => {\n      const Rawger = require(\"rawger\");\n\n      await Rawger({}).then(data => {\n        this.setState({\n          rawger: data\n        });\n      });\n    };\n\n    this.searchGame = async () => {\n      const Rawger = require(\"rawger\");\n\n      const _ref = await Rawger({}),\n            games = _ref.games;\n\n      const results = await games.get(\"the-witcher-3-wild-hunt\").then(result => {\n        return result.get();\n      }).then(data => {\n        return data.raw;\n      });\n      return results;\n    };\n\n    this.switchPage = event => {\n      const navItem = event.target.getAttribute(\"value\");\n      this.state.navItems.forEach((item, index) => {\n        if (item === navItem) {\n          this.setState({\n            pageIndex: index\n          });\n          this.defineNavbarClasses(index);\n        }\n      });\n    };\n\n    this.defineNavbarClasses = i_Index => {\n      const navItems = this.state.navItems;\n      let navClasses = [];\n      const defaultClasses = \"nav-link link\";\n\n      for (let i = 0; i < navItems.length; i++) {\n        if (i === i_Index) {\n          navClasses.push(`${defaultClasses} nav-selected`);\n        } else {\n          navClasses.push(`${defaultClasses}`);\n        }\n      }\n\n      this.setState({\n        navbarClasses: navClasses\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.rawg.io/api/games?dates=2019-01-01,2019-12-31&ordering=-added\").then(result => {\n      return result.json();\n    }).then(data => {\n      this.setState({\n        isLoaded: true,\n        games: data.results\n      });\n    });\n    this.startRawger();\n    this.defineNavbarClasses(this.state.pageIndex);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      navItems: this.state.navItems,\n      pageName: this.state.navItems[this.state.pageIndex],\n      pageIndex: this.state.pageIndex,\n      handleClick: this.switchPage,\n      classes: this.state.navbarClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"inner-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Content, {\n      pageName: this.state.navItems[this.state.pageIndex],\n      pageIndex: this.state.pageIndex,\n      games: this.state.games,\n      handleSearch: this.searchGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/BCKLG/v2/BCKLG/bcklg/src/App.js"],"names":["React","Component","useLayoutEffect","Navbar","Content","Footer","App","state","navItems","isLoaded","games","rawger","pageIndex","navbarClasses","startRawger","Rawger","require","then","data","setState","searchGame","results","get","result","raw","switchPage","event","navItem","target","getAttribute","forEach","item","index","defineNavbarClasses","i_Index","navClasses","defaultClasses","i","length","push","componentDidMount","fetch","json","render"],"mappings":"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","sourcesContent":["import React, { Component, useLayoutEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Content from \"./components/Content\";\nimport Footer from \"./components/Footer\";\n\nclass App extends Component {\n  state = {\n    navItems: [\"My Backlog\", \"Settings\", \"Account\"],\n    isLoaded: false,\n    games: [],\n    rawger: \"\",\n    pageIndex: 0,\n    navbarClasses: []\n  };\n\n  componentDidMount() {\n    fetch(\n      \"https://api.rawg.io/api/games?dates=2019-01-01,2019-12-31&ordering=-added\"\n    )\n      .then(result => {\n        return result.json();\n      })\n      .then(data => {\n        this.setState({\n          isLoaded: true,\n          games: data.results\n        });\n      });\n\n    this.startRawger();\n\n    this.defineNavbarClasses(this.state.pageIndex);\n  }\n\n  startRawger = async () => {\n    const Rawger = require(\"rawger\");\n    await Rawger({}).then(data => {\n      this.setState({\n        rawger: data\n      });\n    });\n  };\n\n  searchGame = async () => {\n    const Rawger = require(\"rawger\");\n    const { games } = await Rawger({});\n    const results = await games\n      .get(\"the-witcher-3-wild-hunt\")\n      .then(result => {\n        return result.get();\n      })\n      .then(data => {\n        return data.raw;\n      });\n\n    return results;\n  };\n\n  switchPage = event => {\n    const navItem = event.target.getAttribute(\"value\");\n\n    this.state.navItems.forEach((item, index) => {\n      if (item === navItem) {\n        this.setState({ pageIndex: index });\n        this.defineNavbarClasses(index);\n      }\n    });\n  };\n\n  defineNavbarClasses = i_Index => {\n    const navItems = this.state.navItems;\n    let navClasses = [];\n\n    const defaultClasses = \"nav-link link\";\n\n    for (let i = 0; i < navItems.length; i++) {\n      if (i === i_Index) {\n        navClasses.push(`${defaultClasses} nav-selected`);\n      } else {\n        navClasses.push(`${defaultClasses}`);\n      }\n    }\n    this.setState({\n      navbarClasses: navClasses\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar\n          navItems={this.state.navItems}\n          pageName={this.state.navItems[this.state.pageIndex]}\n          pageIndex={this.state.pageIndex}\n          handleClick={this.switchPage}\n          classes={this.state.navbarClasses}\n        />\n        <div className=\"inner-body\">\n          <Content\n            pageName={this.state.navItems[this.state.pageIndex]}\n            pageIndex={this.state.pageIndex}\n            games={this.state.games}\n            handleSearch={this.searchGame}\n          />\n        </div>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}