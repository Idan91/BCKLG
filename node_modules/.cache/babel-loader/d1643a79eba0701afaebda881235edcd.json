{"ast":null,"code":"import { getStatusTypes } from \"./Status\";\n\nclass Game {\n  constructor(i_Game, i_Platform, i_Status, i_Priority) {\n    this.name = i_Game.name;\n    this.platform = this.assignPlatform(i_Game, i_Platform);\n    this.status = this.assignStatus(i_Status);\n    this.priority = i_Priority;\n    this.released = i_Game.released;\n    this.rating = i_Game.rating;\n    this.background_image = i_Game.background_image;\n    this.slug = i_Game.slug;\n    this.raw = i_Game;\n  }\n\n  assignStatus(i_Status) {\n    const statusTypes = getStatusTypes();\n    let gameStatus;\n    statusTypes.forEach(status => {\n      if (status === i_Status) {\n        gameStatus = i_Status;\n      }\n    });\n    return gameStatus;\n  }\n\n  assignPlatform(i_Game, i_Platform) {\n    let myPlatform = \"\";\n    i_Game.platforms.forEach(platform => {\n      if (platform.platform.name === i_Platform) {\n        myPlatform = platform.platform;\n      }\n    });\n    return myPlatform;\n  }\n\n  static convertToGameObject(i_Game, i_Platform, i_Status = 0) {\n    return new Game(i_Game, i_Platform, i_Status);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/GitHub/BCKLG/src/model/Game.js"],"names":["getStatusTypes","Game","constructor","i_Game","i_Platform","i_Status","i_Priority","name","platform","assignPlatform","status","assignStatus","priority","released","rating","background_image","slug","raw","statusTypes","gameStatus","forEach","myPlatform","platforms","convertToGameObject"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,MAAD,EAASC,UAAT,EAAqBC,QAArB,EAA+BC,UAA/B,EAA2C;AACpD,SAAKC,IAAL,GAAYJ,MAAM,CAACI,IAAnB;AACA,SAAKC,QAAL,GAAgB,KAAKC,cAAL,CAAoBN,MAApB,EAA4BC,UAA5B,CAAhB;AACA,SAAKM,MAAL,GAAc,KAAKC,YAAL,CAAkBN,QAAlB,CAAd;AACA,SAAKO,QAAL,GAAgBN,UAAhB;AACA,SAAKO,QAAL,GAAgBV,MAAM,CAACU,QAAvB;AACA,SAAKC,MAAL,GAAcX,MAAM,CAACW,MAArB;AACA,SAAKC,gBAAL,GAAwBZ,MAAM,CAACY,gBAA/B;AACA,SAAKC,IAAL,GAAYb,MAAM,CAACa,IAAnB;AACA,SAAKC,GAAL,GAAWd,MAAX;AACD;;AAEDQ,EAAAA,YAAY,CAACN,QAAD,EAAW;AACrB,UAAMa,WAAW,GAAGlB,cAAc,EAAlC;AACA,QAAImB,UAAJ;AAEAD,IAAAA,WAAW,CAACE,OAAZ,CAAoBV,MAAM,IAAI;AAC5B,UAAIA,MAAM,KAAKL,QAAf,EAAyB;AACvBc,QAAAA,UAAU,GAAGd,QAAb;AACD;AACF,KAJD;AAMA,WAAOc,UAAP;AACD;;AAEDV,EAAAA,cAAc,CAACN,MAAD,EAASC,UAAT,EAAqB;AACjC,QAAIiB,UAAU,GAAG,EAAjB;AACAlB,IAAAA,MAAM,CAACmB,SAAP,CAAiBF,OAAjB,CAAyBZ,QAAQ,IAAI;AACnC,UAAIA,QAAQ,CAACA,QAAT,CAAkBD,IAAlB,KAA2BH,UAA/B,EAA2C;AACzCiB,QAAAA,UAAU,GAAGb,QAAQ,CAACA,QAAtB;AACD;AACF,KAJD;AAKA,WAAOa,UAAP;AACD;;AAED,SAAOE,mBAAP,CAA2BpB,MAA3B,EAAmCC,UAAnC,EAA+CC,QAAQ,GAAG,CAA1D,EAA6D;AAC3D,WAAO,IAAIJ,IAAJ,CAASE,MAAT,EAAiBC,UAAjB,EAA6BC,QAA7B,CAAP;AACD;;AAtCQ;;AAyCX,eAAeJ,IAAf","sourcesContent":["import { getStatusTypes } from \"./Status\";\n\nclass Game {\n  constructor(i_Game, i_Platform, i_Status, i_Priority) {\n    this.name = i_Game.name;\n    this.platform = this.assignPlatform(i_Game, i_Platform);\n    this.status = this.assignStatus(i_Status);\n    this.priority = i_Priority;\n    this.released = i_Game.released;\n    this.rating = i_Game.rating;\n    this.background_image = i_Game.background_image;\n    this.slug = i_Game.slug;\n    this.raw = i_Game;\n  }\n\n  assignStatus(i_Status) {\n    const statusTypes = getStatusTypes();\n    let gameStatus;\n\n    statusTypes.forEach(status => {\n      if (status === i_Status) {\n        gameStatus = i_Status;\n      }\n    });\n\n    return gameStatus;\n  }\n\n  assignPlatform(i_Game, i_Platform) {\n    let myPlatform = \"\";\n    i_Game.platforms.forEach(platform => {\n      if (platform.platform.name === i_Platform) {\n        myPlatform = platform.platform;\n      }\n    });\n    return myPlatform;\n  }\n\n  static convertToGameObject(i_Game, i_Platform, i_Status = 0) {\n    return new Game(i_Game, i_Platform, i_Status);\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}