{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Cards from\"../UI Elements/Cards\";import Game from\"../../model/Game\";import{getGameFromApi,searchGame}from\"../../model/Api\";import{loadUserDataFromProps}from\"../../util/Utils\";import{updateGames}from\"../../redux/actions/userActions\";// Redux\nimport{connect}from\"react-redux\";var AddGame=/*#__PURE__*/function(_Component){_inherits(AddGame,_Component);function AddGame(){var _getPrototypeOf2;var _this;_classCallCheck(this,AddGame);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(AddGame)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={searchResults:[],query:\"\",year:2020,errorMessage:\"Could not find game! Please try again\",displayErrorMessage:false,searchInitiated:false,searchVisible:true,gameBuffer:[]};_this.handleInputChange=function(event){var newQuery=event.target.value;_this.setState({query:newQuery});};_this.handleSubmitSearch=function(event){_this.renderSearchResults(_this.state.query);};_this.renderSearchResults=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(i_GameName){var allResults,results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.setState({displayErrorMessage:false});allResults=[];_context.next=4;return searchGame(i_GameName).then(function(data){return data;}).catch(function(err){console.log(err);});case 4:results=_context.sent;if(!(typeof results===typeof\"string\")){_context.next=8;break;}_this.setState({displayErrorMessage:true});return _context.abrupt(\"return\");case 8:allResults=results;_this.setState({searchResults:allResults,searchInitiated:true});case 10:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.populateYears=function(){var currentYear=new Date().getFullYear();var yearArray=[];for(var i=currentYear;i>1969;i--){yearArray.push(React.createElement(\"option\",{className:\"year\",key:i,value:i},i));}return yearArray;};_this.handleKeyDown=function(event){if(event.keyCode===13){_this.renderSearchResults(_this.state.query);}};_this.handleChange=function(event){var value=event.target.value;_this.setState({year:value});};_this.handleSearchPreset=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var name,year,linkSuffix;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:name=event.target.name;year=_this.state.year;if(name===\"Most Popular\"){linkSuffix=\"added\";}else{linkSuffix=\"rating\";}fetch(\"https://api.rawg.io/api/games?dates=\".concat(year,\"-01-01,\").concat(year,\"-12-31&ordering=-\").concat(linkSuffix)).then(function(result){return result.json();}).then(function(data){_this.setState({searchResults:data.results});});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();_this.toggleSearchVisibility=function(){if(_this.state.searchVisible){_this.setState({searchVisible:false});}else{_this.setState({searchVisible:true});}};_this.gameExists=function(i_Game,i_GameList){var exists=false;if(i_GameList!==undefined&&i_GameList.length>0){i_GameList.forEach(function(game){if(game.slug===i_Game){exists=true;}});}return exists;};_this.addGameToList=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(i_Game,i_Platform,i_Status){var _loadUserDataFromProp,username,games,myGameList,gameExists,game;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_loadUserDataFromProp=loadUserDataFromProps(_this.props),username=_loadUserDataFromProp.username,games=_loadUserDataFromProp.games;myGameList=games;gameExists=_this.gameExists(i_Game,myGameList);if(!gameExists){_context3.next=7;break;}alert(\"Game already exits!\");_context3.next=12;break;case 7:_context3.next=9;return getGameFromApi(i_Game).then(function(data){return data;}).then(function(resolvedGame){var convertedGame=Game.convertToGameObject(resolvedGame,i_Platform,i_Status);return convertedGame;}).catch(function(e){console.log(e);});case 9:game=_context3.sent;if(myGameList!==undefined&&myGameList.length>0){myGameList.unshift(game);}else{myGameList=[game];}_this.props.updateGames(username,myGameList);case 12:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3,_x4,_x5){return _ref3.apply(this,arguments);};}();_this.renderSearchContainer=function(){if(_this.state.searchVisible){return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"search-container\"},React.createElement(\"div\",{className:\"search\"},React.createElement(\"input\",{type:\"text\",className:\"search-box\",placeholder:\"Which game are you looking for?\",value:_this.state.query,onChange:_this.handleInputChange,onKeyDown:_this.handleKeyDown}),React.createElement(\"button\",{className:\"btn-search link\",onClick:_this.handleSubmitSearch},\"Search\")),React.createElement(\"div\",{className:\"search-presets\"},React.createElement(\"button\",{className:\"btn-search link preset\",onClick:_this.handleSearchPreset,name:\"Most Popular\"},\"Most Popular\"),React.createElement(\"button\",{className:\"btn-search link preset\",onClick:_this.handleSearchPreset,name:\"Highest Rated\"},\"Highest Rated\"),React.createElement(\"select\",{className:\"btn-search link preset year-select\",onChange:_this.handleChange},_this.populateYears()))));}};return _this;}_createClass(AddGame,[{key:\"renderItems\",value:function renderItems(){if(this.state.displayErrorMessage||this.state.searchResults.length<1&&this.state.searchInitiated){return React.createElement(\"h2\",null,this.state.errorMessage);}else{return React.createElement(\"div\",{className:\"content\"},React.createElement(\"div\",{className:\"content card-container\"},React.createElement(Cards,{games:this.state.searchResults,parentComponent:\"Add Game\",currentPage:\"Add Game\",handleAddGame:this.addGameToList,handleGetGameFromApi:getGameFromApi,handleGetGameFromList:this.props.handleGetGameFromList,handleSearchVisibility:this.toggleSearchVisibility})));}}},{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"center-container\"},React.createElement(\"h1\",{className:\"page-title page-title-sml\"},\"Add Game\"),this.renderSearchContainer(),this.renderItems()));}}]);return AddGame;}(Component);var mapActionsToProps={updateGames:updateGames};var mapStateToProps=function mapStateToProps(state){return{user:state.user,UI:state.UI};};export default connect(mapStateToProps,mapActionsToProps)(AddGame);","map":{"version":3,"sources":["/Users/Idan/Documents/GitHub/Idan91/BCKLG/bcklg/src/components/BCKLG Pages/AddGame.js"],"names":["React","Component","Cards","Game","getGameFromApi","searchGame","loadUserDataFromProps","updateGames","connect","AddGame","state","searchResults","query","year","errorMessage","displayErrorMessage","searchInitiated","searchVisible","gameBuffer","handleInputChange","event","newQuery","target","value","setState","handleSubmitSearch","renderSearchResults","i_GameName","allResults","then","data","catch","err","console","log","results","populateYears","currentYear","Date","getFullYear","yearArray","i","push","handleKeyDown","keyCode","handleChange","handleSearchPreset","name","linkSuffix","fetch","result","json","toggleSearchVisibility","gameExists","i_Game","i_GameList","exists","undefined","length","forEach","game","slug","addGameToList","i_Platform","i_Status","props","username","games","myGameList","alert","resolvedGame","convertedGame","convertToGameObject","e","unshift","renderSearchContainer","handleGetGameFromList","renderItems","mapActionsToProps","mapStateToProps","user","UI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cards from \"../UI Elements/Cards\";\nimport Game from \"../../model/Game\";\nimport { getGameFromApi, searchGame } from \"../../model/Api\";\nimport { loadUserDataFromProps } from \"../../util/Utils\";\nimport { updateGames } from \"../../redux/actions/userActions\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\n\nclass AddGame extends Component {\n  state = {\n    searchResults: [],\n    query: \"\",\n    year: 2020,\n    errorMessage: \"Could not find game! Please try again\",\n    displayErrorMessage: false,\n    searchInitiated: false,\n    searchVisible: true,\n    gameBuffer: []\n  };\n\n  handleInputChange = event => {\n    let newQuery = event.target.value;\n    this.setState({\n      query: newQuery\n    });\n  };\n\n  handleSubmitSearch = event => {\n    this.renderSearchResults(this.state.query);\n  };\n\n  renderSearchResults = async i_GameName => {\n    this.setState({\n      displayErrorMessage: false\n    });\n\n    let allResults = [];\n\n    let results = await searchGame(i_GameName)\n      .then(data => {\n        return data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    if (typeof results === typeof \"string\") {\n      this.setState({ displayErrorMessage: true });\n      return;\n    }\n\n    allResults = results;\n\n    this.setState({\n      searchResults: allResults,\n      searchInitiated: true\n    });\n  };\n\n  renderItems() {\n    if (\n      this.state.displayErrorMessage ||\n      (this.state.searchResults.length < 1 && this.state.searchInitiated)\n    ) {\n      return <h2>{this.state.errorMessage}</h2>;\n    } else {\n      return (\n        <div className=\"content\">\n          <div className=\"content card-container\">\n            <Cards\n              games={this.state.searchResults}\n              parentComponent={\"Add Game\"}\n              currentPage={\"Add Game\"}\n              handleAddGame={this.addGameToList}\n              handleGetGameFromApi={getGameFromApi}\n              handleGetGameFromList={this.props.handleGetGameFromList}\n              handleSearchVisibility={this.toggleSearchVisibility}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  populateYears = () => {\n    const currentYear = new Date().getFullYear();\n\n    let yearArray = [];\n\n    for (let i = currentYear; i > 1969; i--) {\n      yearArray.push(\n        <option className=\"year\" key={i} value={i}>\n          {i}\n        </option>\n      );\n    }\n\n    return yearArray;\n  };\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13) {\n      this.renderSearchResults(this.state.query);\n    }\n  };\n\n  handleChange = event => {\n    const { value } = event.target;\n    this.setState({\n      year: value\n    });\n  };\n\n  handleSearchPreset = async event => {\n    const { name } = event.target;\n    const year = this.state.year;\n    let linkSuffix;\n\n    if (name === \"Most Popular\") {\n      linkSuffix = `added`;\n    } else {\n      linkSuffix = `rating`;\n    }\n\n    fetch(\n      `https://api.rawg.io/api/games?dates=${year}-01-01,${year}-12-31&ordering=-${linkSuffix}`\n    )\n      .then(result => {\n        return result.json();\n      })\n      .then(data => {\n        this.setState({\n          searchResults: data.results\n        });\n      });\n  };\n\n  toggleSearchVisibility = () => {\n    if (this.state.searchVisible) {\n      this.setState({\n        searchVisible: false\n      });\n    } else {\n      this.setState({\n        searchVisible: true\n      });\n    }\n  };\n\n  gameExists = (i_Game, i_GameList) => {\n    let exists = false;\n\n    if (i_GameList !== undefined && i_GameList.length > 0) {\n      i_GameList.forEach(game => {\n        if (game.slug === i_Game) {\n          exists = true;\n        }\n      });\n    }\n\n    return exists;\n  };\n\n  addGameToList = async (i_Game, i_Platform, i_Status) => {\n    const { username, games } = loadUserDataFromProps(this.props);\n\n    let myGameList = games;\n\n    const gameExists = this.gameExists(i_Game, myGameList);\n\n    if (gameExists) {\n      alert(\"Game already exits!\");\n    } else {\n      let game = await getGameFromApi(i_Game)\n        .then(data => {\n          return data;\n        })\n        .then(resolvedGame => {\n          const convertedGame = Game.convertToGameObject(\n            resolvedGame,\n            i_Platform,\n            i_Status\n          );\n\n          return convertedGame;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n\n      if (myGameList !== undefined && myGameList.length > 0) {\n        myGameList.unshift(game);\n      } else {\n        myGameList = [game];\n      }\n\n      this.props.updateGames(username, myGameList);\n    }\n  };\n\n  // handleClose = () => {\n  //   this.props.history.push(\"/my-backlog\");\n  // };\n\n  renderSearchContainer = () => {\n    if (this.state.searchVisible) {\n      return (\n        <React.Fragment>\n          {/* <div className=\"sub-page-header\">\n            <button className=\"btn link btn-close\" onClick={this.handleClose}>\n              Close\n            </button>\n          </div> */}\n          <div className=\"search-container\">\n            <div className=\"search\">\n              <input\n                type=\"text\"\n                className=\"search-box\"\n                placeholder=\"Which game are you looking for?\"\n                value={this.state.query}\n                onChange={this.handleInputChange}\n                onKeyDown={this.handleKeyDown}\n              ></input>\n              <button\n                className=\"btn-search link\"\n                onClick={this.handleSubmitSearch}\n              >\n                Search\n              </button>\n            </div>\n            <div className=\"search-presets\">\n              <button\n                className=\"btn-search link preset\"\n                onClick={this.handleSearchPreset}\n                name=\"Most Popular\"\n              >\n                Most Popular\n              </button>\n              <button\n                className=\"btn-search link preset\"\n                onClick={this.handleSearchPreset}\n                name=\"Highest Rated\"\n              >\n                Highest Rated\n              </button>\n              <select\n                className=\"btn-search link preset year-select\"\n                onChange={this.handleChange}\n              >\n                {this.populateYears()}\n              </select>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {/* <div className=\"inner-body\"> */}\n        {/* <h1 className=\"page-title\">Add Game</h1> */}\n        {/* <div className=\"main\"> */}\n        <div className=\"center-container\">\n          <h1 className=\"page-title page-title-sml\">Add Game</h1>\n          {this.renderSearchContainer()}\n          {this.renderItems()}\n        </div>\n        {/* </div>\n        </div> */}\n      </React.Fragment>\n    );\n  }\n}\n\nAddGame.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  updateGames: PropTypes.func.isRequired\n};\n\nconst mapActionsToProps = { updateGames };\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, mapActionsToProps)(AddGame);\n"]},"metadata":{},"sourceType":"module"}