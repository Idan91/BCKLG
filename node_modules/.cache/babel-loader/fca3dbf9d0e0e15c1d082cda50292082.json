{"ast":null,"code":"import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, LOADING_USER, SET_UNAUTHENTICATED } from \"../types\";\nimport axios from \"axios\";\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post(\"/login\", userData).then(result => {\n    setAuthrizationHeader(result.data.token);\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push(\"/my-backlog\");\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // export const signInWithFacebook = history => dispatch => {\n//   const provider = new firebase.auth.FacebookAuthProvider();\n//   firebase\n//     .auth()\n//     .signInWithPopup(provider)\n//     .then(result => {\n//       const token = result.credential.accessToken;\n//       const user = result.user;\n//       console.log(\"reuslt\", result);\n//       return { token, user };\n//     })\n//     .then(data => {\n//       const { token, user } = data;\n//       console.log(\"data\", data);\n//       setAuthrizationHeader(token);\n//       dispatch(getUserData());\n//       dispatch({ type: CLEAR_ERRORS });\n//       history.push(\"/my-backlog\");\n//     })\n//     .catch(err => {\n//       console.error(err);\n//     });\n// };\n\nexport const signupUser = (newUserData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post(\"/signup\", newUserData).then(() => {\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    history.push(\"/login\");\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"firebaseIdToken\");\n  delete axios.defaults.headers.common[\"Authorization\"];\n  dispatch({\n    type: SET_UNAUTHENTICATED\n  });\n};\nexport const getUserData = () => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.get(\"/user\").then(result => {\n    dispatch({\n      type: SET_USER,\n      payload: result.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const sendPasswordResetEmail = i_Email => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  const resetPasswordRequest = {\n    email: i_Email\n  };\n  axios.post(\"/user/reset-password\", resetPasswordRequest).then(() => {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n    window.alert(`You should recieve password reset instructions ${resetPasswordRequest.email} shortly`);\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n    console.log(err);\n  });\n};\nexport const sendEmailVerification = () => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  return new Promise((resolve, reject) => {\n    axios.post(\"/user/email-verification\").then(() => {\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      dispatch(getUserData());\n      let emailVerificationMsg = \"Email verification instructions sent.\";\n      window.alert(emailVerificationMsg);\n      resolve(true);\n    }).catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n      console.log(err);\n      reject(false);\n    });\n  });\n};\nexport const updateUserPassword = i_UpdateRequest => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  const updateRequest = {\n    email: i_UpdateRequest.email,\n    currentPassword: i_UpdateRequest.currentPassword,\n    newPassword: i_UpdateRequest.newPassword,\n    confirmNewPassword: i_UpdateRequest.confirmNewPassword\n  };\n  return new Promise((resolve, reject) => {\n    axios.post(\"/user/update-password\", updateRequest).then(() => {\n      dispatch({\n        type: CLEAR_ERRORS\n      });\n      dispatch(getUserData());\n      let updateSuccessfullMsg = \"Password updated successfully\";\n      window.alert(updateSuccessfullMsg);\n      resolve(true);\n    }).catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n      console.log(err);\n      reject(false);\n    });\n  });\n};\nexport const updateGames = (username, gameList) => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  const updateRequest = {\n    username: username,\n    games: gameList\n  };\n  axios.post(\"user/games/update\", updateRequest).then(() => {\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  }).catch(err => console.log(err));\n};\nexport const deleteAccount = i_Username => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  axios.post(\"user/delete\", i_Username).then(() => {\n    dispatch(logoutUser());\n  }).catch(err => console.log(err));\n};\n\nconst setAuthrizationHeader = token => {\n  const firebaseIdToken = `Bearer ${token}`;\n  localStorage.setItem(\"firebaseIdToken\", firebaseIdToken);\n  axios.defaults.headers.common[\"Authorization\"] = firebaseIdToken;\n};","map":{"version":3,"sources":["/Users/Idan/Projects/Dev/GitHub/BCKLG/src/redux/actions/userActions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","LOADING_USER","SET_UNAUTHENTICATED","axios","loginUser","userData","history","dispatch","type","post","then","result","setAuthrizationHeader","data","token","getUserData","push","catch","err","payload","response","signupUser","newUserData","logoutUser","localStorage","removeItem","defaults","headers","common","get","console","log","sendPasswordResetEmail","i_Email","resetPasswordRequest","email","window","alert","sendEmailVerification","Promise","resolve","reject","emailVerificationMsg","updateUserPassword","i_UpdateRequest","updateRequest","currentPassword","newPassword","confirmNewPassword","updateSuccessfullMsg","updateGames","username","gameList","games","deleteAccount","i_Username","firebaseIdToken","setItem"],"mappings":"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","sourcesContent":["import {\n  SET_USER,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  LOADING_USER,\n  SET_UNAUTHENTICATED\n} from \"../types\";\nimport axios from \"axios\";\n\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/login\", userData)\n    .then(result => {\n      setAuthrizationHeader(result.data.token);\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push(\"/my-backlog\");\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\n// export const signInWithFacebook = history => dispatch => {\n//   const provider = new firebase.auth.FacebookAuthProvider();\n\n//   firebase\n//     .auth()\n//     .signInWithPopup(provider)\n//     .then(result => {\n//       const token = result.credential.accessToken;\n//       const user = result.user;\n\n//       console.log(\"reuslt\", result);\n\n//       return { token, user };\n//     })\n//     .then(data => {\n//       const { token, user } = data;\n\n//       console.log(\"data\", data);\n\n//       setAuthrizationHeader(token);\n//       dispatch(getUserData());\n//       dispatch({ type: CLEAR_ERRORS });\n//       history.push(\"/my-backlog\");\n//     })\n//     .catch(err => {\n//       console.error(err);\n//     });\n// };\n\nexport const signupUser = (newUserData, history) => dispatch => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/signup\", newUserData)\n    .then(() => {\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push(\"/login\");\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"firebaseIdToken\");\n  delete axios.defaults.headers.common[\"Authorization\"];\n  dispatch({ type: SET_UNAUTHENTICATED });\n};\n\nexport const getUserData = () => dispatch => {\n  dispatch({ type: LOADING_USER });\n\n  axios\n    .get(\"/user\")\n    .then(result => {\n      dispatch({\n        type: SET_USER,\n        payload: result.data\n      });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const sendPasswordResetEmail = i_Email => dispatch => {\n  dispatch({ type: LOADING_UI });\n\n  const resetPasswordRequest = {\n    email: i_Email\n  };\n\n  axios\n    .post(\"/user/reset-password\", resetPasswordRequest)\n    .then(() => {\n      dispatch({ type: CLEAR_ERRORS });\n      window.alert(\n        `You should recieve password reset instructions ${resetPasswordRequest.email} shortly`\n      );\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n      console.log(err);\n    });\n};\n\nexport const sendEmailVerification = () => dispatch => {\n  dispatch({ type: LOADING_UI });\n\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\"/user/email-verification\")\n      .then(() => {\n        dispatch({ type: CLEAR_ERRORS });\n        dispatch(getUserData());\n        let emailVerificationMsg = \"Email verification instructions sent.\";\n        window.alert(emailVerificationMsg);\n        resolve(true);\n      })\n      .catch(err => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n        });\n        console.log(err);\n        reject(false);\n      });\n  });\n};\n\nexport const updateUserPassword = i_UpdateRequest => dispatch => {\n  dispatch({ type: LOADING_UI });\n\n  const updateRequest = {\n    email: i_UpdateRequest.email,\n    currentPassword: i_UpdateRequest.currentPassword,\n    newPassword: i_UpdateRequest.newPassword,\n    confirmNewPassword: i_UpdateRequest.confirmNewPassword\n  };\n\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\"/user/update-password\", updateRequest)\n      .then(() => {\n        dispatch({ type: CLEAR_ERRORS });\n        dispatch(getUserData());\n        let updateSuccessfullMsg = \"Password updated successfully\";\n        window.alert(updateSuccessfullMsg);\n        resolve(true);\n      })\n      .catch(err => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n        });\n        console.log(err);\n        reject(false);\n      });\n  });\n};\n\nexport const updateGames = (username, gameList) => dispatch => {\n  dispatch({ type: LOADING_USER });\n  const updateRequest = {\n    username: username,\n    games: gameList\n  };\n  axios\n    .post(\"user/games/update\", updateRequest)\n    .then(() => {\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const deleteAccount = i_Username => dispatch => {\n  dispatch({ type: LOADING_USER });\n  axios\n    .post(\"user/delete\", i_Username)\n    .then(() => {\n      dispatch(logoutUser());\n    })\n    .catch(err => console.log(err));\n};\n\nconst setAuthrizationHeader = token => {\n  const firebaseIdToken = `Bearer ${token}`;\n  localStorage.setItem(\"firebaseIdToken\", firebaseIdToken);\n  axios.defaults.headers.common[\"Authorization\"] = firebaseIdToken;\n};\n"]},"metadata":{},"sourceType":"module"}