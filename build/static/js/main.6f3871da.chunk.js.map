{"version":3,"sources":["resources/BCKLG_Logo_vertical.svg","resources/google_G.svg","redux/reducers/userReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","util/AuthRoute.js","components/UI Elements/NavItem.js","components/UI Elements/Logo.js","util/Utils.js","components/UI Elements/Navbar.js","components/UI Elements/Footer.js","util/UI_Utils.js","components/UI Elements/Card.js","model/Api.js","components/Home Pages/home.js","components/Home Pages/signup.js","components/Home Pages/login.js","components/UI Elements/GameFocus.js","model/Status.js","components/UI Elements/Cards.js","components/BCKLG Pages/MyBacklog.js","model/Game.js","components/BCKLG Pages/BCKLG.js","components/BCKLG Pages/AddGame.js","components/BCKLG Pages/Account.js","App.js","serviceWorker.js","index.js","resources/BCKLG_Logo.svg"],"names":["module","exports","initialState","authenticated","loading","credentials","games","initiailState","errors","middleware","thunk","reducers","combineReducers","user","state","action","type","payload","UI","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","result","data","catch","err","console","log","updateGames","username","gameList","updateRequest","post","setAuthrizationHeader","token","firebaseIdToken","setItem","AuthRoute","Component","component","rest","render","props","to","protoTypes","PropTypes","object","isRequired","connect","NavItem","Fragment","className","key","value","onClick","handleClick","link","defaultClasses","activeClassName","selectedClasses","Logo","logoSrc","BCKLG_Logo","logoClasses","navClasses","vertClasses","inlineClasses","defineLogo","i_Page","setState","BCKLG_Logo_vertical","defineLogoClasses","logoType","i_LogoType","i_Context","classes","renderLogo","src","alt","undefined","this","currentPage","navbarType","loadUserDataFromProps","i_Props","emailVerified","Navbar","homePaths","bcklgPaths","popupVisible","convertPageName","i_PageName","convertedPageName","splitPageName","split","length","toLowerCase","i","getNavbarType","pathname","location","forEach","path","handleNavItemClick","drawNabBar","navbar","navItem","homeNav","bcklgNav","page","index","push","React","cloneElement","setNavPaths","mapNavPathsfromArray","i_StarterPaths","i_NavItems","navPaths","map","unshift","handleLogout","confirm","history","renderUserPopup","handleUserButtonClick","drawUserButton","i_Username","mapActionsToProps","withRouter","Footer","parseRAWGDate","i_DateString","test","date","year","month","parseInt","day","Card","homeClasses","addGameClasses","addedStyle","preAnimationStyle","animationStyle","_isMounted","renderGameDetails","status","platform","gameReleased","releaseDate","Date","game","released","today","getTime","slug","name","rating","animate","setTimeout","delay","numOfGames","handleStopStartupAnimation","parentComponent","background_image","getGameFromApi","require","i_GameSlug","a","Rawger","raw","results","searchGame","i_GameName","search","filteredResults","filter","item","toString","Home","gameCard","renderGameCard","i_Game","renderHomeContent","signup","email","password","confirmPassword","handleInputChange","event","target","handleKeyDown","keyCode","handleSubmit","preventDefault","newUserData","signupUser","nextProps","onSubmit","placeholder","onChange","onKeyDown","general","response","login","emailForgot","forgotVisible","emailSignIn","userData","loginUser","handleForgotPassword","handleResetEmail","sendPasswordResetEmail","alert","renderForgotPassword","i_Errors","renderLoginForm","i_Loading","renderSignInMethods","googleIcon","handleEmailSignIn","renderLoginPage","i_Email","resetPasswordRequest","GameFocus","selectedPlatform","selectedStatus","platformButtonClasses","statusButtonClasses","selectedButtonClass","editGame","handleOptionChange","getAttribute","toggleEditGame","renderPlatformButtons","platformHeader","gamePlatforms","platforms","isSelected","selected","renderStatus","statusTypes","statusToRender","statusHeader","addGame","validateSelections","handleAddGame","handleClose","handleEditGame","deleteGame","handleDeleteGame","renderBottomPortion","handleSearchVisibility","Cards","gameFocusVisible","gameForFocus","gameFocus","handleCardClick","classList","includes","parentNode","gameSlug","handleToggleFilter","renderGameFocus","drawCards","handleGetGameFromList","hideGameFocus","renderItems","MyBacklog","filterButtonVisible","filterVisible","filterIndex","filterBacklogGames","i_Games","filteredGames","statusType","renderStatBar","gameStatusCount","count","gameStatus","statusStats","renderStatusFilters","value-index","handleFilterSelect","renderFilter","handleFilterGames","toggleFilter","i_ActionType","renderCards","renderContent","myGames","Game","i_Platform","i_Status","i_Priority","assignPlatform","assignStatus","priority","myPlatform","BCKLG","isLoaded","rawger","pageIndex","navbarClasses","verified","fetchFailed","getGameFromList","myGame","myGameList","newGame","newGameList","listGame","onSwitchPage","i_Index","renderBacklog","content","pageName","handleSearch","addGameToList","loader","sendEmailVerification","Promise","resolve","reject","AddGame","searchResults","query","errorMessage","displayErrorMessage","searchInitiated","searchVisible","gameBuffer","newQuery","handleSubmitSearch","renderSearchResults","allResults","populateYears","yearArray","getFullYear","handleChange","handleSearchPreset","linkSuffix","fetch","json","toggleSearchVisibility","gameExists","i_GameList","exists","resolvedGame","convertToGameObject","renderSearchContainer","Account","currentPassword","newPassword","confirmNewPassword","editVisible","passwordChanged","handleDeleteAccount","prompt","deleteAccount","handleSaveChanges","updatePasswordRequest","updateUserPassword","handleEditAccount","renderEditAccount","i_UpdateRequest","baseURL","jwtDecode","exp","now","href","App","homeNavItems","bcklgNavItems","renderApp","router","basename","exact","home","bcklg","account","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f3871da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BCKLG_Logo_vertical.a9e9e193.svg\";","module.exports = __webpack_public_path__ + \"static/media/google_G.713f5b25.svg\";","import {\n  SET_USER,\n  SET_AUTHENTICATED,\n  SET_UNAUTHENTICATED,\n  LOADING_USER\n} from \"../types\";\n\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  games: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED: {\n      return {\n        ...state,\n        authenticated: true\n      };\n    }\n    case SET_UNAUTHENTICATED: {\n      return initialState;\n    }\n    case SET_USER: {\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload\n      };\n    }\n    case LOADING_USER: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from \"../types\";\n\nconst initiailState = {\n  loading: false,\n  errors: null\n};\n\nexport default function(state = initiailState, action) {\n  switch (action.type) {\n    case SET_ERRORS: {\n      return {\n        ...state,\n        loading: false,\n        errors: action.payload\n      };\n    }\n    case CLEAR_ERRORS: {\n      return {\n        ...state,\n        loading: false,\n        errors: null\n      };\n    }\n    case LOADING_UI: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport userReducer from \"./reducers/userReducer\";\nimport uiReducer from \"./reducers/uiReducer\";\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n  user: userReducer,\n  UI: uiReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","// User reducer types\nexport const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\nexport const SET_USER = \"SET_USER\";\nexport const LOADING_USER = \"LOADING_USER\";\n// UI reducer types\nexport const SET_ERRORS = \"SET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const LOADING_UI = \"LOADING_UI\";\n// Data reducer types\n","import {\n  SET_USER,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  LOADING_USER,\n  SET_UNAUTHENTICATED\n} from \"../types\";\nimport axios from \"axios\";\n\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/login\", userData)\n    .then(result => {\n      setAuthrizationHeader(result.data.token);\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push(\"/my-backlog\");\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const signupUser = (newUserData, history) => dispatch => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/signup\", newUserData)\n    .then(() => {\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n      history.push(\"/login\");\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"firebaseIdToken\");\n  delete axios.defaults.headers.common[\"Authorization\"];\n  dispatch({ type: SET_UNAUTHENTICATED });\n};\n\nexport const getUserData = () => dispatch => {\n  dispatch({ type: LOADING_USER });\n\n  axios\n    .get(\"/user\")\n    .then(result => {\n      dispatch({\n        type: SET_USER,\n        payload: result.data\n      });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const sendPasswordResetEmail = i_Email => dispatch => {\n  dispatch({ type: LOADING_UI });\n\n  const resetPasswordRequest = {\n    email: i_Email\n  };\n\n  axios\n    .post(\"/user/reset-password\", resetPasswordRequest)\n    .then(() => {\n      dispatch({ type: CLEAR_ERRORS });\n      window.alert(\n        `You should recieve password reset instructions ${resetPasswordRequest.email} shortly`\n      );\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n      console.log(err);\n    });\n};\n\nexport const sendEmailVerification = () => dispatch => {\n  dispatch({ type: LOADING_UI });\n\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\"/user/email-verification\")\n      .then(() => {\n        dispatch({ type: CLEAR_ERRORS });\n        dispatch(getUserData());\n        let emailVerificationMsg = \"Email verification instructions sent.\";\n        window.alert(emailVerificationMsg);\n        resolve(true);\n      })\n      .catch(err => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n        });\n        console.log(err);\n        reject(false);\n      });\n  });\n};\n\nexport const updateUserPassword = i_UpdateRequest => dispatch => {\n  dispatch({ type: LOADING_UI });\n\n  const updateRequest = {\n    email: i_UpdateRequest.email,\n    currentPassword: i_UpdateRequest.currentPassword,\n    newPassword: i_UpdateRequest.newPassword,\n    confirmNewPassword: i_UpdateRequest.confirmNewPassword\n  };\n\n  return new Promise((resolve, reject) => {\n    axios\n      .post(\"/user/update-password\", updateRequest)\n      .then(() => {\n        dispatch({ type: CLEAR_ERRORS });\n        dispatch(getUserData());\n        let updateSuccessfullMsg = \"Password updated successfully\";\n        window.alert(updateSuccessfullMsg);\n        resolve(true);\n      })\n      .catch(err => {\n        dispatch({\n          type: SET_ERRORS,\n          payload: err.response.data\n        });\n        console.log(err);\n        reject(false);\n      });\n  });\n};\n\nexport const updateGames = (username, gameList) => dispatch => {\n  dispatch({ type: LOADING_USER });\n  const updateRequest = {\n    username: username,\n    games: gameList\n  };\n  axios\n    .post(\"user/games/update\", updateRequest)\n    .then(() => {\n      dispatch(getUserData());\n      dispatch({ type: CLEAR_ERRORS });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const deleteAccount = i_Username => dispatch => {\n  dispatch({ type: LOADING_USER });\n  axios\n    .post(\"user/delete\", i_Username)\n    .then(() => {\n      dispatch(logoutUser());\n    })\n    .catch(err => console.log(err));\n};\n\nconst setAuthrizationHeader = token => {\n  const firebaseIdToken = `Bearer ${token}`;\n  localStorage.setItem(\"firebaseIdToken\", firebaseIdToken);\n  axios.defaults.headers.common[\"Authorization\"] = firebaseIdToken;\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      authenticated === true ? (\n        <Redirect to=\"/my-backlog\" />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated\n});\n\nAuthRoute.protoTypes = {\n  user: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps)(AuthRoute);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction NavItem(props) {\n  return (\n    <React.Fragment>\n      <li className=\"nav-item\" key={props.value} onClick={props.handleClick}>\n        <NavLink\n          to={props.link}\n          className={props.defaultClasses}\n          activeClassName={props.selectedClasses}\n        >\n          {props.value}\n        </NavLink>\n      </li>\n    </React.Fragment>\n  );\n}\n\nexport default NavItem;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BCKLG_Logo from \"../../resources/BCKLG_Logo.svg\";\nimport BCKLG_Logo_vertical from \"../../resources/BCKLG_Logo_vertical.svg\";\n\nclass Logo extends Component {\n  state = {\n    logoSrc: BCKLG_Logo,\n    logoClasses: \"logo-img\",\n    navClasses: \"logo-img logo-img-link link logo-nav\",\n    vertClasses: \"logo-login logo-img logo-vert\",\n    inlineClasses: \"logo-img logo-inline\"\n  };\n\n  componentDidMount() {\n    if (this.props.currentPage !== undefined) {\n      this.defineLogo(this.props.currentPage);\n    } else if (this.props.navbarType !== undefined) {\n      this.defineLogo(this.props.navbarType);\n    }\n  }\n\n  defineLogo = i_Page => {\n    if (i_Page === \"Login\") {\n      this.setState({\n        logoSrc: BCKLG_Logo_vertical\n      });\n    } else {\n      this.setState({\n        logoSrc: BCKLG_Logo\n      });\n    }\n    this.defineLogoClasses(this.props.logoType, i_Page);\n  };\n\n  defineLogoClasses = (i_LogoType, i_Context) => {\n    if (i_LogoType === \"nav\") {\n      this.setState({\n        logoClasses: this.state.navClasses\n      });\n    } else if (i_LogoType === \"vert\") {\n      this.setState({\n        logoClasses: this.state.vertClasses\n      });\n    } else if (i_LogoType === \"inline\") {\n      if (i_Context === \"Join\") {\n        const classes = `${this.state.inlineClasses} logo-join`;\n        this.setState({\n          logoClasses: classes\n        });\n      } else {\n        this.setState({\n          logoClasses: this.state.inlineClasses\n        });\n      }\n    }\n  };\n\n  renderLogo = i_Context => {\n    if (i_Context === \"home\") {\n      return (\n        <Link to=\"/\">\n          <img\n            className={this.state.logoClasses}\n            src={this.state.logoSrc}\n            alt=\"\"\n          />\n        </Link>\n      );\n    } else if (i_Context === \"bcklg\") {\n      return (\n        <Link to=\"/my-backlog\">\n          <img\n            className={this.state.logoClasses}\n            src={this.state.logoSrc}\n            alt=\"\"\n          />\n        </Link>\n      );\n    } else {\n      return (\n        <img\n          className={this.state.logoClasses}\n          src={this.state.logoSrc}\n          alt=\"\"\n        />\n      );\n    }\n  };\n\n  render() {\n    return this.renderLogo(this.props.navbarType);\n  }\n}\n\nexport default Logo;\n","export const loadUserDataFromProps = i_Props => {\n  const {\n    user: {\n      credentials: { username, games, emailVerified },\n      loading,\n      authenticated\n    }\n  } = i_Props;\n\n  const { user } = i_Props;\n\n  return { user, username, games, emailVerified, loading, authenticated };\n};\n","import React, { Component } from \"react\";\nimport NavItem from \"./NavItem\";\nimport Logo from \"./Logo\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../redux/actions/userActions\";\nimport { loadUserDataFromProps } from \"../../util/Utils\";\n\nclass Navbar extends Component {\n  state = {\n    defaultClasses: \"nav-link link\",\n    selectedClasses: \"btn nav-selected\",\n    homePaths: [\"/\"],\n    bcklgPaths: [\"/account\"],\n    navbarType: null,\n    popupVisible: false\n  };\n\n  componentDidMount() {\n    this.setState({\n      popupVisible: false\n    });\n    this.setNavPaths();\n  }\n\n  convertPageName = i_PageName => {\n    let pageName = i_PageName;\n    let convertedPageName = \"\";\n    const splitPageName = pageName.split(\" \");\n    if (splitPageName.length === 1) {\n      convertedPageName = splitPageName[0].toLowerCase();\n    } else {\n      for (let i = 0; i < splitPageName.length; i++) {\n        if (i === splitPageName.length - 1) {\n          convertedPageName += splitPageName[i].toLowerCase();\n        } else {\n          convertedPageName += splitPageName[i].toLowerCase() + \"-\";\n        }\n      }\n    }\n\n    return convertedPageName;\n  };\n\n  getNavbarType = () => {\n    let type = null;\n    const { pathname } = this.props.location;\n\n    this.state.homePaths.forEach(path => {\n      if (path === pathname) {\n        type = \"home\";\n      }\n    });\n    if (type === null) {\n      this.state.bcklgPaths.forEach(path => {\n        if (path === pathname) {\n          type = \"bcklg\";\n        }\n      });\n    }\n\n    return type;\n  };\n\n  handleNavItemClick = () => {\n    if (this.state.popupVisible) {\n      this.setState({\n        popupVisible: false\n      });\n    }\n  };\n\n  drawNabBar = () => {\n    let navItemArr;\n    let navbar = [];\n    let navItem = <NavItem handleClick={this.handleNavItemClick} />;\n\n    const navbarType = this.getNavbarType();\n\n    if (navbarType !== null) {\n      if (navbarType === \"home\") {\n        navItemArr = this.props.homeNav;\n      } else {\n        navItemArr = this.props.bcklgNav;\n      }\n      navItemArr.forEach((page, index) => {\n        navbar.push(\n          <React.Fragment key={index}>\n            {React.cloneElement(navItem, {\n              defaultClasses: this.state.defaultClasses,\n              selectedClasses: this.state.selectedClasses,\n              link: this.convertPageName(page),\n              key: page,\n              value: page\n            })}\n          </React.Fragment>\n        );\n      });\n\n      return navbar;\n    } else {\n      return <p>Error drawing navbar</p>;\n    }\n  };\n\n  setNavPaths = () => {\n    const homePaths = this.mapNavPathsfromArray(\n      this.state.homePaths,\n      this.props.homeNav\n    );\n    const bcklgPaths = this.mapNavPathsfromArray(\n      this.state.bcklgPaths,\n      this.props.bcklgNav\n    );\n\n    this.setState({\n      homePaths,\n      bcklgPaths\n    });\n  };\n\n  mapNavPathsfromArray = (i_StarterPaths, i_NavItems) => {\n    let navPaths = i_NavItems.map(navItem => {\n      return `/${this.convertPageName(navItem)}`;\n    });\n\n    if (i_StarterPaths.length > 0) {\n      i_StarterPaths.forEach(path => {\n        navPaths.unshift(path);\n      });\n    }\n\n    return navPaths;\n  };\n\n  handleLogout = () => {\n    if (window.confirm(\"Are you sure you want to logout?\")) {\n      try {\n        this.props.logoutUser();\n        this.setState({\n          popupVisible: false\n        });\n        this.props.history.push(\"/\");\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  renderUserPopup = () => {\n    if (this.state.popupVisible) {\n      return (\n        <div className=\"user-pop-up\">\n          <ul>\n            <Link to=\"/account\">\n              <button\n                className=\"btn nav-link link btn-pop-up\"\n                onClick={this.handleNavItemClick}\n              >\n                Account\n              </button>\n            </Link>\n            <button\n              className=\"btn nav-link link btn-pop-up\"\n              onClick={this.handleLogout}\n            >\n              Logout\n            </button>\n          </ul>\n        </div>\n      );\n    }\n  };\n\n  handleUserButtonClick = () => {\n    this.setState({\n      popupVisible: !this.state.popupVisible\n    });\n  };\n\n  drawUserButton = i_Username => {\n    const navbarType = this.getNavbarType();\n    if (navbarType !== \"home\" && i_Username !== undefined) {\n      return (\n        <React.Fragment>\n          <button\n            key={\"username\"}\n            className=\"btn username nav-link link\"\n            onClick={this.handleUserButtonClick}\n          >\n            {\" \"}\n            {i_Username}\n          </button>\n          {this.renderUserPopup()}\n        </React.Fragment>\n      );\n    }\n  };\n\n  renderLogo = () => {\n    const navbarType = this.getNavbarType();\n\n    return <Logo navbarType={navbarType} logoType=\"nav\" />;\n  };\n\n  render() {\n    const { username } = loadUserDataFromProps(this.props);\n\n    return (\n      <div className=\"navbar flex-row\">\n        <nav className=\"nav\">\n          <div className=\"nav-logo\">{this.renderLogo()}</div>\n          <div className=\"nav-wrapper\">\n            <ul className=\"nav-list\">\n              <div className=\"nav-items-wrapper\">\n                {this.drawNabBar()}\n                <div className=\"username-container\">\n                  {this.drawUserButton(username)}\n                </div>\n              </div>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = { logoutUser };\n\nNavbar.propTypes = {\n  user: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Navbar));\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer>\n      <div className=\"footer-text-container\">\n        <div className=\"footer-separator\">-</div>\n        All rights reserved to Idan Ram &copy; 2020 |\n        {\" Powered by RAWG & RAWger\"}\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","export const parseRAWGDate = i_DateString => {\n  const dateRegEx = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\n\n  if (dateRegEx.test(i_DateString)) {\n    const monthsShort = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sept\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n\n    const date = i_DateString.split(\"-\");\n    const year = date[0];\n    const month = monthsShort[parseInt(date[1]) - 1];\n    const day = date[2];\n\n    return `${month} ${day}, ${year}`;\n  }\n};\n","import React, { Component } from \"react\";\nimport { parseRAWGDate } from \"../../util/UI_Utils\";\n\nclass Card extends Component {\n  state = {\n    defaultClasses: \"game-card\",\n    homeClasses: \"game-card-home game-card-add-game\",\n    addGameClasses: \"game-card game-card-add-game\",\n    addedStyle: \"\",\n    preAnimationStyle: \"card-pre-entrance\",\n    animationStyle: \"card-entrance\"\n  };\n\n  _isMounted = false;\n\n  componentDidMount() {\n    this._isMounted = true;\n    if (\n      this._isMounted &&\n      this.props.currentPage === \"My Backlog\" &&\n      this.props.animate\n    ) {\n      this.setState({\n        addedStyle: this.state.preAnimationStyle\n      });\n      setTimeout(() => {\n        this.setState({\n          addedStyle: this.state.animationStyle\n        });\n        this._isMounted = false;\n        setTimeout(() => {\n          this.setState({\n            addedStyle: \"\"\n          });\n        }, 800);\n      }, 75 * this.props.delay);\n      if (this.props.numOfGames === this.props.delay) {\n        this.props.handleStopStartupAnimation();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    console.log(this.props.animate);\n  }\n\n  renderGameDetails = () => {\n    let status = \"\";\n    let platform = \"\";\n    let gameReleased = true;\n\n    const releaseDate = new Date(this.props.game.released);\n    const today = new Date();\n\n    if (\n      releaseDate.getTime() >= today.getTime() ||\n      this.props.game.released === null\n    ) {\n      gameReleased = false;\n    }\n\n    if (this.props.currentPage === \"My Backlog\") {\n      status = (\n        <div className=\"game-detail game-detail-line\">\n          <p className=\"game-detail game-detail-label\">Status:</p>\n          <p className=\"game-detail game-detail-value\">\n            {this.props.game.status}\n          </p>\n        </div>\n      );\n\n      platform = (\n        <div className={`platform ${this.props.game.platform.slug}`}>\n          <p className={`platform-name`}>{this.props.game.platform.name}</p>\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"game-detail-container\">\n          <div className=\"game-detail-line\">\n            <p className=\"game-detail game-detail-label\">Rating:</p>\n            <p className=\"game-detail game-detail-value\">\n              {gameReleased ? `${this.props.game.rating} / 5` : \"TBD\"}\n            </p>\n          </div>\n          <br />\n          <div className=\"game-detail-line\">\n            <p className=\"game-detail game-detail-label\">Release Date:</p>\n            <p className=\"game-detail game-detail-value\">\n              {this.props.game.released === null\n                ? \"TBD\"\n                : parseRAWGDate(this.props.game.released)}\n            </p>\n          </div>\n          <br />\n          {status}\n          <br />\n        </div>\n        {platform}\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    let classes;\n\n    if (this.props.currentPage === \"Home\") {\n      classes = this.state.homeClasses;\n    } else if (this.props.currentPage === \"Add Game\") {\n      classes = this.state.addGameClasses;\n    } else {\n      classes = this.state.defaultClasses;\n    }\n\n    if (\n      this.props.parentComponent !== \"Game Focus\" &&\n      this.props.currentPage !== \"Home\"\n    ) {\n      classes += \" link\";\n    }\n\n    return (\n      <div\n        key={this.props.game.name}\n        className={`${classes} ${this.state.addedStyle}`}\n        onClick={this.props.handleClick}\n        game={this.props.game}\n        name={this.props.game.name}\n        slug={this.props.game.slug}\n      >\n        <div className=\"img-container\">\n          <img\n            className=\"game-img\"\n            src={this.props.game.background_image}\n            alt={this.props.game.name}\n          />\n        </div>\n        <div className=\"title-container\">\n          <p className=\"game-title\">{this.props.game.name}</p>\n        </div>\n        {this.renderGameDetails()}\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","export const Rawger = require(\"rawger\");\n\nexport const startRawger = async () => {\n  const Rawger = require(\"rawger\");\n  await Rawger({}).then(data => {\n    this.setState({\n      rawger: data\n    });\n  });\n};\n\nexport const getGameFromApi = async i_GameSlug => {\n  const Rawger = require(\"rawger\");\n  const { games } = await Rawger({});\n  const results = await games\n    .get(i_GameSlug)\n    .then(result => {\n      return result.get();\n    })\n    .then(data => {\n      return data.raw;\n    });\n\n  return results;\n};\n\nexport const searchGame = async i_GameName => {\n  const Rawger = require(\"rawger\");\n  const { games } = await Rawger({});\n  try {\n    const results = await games\n      .search(i_GameName)\n      .then(result => {\n        return result.raw();\n      })\n      .then(data => {\n        return data;\n      });\n\n    const filteredResults = results.filter(item => item.rating > 0);\n\n    return filteredResults;\n  } catch (error) {\n    return error.toString();\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../UI Elements/Logo\";\nimport Card from \"../UI Elements/Card\";\nimport { getGameFromApi } from \"../../model/Api\";\n\nclass Home extends Component {\n  state = {\n    game: \"death-stranding\",\n    gameCard: \"\"\n  };\n\n  componentDidMount() {\n    this.renderGameCard(this.state.game);\n  }\n\n  renderGameCard = async i_Game => {\n    try {\n      getGameFromApi(i_Game).then(game => {\n        this.setState({\n          gameCard: <Card game={game} currentPage={\"Home\"} key={game.name} />\n        });\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  renderHomeContent = () => {\n    return (\n      <React.Fragment>\n        <div className=\"home-showcase-bg\"></div>\n        <div className=\"home-page\">\n          <div className=\"home-container\">\n            <div className=\"home-caption-container\">\n              <h1 className=\"home-caption\">{\"Conquer \\nYour Backlog\"}</h1>\n              <h2 className=\"home-sub-caption\">No game left behind!</h2>\n            </div>\n            <div className=\"down-arrow-container\">\n              <div className=\"down-arrows\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n          <div className=\"home-desc desc-1\">\n            <div className=\"desc-img\"></div>\n            <div className=\"home-desc-container\">\n              <div className=\"desc-content\">\n                <h1 className=\"desc-title desc-title-top\">{`Track & Beat all the games in your library`}</h1>\n                <div className=\"desc-text-content\"></div>\n              </div>\n            </div>\n          </div>\n          <div className=\"home-desc desc-violet home-desc-lg \">\n            <div className=\"home-desc-container\">\n              <div className=\"desc-content\">\n                <br />\n                <div className=\"center-container\">\n                  <h1 className=\"our-platform-title\">Our Platform</h1>\n                  <br />\n                </div>\n                <div className=\"spread-container\">\n                  <br />\n                  <div className=\"spread-container-child\">\n                    <i className=\"far fa-clock fa-7x\"></i>\n                    <br />\n                    <h2 className=\"our-platform-section-title\">\n                      Manage your gaming time more effeciently\n                    </h2>\n                  </div>\n                  <div className=\"spread-container-child\">\n                    <i className=\"fas fa-gamepad fa-7x\"></i>\n                    <br />\n                    <h2 className=\"our-platform-section-title\">\n                      Stay up to date and add the latest and greatest games\n                    </h2>\n                  </div>\n                  <div className=\"spread-container-child\">\n                    <i className=\"fas fa-dollar-sign fa-7x\"></i>\n                    <br />\n                    <h2 className=\"our-platform-section-title\">\n                      Don't let your hard-earned money go to waste\n                    </h2>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"home-desc desc-orange desc-2\">\n            <div className=\"home-desc-container\">\n              <div className=\"desc-content\">\n                <div className=\"desc-text-content\">\n                  <h1 className=\"desc-title\">Card view</h1>\n                  <p className=\"desc-body\">\n                    A clean and intuitive card view letting you comfortably\n                    manage your backlog.\n                  </p>\n                </div>\n                <div className=\"card-container-home card-container-home-left\">\n                  {this.state.gameCard}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"home-desc desc-join\">\n            <div className=\"home-desc-container\">\n              <div className=\"desc-content desc-join-content\">\n                <div className=\"desc-text-content\">\n                  <div className=\"inline\">\n                    <span className=\"desc-title inline\">{`Join `}</span>\n                    <Logo currentPage=\"Join\" logoType=\"inline\" />\n                    <span className=\"desc-title inline\">{` now!`}</span>\n                  </div>\n                  <br />\n                  <br />\n                  <Link to=\"/sign-up\">\n                    <button className=\"btn btn-home-page link\">Sign Up</button>\n                  </Link>\n                  <br />\n                  <br />\n                  <div className=\"body-question-home\">\n                    <span className=\"\">Already a member? </span>{\" \"}\n                    <Link to=\"/login\">Log in here</Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return <React.Fragment>{this.renderHomeContent()}</React.Fragment>;\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../UI Elements/Logo\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { signupUser } from \"../../redux/actions/userActions\";\n\nclass signup extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    loading: false,\n    errors: {}\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  handleInputChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13) {\n      this.handleSubmit(event);\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      loading: true\n    });\n    const newUserData = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n    this.props.signupUser(newUserData, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n    const {\n      UI: { loading }\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className=\"signup-container\">\n          <Logo currentPage=\"Login\" logoType=\"vert\" />\n          <br />\n          <form onSubmit={this.handleSubmit} className=\"form login-form\">\n            {this.state.username !== \"\" && (\n              <p className=\"field-label\">Username</p>\n            )}\n            <input\n              type=\"text\"\n              className=\"userdata-input\"\n              name=\"username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleInputChange}\n              onKeyDown={this.handleKeyDown}\n            ></input>\n            <br />\n            {errors.username && (\n              <React.Fragment>\n                <p className=\"helper-text\">{errors.username}</p>\n                <br />\n              </React.Fragment>\n            )}\n            {this.state.email !== \"\" && <p className=\"field-label\">Email</p>}\n            <input\n              type=\"text\"\n              className=\"userdata-input\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.handleInputChange}\n              onKeyDown={this.handleKeyDown}\n            ></input>\n            <br />\n            {errors.email && (\n              <React.Fragment>\n                <p className=\"helper-text\">{errors.email}</p>\n                <br />\n              </React.Fragment>\n            )}\n            {this.state.password !== \"\" && (\n              <p className=\"field-label\">Password</p>\n            )}\n            <input\n              type=\"password\"\n              className=\"userdata-input\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleInputChange}\n              onKeyDown={this.handleKeyDown}\n            ></input>\n            <br />\n            {errors.password && (\n              <React.Fragment>\n                <p className=\"helper-text\">{errors.password}</p>\n                <br />\n              </React.Fragment>\n            )}\n            {this.state.confirmPassword !== \"\" && (\n              <p className=\"field-label\">Confirm Password</p>\n            )}\n            <input\n              type=\"password\"\n              className=\"userdata-input\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm Password\"\n              value={this.state.confirmPassword}\n              onChange={this.handleInputChange}\n              onKeyDown={this.handleKeyDown}\n            ></input>\n            <br />\n            {errors.confirmPassword && (\n              <React.Fragment>\n                <p className=\"helper-text\">{errors.confirmPassword}</p>\n                <br />\n              </React.Fragment>\n            )}\n            <div className=\"loader-container\">\n              {loading && <div className=\"loader\" />}\n            </div>\n            <br />\n            <button className=\"btn btn-submit link\">Sign Up</button>\n            {errors.general && <p className=\"error-msg\">{errors.general}</p>}\n          </form>\n          <br />\n          <div className=\"body-question\">\n            <span>Already a member? </span> <Link to=\"/login\">Log in here</Link>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nsignup.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  signupUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, { signupUser })(signup);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../UI Elements/Logo\";\nimport PropTypes from \"prop-types\";\nimport googleIcon from \"../../resources/google_G.svg\";\n// Redux\nimport { connect } from \"react-redux\";\nimport {\n  loginUser,\n  sendPasswordResetEmail\n} from \"../../redux/actions/userActions\";\n\nclass login extends Component {\n  state = {\n    email: \"\",\n    emailForgot: \"\",\n    password: \"\",\n    errors: {},\n    forgotVisible: false,\n    emailSignIn: true\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  handleInputChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13) {\n      this.handleSubmit(event);\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(userData, this.props.history);\n  };\n\n  handleForgotPassword = () => {\n    this.setState({\n      forgotVisible: !this.state.forgotVisible\n    });\n  };\n\n  handleResetEmail = event => {\n    event.preventDefault();\n    const email = this.state.emailForgot;\n\n    try {\n      this.props.sendPasswordResetEmail(email);\n    } catch (err) {\n      alert(err);\n      console.log(err);\n    }\n  };\n\n  renderForgotPassword = i_Errors => {\n    const {\n      UI: { loading }\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className=\"login-container\">\n          <h2 className=\"sub-page-title\">Forgot Password</h2>\n          <br />\n          <div className=\"form-description-container\">\n            <p className=\"form-description\">\n              Please enter your email and we'll send you instructions on how to\n              reset your password\n            </p>\n          </div>\n          <form onSubmit={this.handleResetEmail} className=\"form login-form\">\n            {this.state.emailForgot !== \"\" && (\n              <p className=\"field-label\">Email</p>\n            )}\n            <input\n              type=\"text\"\n              className=\"userdata-input\"\n              name=\"emailForgot\"\n              placeholder=\"Email\"\n              value={this.state.emailForgot}\n              onChange={this.handleInputChange}\n              onKeyDown={this.handleKeyDown}\n            ></input>\n            {i_Errors.emailForgot && (\n              <p className=\"helper-text\">{i_Errors.emailForgot}</p>\n            )}\n            <br />\n            <div className=\"loader-container\">\n              {loading && <div className=\"loader\" />}\n            </div>\n            <br />\n            <button className=\"btn btn-submit link\">Submit</button>\n          </form>\n          {i_Errors.general && (\n            <React.Fragment>\n              <p className=\"error-msg\">{i_Errors.general}</p>\n              <br />\n            </React.Fragment>\n          )}\n          <br />\n          <button\n            className=\"btn btn-sml btn-gray link\"\n            onClick={this.handleForgotPassword}\n          >\n            Cancel\n          </button>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  renderLoginForm = (i_Errors, i_Loading) => {\n    return (\n      <div className=\"login-container\">\n        <form onSubmit={this.handleSubmit} className=\"form login-form\">\n          {this.state.email !== \"\" && <p className=\"field-label\">Email</p>}\n          <input\n            type=\"text\"\n            className=\"userdata-input\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={this.state.email}\n            onChange={this.handleInputChange}\n            onKeyDown={this.handleKeyDown}\n          ></input>\n          <br />\n          {i_Errors.email && (\n            <React.Fragment>\n              <p className=\"helper-text\">{i_Errors.email}</p>\n              <br />\n            </React.Fragment>\n          )}\n          {this.state.password !== \"\" && (\n            <p className=\"field-label\">Password</p>\n          )}\n          <input\n            type=\"password\"\n            className=\"userdata-input\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleInputChange}\n            onKeyDown={this.handleKeyDown}\n          ></input>\n          {i_Errors.password && (\n            <React.Fragment>\n              <p className=\"helper-text\">{i_Errors.password}</p>\n              <br />\n            </React.Fragment>\n          )}\n          <br />\n          {i_Loading && (\n            <React.Fragment>\n              <div className=\"loader-container\">\n                <div className=\"loader\" />\n              </div>\n            </React.Fragment>\n          )}\n          <br />\n          <button className=\"btn btn-submit link\">Login</button>\n          {i_Errors.general && <p className=\"error-msg\">{i_Errors.general}</p>}\n        </form>\n        <button\n          className=\"btn btn-sml btn-gray link\"\n          onClick={this.handleForgotPassword}\n        >\n          Forgot Password\n        </button>\n        <br />\n        <br />\n        <div className=\"body-question\">\n          <span>Don't have an account? </span>{\" \"}\n          <Link to=\"/sign-up\">Sign up here</Link>\n        </div>\n      </div>\n    );\n  };\n\n  renderSignInMethods = () => {\n    return (\n      <React.Fragment>\n        <button className=\"btn btn-sign-in-with btn-facebook link\">\n          <i className=\"fab fa-facebook-f facebook-icon\"></i>\n          &nbsp;&nbsp;&nbsp;&nbsp;Sign in with Facebook\n        </button>\n        <br />\n        <button className=\"btn btn-sign-in-with btn-google link\">\n          <img src={googleIcon} alt=\"\" className=\"google-icon\" />\n          &nbsp;&nbsp;&nbsp;&nbsp;Sign in with Google\n        </button>\n        <br />\n        <button\n          className=\"btn btn-sign-in-with btn-email link\"\n          onClick={this.handleEmailSignIn}\n        >\n          <i className=\"fas fa-at\"></i>\n          &nbsp;&nbsp;&nbsp;&nbsp;Sign in with email\n        </button>\n      </React.Fragment>\n    );\n  };\n\n  renderLoginPage = () => {\n    const { errors } = this.state;\n    const {\n      UI: { loading }\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className=\"page-container\">\n          <div className=\"center-container\">\n            <Logo currentPage=\"Login\" logoType=\"vert\" />\n            <br />\n            <br />\n            {this.state.emailSignIn\n              ? this.state.forgotVisible\n                ? this.renderForgotPassword(errors)\n                : this.renderLoginForm(errors, loading)\n              : this.renderSignInMethods()}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return this.renderLoginPage();\n  }\n}\n\nlogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  sendPasswordResetEmail: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  loginUser,\n  sendPasswordResetEmail\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(login);\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport { getStatusTypes } from \"../../model/Status\";\n\nclass GameFocus extends Component {\n  state = {\n    selectedPlatform: \"\",\n    selectedStatus: \"\",\n    platformButtonClasses: \"focus-button focus-platform\",\n    statusButtonClasses: \"focus-button focus-status\",\n    selectedButtonClass: \"focus-button-selected\",\n    editGame: false\n  };\n\n  componentDidMount() {\n    if (this.props.currentPage === \"Add Game\") {\n      this.props.handleSearchVisibility();\n    }\n  }\n\n  handleOptionChange = event => {\n    const { target } = event;\n    const type = target.getAttribute(\"type\");\n\n    if (type === \"Platform\") {\n      this.setState({\n        selectedPlatform: target.value\n      });\n    } else {\n      this.setState({\n        selectedStatus: target.value\n      });\n    }\n  };\n\n  toggleEditGame = () => {\n    this.setState({\n      selectedPlatform: this.props.game.platform.name,\n      selectedStatus: this.props.game.status,\n      editGame: true\n    });\n  };\n\n  renderPlatformButtons = () => {\n    let platformHeader;\n    let gamePlatforms;\n\n    if (this.props.currentPage === \"My Backlog\" && !this.state.editGame) {\n      platformHeader = <h2 className=\"focus-header\">Platform:</h2>;\n\n      gamePlatforms = (\n        <button\n          key={this.props.game.platform.slug}\n          value={this.props.game.platform.name}\n          className={`${this.state.platformButtonClasses} ${this.props.game.platform.slug}`}\n        >\n          {this.props.game.platform.name}\n        </button>\n      );\n    } else {\n      platformHeader = <h2 className=\"focus-header\">Platforms:</h2>;\n      let game;\n\n      if (this.props.currentPage === \"My Backlog\") {\n        game = this.props.game.raw;\n      } else {\n        game = this.props.game;\n      }\n\n      const platforms = game.platforms;\n\n      if (\n        platforms !== undefined &&\n        platforms !== null &&\n        platforms.length > 0\n      ) {\n        gamePlatforms = platforms.map((platform, index) => {\n          const isSelected =\n            this.state.selectedPlatform === platform.platform.name;\n\n          return (\n            <button\n              key={platform.platform.slug}\n              value={platform.platform.name}\n              type=\"Platform\"\n              selected={isSelected}\n              className={`${this.state.platformButtonClasses} ${\n                platform.platform.slug\n              } link focus-button-editable  ${isSelected &&\n                this.state.selectedButtonClass}`}\n              onClick={this.handleOptionChange}\n            >\n              {platform.platform.name}\n            </button>\n          );\n        });\n      }\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"focus-platform-container\">\n          {platformHeader}\n          {gamePlatforms}\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  renderStatus = () => {\n    let statusTypes;\n\n    const releaseDate = new Date(this.props.game.released);\n    const today = new Date();\n\n    if (\n      releaseDate.getTime() >= today.getTime() ||\n      this.props.game.released === null\n    ) {\n      statusTypes = [getStatusTypes()[0]];\n    } else {\n      statusTypes = getStatusTypes();\n    }\n\n    const statusHeader = (\n      <h2 className=\"focus-header focus-header-status\">Status:</h2>\n    );\n    let statusToRender;\n\n    if (this.props.currentPage === \"Add Game\" || this.state.editGame) {\n      statusToRender = statusTypes.map((status, index) => {\n        const isSelected = this.state.selectedStatus === status;\n\n        return (\n          <button\n            key={index}\n            value={status}\n            selected={isSelected}\n            className={`${\n              this.state.statusButtonClasses\n            } link focus-button-editable ${isSelected &&\n              this.state.selectedButtonClass}`}\n            onClick={this.handleOptionChange}\n          >\n            {status}\n          </button>\n        );\n      });\n    } else {\n      const status = this.props.game.status;\n\n      statusToRender = (\n        <React.Fragment>\n          <button\n            key={this.props.game.status}\n            value={status}\n            selected={false}\n            className={`${this.state.statusButtonClasses}`}\n          >\n            {status}\n          </button>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"focus-status-container\">\n          {statusHeader}\n          {statusToRender}\n        </div>\n      </React.Fragment>\n    );\n  };\n\n  addGame = () => {\n    try {\n      if (this.validateSelections()) {\n        this.props.handleAddGame(\n          this.props.game.slug,\n          this.state.selectedPlatform,\n          this.state.selectedStatus\n        );\n        this.props.handleClose();\n      } else {\n        alert(\"Please select a platform and a status!\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  editGame = () => {\n    try {\n      if (this.validateSelections()) {\n        this.props.handleEditGame(\n          this.props.game,\n          this.state.selectedPlatform,\n          this.state.selectedStatus\n        );\n        this.props.handleClose();\n      } else {\n        alert(\"Please select a platform and a status!\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  deleteGame = () => {\n    if (\n      window.confirm(\n        \"Are you sure you want to delete this game from your backlog?\"\n      )\n    ) {\n      try {\n        this.props.handleDeleteGame(this.props.game);\n        this.props.handleClose();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  validateSelections() {\n    return (\n      this.state.selectedPlatform !== \"\" && this.state.selectedStatus !== \"\"\n    );\n  }\n\n  renderBottomPortion = () => {\n    if (this.props.currentPage === \"Add Game\") {\n      return (\n        <React.Fragment>\n          <button className=\"btn btn-positive link\" onClick={this.addGame}>\n            Add To Backlog\n          </button>\n        </React.Fragment>\n      );\n    } else if (this.state.editGame) {\n      return (\n        <React.Fragment>\n          <button className=\"btn btn-positive link\" onClick={this.editGame}>\n            Save Edits\n          </button>\n          <button className=\"btn link btn-close\" onClick={this.deleteGame}>\n            Delete From Backlog\n          </button>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <button className=\"btn link\" onClick={this.toggleEditGame}>\n          Edit\n        </button>\n      );\n    }\n  };\n\n  render() {\n    const focusDetailsClasses = \"focus-details\";\n\n    return (\n      <React.Fragment>\n        <div className=\"focus-outer-container\">\n          <button\n            className=\"btn link btn-gray close-game-focus\"\n            onClick={this.props.handleClose}\n          >\n            <i className=\"fas fa-arrow-left\"></i>\n          </button>\n          <div className=\"focus-container\">\n            <div className=\"focus-box\">\n              <div className=\"card-container\">\n                <Card\n                  key={this.props.game.name}\n                  game={this.props.game}\n                  parentComponent={\"Game Focus\"}\n                  currentPage={this.props.currentPage}\n                />\n              </div>\n              <div className={focusDetailsClasses}>\n                <div className=\"platform-container\">\n                  {this.renderPlatformButtons()}\n                </div>\n                {this.renderStatus()}\n                <br />\n                <div className=\"focus-bottom-buttons\">\n                  {this.renderBottomPortion()}\n                </div>\n              </div>\n            </div>\n          </div>\n          <br />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GameFocus;\n","export const getStatusTypes = () => {\n  return [\"Want to Play\", \"Owned\", \"Playing\", \"Beaten\", \"Dropped\"];\n};\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport GameFocus from \"./GameFocus\";\nimport { getGameFromApi } from \"../../model/Api\";\n\nclass Cards extends Component {\n  state = {\n    gameFocusVisible: false,\n    gameForFocus: \"\",\n    gameFocus: \"\"\n  };\n\n  handleCardClick = event => {\n    let target = event.target;\n\n    while (!target.classList.value.includes(\"game-card\")) {\n      target = target.parentNode;\n    }\n\n    const targetGame = target;\n\n    const gameSlug = targetGame.getAttribute(\"slug\");\n\n    if (this.props.currentPage === \"My Backlog\") {\n      this.props.handleToggleFilter(\"hide\");\n    }\n    this.renderGameFocus(gameSlug);\n  };\n\n  drawCards = () => {\n    const cardsArr = this.props.games;\n\n    const cardDisplay = cardsArr.map((item, index) => {\n      return (\n        <Card\n          key={index}\n          game={item}\n          handleClick={this.handleCardClick}\n          currentPage={this.props.currentPage}\n        />\n      );\n    });\n\n    return cardDisplay;\n  };\n\n  renderGameFocus = async i_Game => {\n    if (this.props.currentPage === \"My Backlog\") {\n      const game = this.props.handleGetGameFromList(i_Game);\n\n      this.setState({\n        gameFocusVisible: true,\n        gameForFocus: game,\n        gameFocus: (\n          <GameFocus\n            game={game}\n            currentPage={this.props.currentPage}\n            handleEditGame={this.props.handleEditGame}\n            handleDeleteGame={this.props.handleDeleteGame}\n            handleClose={this.hideGameFocus}\n          />\n        )\n      });\n    } else {\n      try {\n        getGameFromApi(i_Game).then(game => {\n          this.setState({\n            gameFocusVisible: true,\n            gameForFocus: game,\n            gameFocus: (\n              <GameFocus\n                game={game}\n                currentPage={this.props.parentComponent}\n                handleAddGame={this.props.handleAddGame}\n                handleSearchVisibility={this.props.handleSearchVisibility}\n                handleClose={this.hideGameFocus}\n              />\n            )\n          });\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  hideGameFocus = () => {\n    this.setState({\n      gameFocusVisible: false\n    });\n    if (this.props.currentPage === \"Add Game\") {\n      this.props.handleSearchVisibility();\n    } else if (this.props.currentPage === \"My Backlog\") {\n      this.props.handleToggleFilter(\"show\");\n    }\n  };\n\n  renderItems() {\n    if (this.state.gameFocusVisible) {\n      return this.state.gameFocus;\n    } else {\n      return this.drawCards();\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <br />\n        {this.renderItems()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Cards;\n","import React, { Component } from \"react\";\nimport Cards from \"../UI Elements/Cards\";\nimport { getStatusTypes } from \"../../model/Status\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\n\nclass MyBacklog extends Component {\n  state = {\n    statusTypes: [],\n    filterButtonVisible: true,\n    filterVisible: false,\n    filterIndex: 0\n  };\n\n  componentDidMount() {\n    const statusTypes = getStatusTypes();\n\n    statusTypes.unshift(\"All\");\n\n    this.setState({\n      statusTypes\n    });\n  }\n\n  filterBacklogGames = i_Games => {\n    let filteredGames;\n    const filterIndex = this.state.filterIndex;\n\n    // 0 - all games\n    if (filterIndex != 0) {\n      const statusType = this.state.statusTypes[filterIndex];\n      filteredGames = i_Games.filter(game => {\n        if (game.status === statusType) {\n          return game;\n        }\n      });\n    } else {\n      filteredGames = i_Games;\n    }\n\n    return filteredGames;\n  };\n\n  renderStatBar = i_Games => {\n    const statusTypes = this.state.statusTypes;\n    const gameStatusCount = statusTypes.map(status => {\n      let count = 0;\n      let gameStatus = {};\n      i_Games.forEach(game => {\n        if (game.status === status) {\n          count++;\n        }\n      });\n      gameStatus.status = status;\n      gameStatus.count = count;\n\n      return gameStatus;\n    });\n\n    const statusStats = gameStatusCount.map((gameStatus, index) => {\n      if (index > 0) {\n        return (\n          <React.Fragment key={gameStatus.status}>\n            <p className=\"stat\">{`${gameStatus.status}: ${gameStatus.count}`}</p>\n            {index !== gameStatusCount.length - 1 && (\n              <p className=\"stat stat-separator\">|</p>\n            )}\n          </React.Fragment>\n        );\n      }\n    });\n\n    return (\n      <div className=\"stat-container\">\n        <div className=\"stat-bar\">\n          <p className=\"stat\">Game Count: {i_Games.length}</p>\n          <p className=\"stat stat-separator\">|</p>\n          {statusStats}\n        </div>\n      </div>\n    );\n  };\n\n  renderStatusFilters = () => {\n    let statusTypes = this.state.statusTypes;\n    const filterIndex = this.state.filterIndex;\n    let statusToRender;\n\n    const statusButtonClasses = \"btn btn-status-filter link\";\n    const selectedButtonClass = \"btn-selected-outline\";\n\n    statusToRender = statusTypes.map((status, index) => {\n      const isSelected = index == filterIndex;\n\n      return (\n        <button\n          key={index}\n          value={status}\n          value-index={index}\n          selected={isSelected}\n          className={`${statusButtonClasses} ${isSelected &&\n            selectedButtonClass}`}\n          onClick={this.handleFilterSelect}\n        >\n          {status}\n        </button>\n      );\n    });\n\n    return <React.Fragment>{statusToRender}</React.Fragment>;\n  };\n\n  renderFilter = () => {\n    return (\n      <div className=\"filter-container\">\n        {this.state.filterButtonVisible && (\n          <React.Fragment>\n            <button\n              className=\"btn btn-filter link\"\n              onClick={this.handleFilterGames}\n            >\n              Filter\n            </button>\n\n            {!this.state.filterVisible && this.state.filterIndex > 0 && (\n              <div className=\"status-filter-container \">\n                {`Status: ${this.state.statusTypes[this.state.filterIndex]}`}\n              </div>\n            )}\n          </React.Fragment>\n        )}\n        {this.state.filterVisible && this.renderStatusFilters()}\n      </div>\n    );\n  };\n\n  handleFilterSelect = event => {\n    const { target } = event;\n    const filterIndex = target.getAttribute(\"value-index\");\n\n    this.setState({\n      filterIndex\n    });\n  };\n\n  handleFilterGames = () => {\n    this.setState({\n      filterVisible: !this.state.filterVisible\n    });\n  };\n\n  toggleFilter = i_ActionType => {\n    if (i_ActionType === \"hide\") {\n      this.setState({\n        filterButtonVisible: false,\n        filterVisible: false\n      });\n    } else if (i_ActionType === \"show\") {\n      this.setState({\n        filterButtonVisible: true\n      });\n    }\n  };\n\n  renderCards = i_Games => {\n    return (\n      <div className=\"content card-container\">\n        <Cards\n          games={this.filterBacklogGames(i_Games)}\n          parentComponent={\"My Backlog\"}\n          currentPage={\"My Backlog\"}\n          handleToggleFilter={this.toggleFilter}\n          handleEditGame={this.props.handleEditGame}\n          handleDeleteGame={this.props.handleDeleteGame}\n          handleGetGameFromList={this.props.handleGetGameFromList}\n        />\n      </div>\n    );\n  };\n\n  renderContent = i_Games => {\n    return (\n      <React.Fragment>\n        <div className=\"center-container\">\n          <h1 className=\"page-title page-title-sml\">My Backlog</h1>\n          <div className=\"status-bar\">\n            {this.renderStatBar(i_Games)}\n            {this.renderFilter()}\n          </div>\n        </div>\n        <div className=\"content\">{this.renderCards(i_Games)}</div>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    let myGames = this.props.games;\n\n    if (myGames === undefined) {\n      myGames = [];\n    }\n\n    return this.renderContent(myGames);\n  }\n}\n\nMyBacklog.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps)(MyBacklog);\n","import { getStatusTypes } from \"./Status\";\n\nclass Game {\n  constructor(i_Game, i_Platform, i_Status, i_Priority) {\n    this.name = i_Game.name;\n    this.platform = this.assignPlatform(i_Game, i_Platform);\n    this.status = this.assignStatus(i_Status);\n    this.priority = i_Priority;\n    this.released = i_Game.released;\n    this.rating = i_Game.rating;\n    this.background_image = i_Game.background_image;\n    this.slug = i_Game.slug;\n    this.raw = i_Game;\n  }\n\n  assignStatus(i_Status) {\n    const statusTypes = getStatusTypes();\n    let gameStatus;\n\n    statusTypes.forEach(status => {\n      if (status === i_Status) {\n        gameStatus = i_Status;\n      }\n    });\n\n    return gameStatus;\n  }\n\n  assignPlatform(i_Game, i_Platform) {\n    let myPlatform = \"\";\n    i_Game.platforms.forEach(platform => {\n      if (platform.platform.name === i_Platform) {\n        myPlatform = platform.platform;\n      }\n    });\n    return myPlatform;\n  }\n\n  static convertToGameObject(i_Game, i_Platform, i_Status = 0) {\n    return new Game(i_Game, i_Platform, i_Status);\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\nimport store from \"../../redux/store\";\nimport {\n  logoutUser,\n  updateGames,\n  sendEmailVerification\n} from \"../../redux/actions/userActions\";\nimport MyBacklog from \"./MyBacklog\";\nimport Game from \"../../model/Game\";\nimport { searchGame } from \"../../model/Api\";\nimport { loadUserDataFromProps } from \"../../util/Utils\";\n\nclass BCKLG extends Component {\n  state = {\n    isLoaded: false,\n    rawger: \"\",\n    pageIndex: 0,\n    navbarClasses: [],\n    username: \"\",\n    games: [],\n    verified: \"\",\n    userData: \"\",\n    fetchFailed: false\n  };\n\n  /* #region  GAME METHODS */\n  getGameFromList = i_Game => {\n    const { games } = loadUserDataFromProps(this.props);\n\n    const myGameList = games;\n    let myGame;\n\n    myGameList.forEach(game => {\n      if (i_Game === game.slug) {\n        myGame = game;\n      }\n    });\n\n    return myGame;\n  };\n\n  editGame = (i_Game, i_Platform, i_Status) => {\n    const { username, games } = loadUserDataFromProps(this.props);\n\n    const myGameList = games;\n    const newGame = new Game(i_Game.raw, i_Platform, i_Status);\n\n    const newGameList = myGameList.map(game => {\n      if (game.name === i_Game.raw.name) {\n        return newGame;\n      } else {\n        return game;\n      }\n    });\n\n    this.props.updateGames(username, newGameList);\n  };\n\n  deleteGame = i_Game => {\n    const { username, games } = loadUserDataFromProps(this.props);\n\n    const myGameList = games;\n\n    try {\n      const newGameList = myGameList.filter(game => {\n        let listGame;\n        if (!(game.name === i_Game.raw.name)) {\n          listGame = game;\n        }\n        return listGame;\n      });\n\n      this.props.updateGames(username, newGameList);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  loadUserDataFromProps = () => {\n    const {\n      user: {\n        credentials: { username, games, emailVerified },\n        loading,\n        authenticated\n      }\n    } = this.props;\n\n    const { user } = this.props;\n\n    return { user, username, games, emailVerified, loading, authenticated };\n  };\n  /* #endregion */\n\n  /* #region  UI METHODS */\n  onSwitchPage = i_Index => {\n    this.setState({\n      pageIndex: i_Index\n    });\n  };\n\n  handleLogout = () => {\n    try {\n      this.props.logoutUser();\n      this.setState({\n        popupVisible: false\n      });\n      this.props.history.push(\"/login\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  renderBacklog = () => {\n    const { games, loading, authenticated } = loadUserDataFromProps(this.props);\n\n    setTimeout(() => {\n      const { user, authenticated } = loadUserDataFromProps(this.props);\n      if (!user || !authenticated) {\n        window.alert(\n          \"Could not authenticate/retrieve user data. Please log in again\"\n        );\n        store.dispatch(logoutUser());\n      }\n    }, 4500);\n\n    const content = (\n      <MyBacklog\n        pageName=\"My Backlog\"\n        games={games}\n        handleSearch={searchGame}\n        handleAddGame={this.addGameToList}\n        handleEditGame={this.editGame}\n        handleDeleteGame={this.deleteGame}\n        handleGetGameFromList={this.getGameFromList}\n      />\n    );\n\n    const loader = (\n      <div className=\"page-container\">\n        <div className=\"main\">\n          <div className=\"content\">\n            <br />\n            <br />\n            <div className=\"loader-container loader-container-bcklg\">\n              {loading && <div className=\"loader\" />}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    const unverified = (\n      <React.Fragment>\n        <div className=\"page-container\">\n          <div className=\"main\">\n            <div className=\"content\">\n              <div className=\"center-container\">\n                <h2 className=\"page-title\">Your email is not verified!</h2>\n                <br />\n                <p className=\"unverified-body\">\n                  In order to use BCKLG, please click the button below and\n                  follow the instructions sent your email.\n                </p>\n                <br />\n                <button\n                  className=\"btn link\"\n                  onClick={this.props.sendEmailVerification}\n                >\n                  Send verification email\n                </button>\n                <br />\n                <br />\n                <p>\n                  Once you've verified your email, logout and re-login to use\n                  BCKLG.\n                </p>\n                <button\n                  className=\"btn nav-link link btn-pop-up\"\n                  onClick={this.handleLogout}\n                >\n                  Logout\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n\n    return (\n      <React.Fragment>\n        {!loading\n          ? authenticated\n            ? content\n            : this.props.history.push(\"/\")\n          : loader}\n      </React.Fragment>\n    );\n  };\n  /* #endregion */\n\n  render() {\n    return this.renderBacklog();\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  logoutUser,\n  updateGames,\n  sendEmailVerification\n};\n\nBCKLG.propTypes = {\n  user: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  updateGames: PropTypes.func.isRequired,\n  sendEmailVerification: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(BCKLG);\n","import React, { Component } from \"react\";\nimport Cards from \"../UI Elements/Cards\";\nimport Game from \"../../model/Game\";\nimport { getGameFromApi, searchGame } from \"../../model/Api\";\nimport { loadUserDataFromProps } from \"../../util/Utils\";\nimport { updateGames } from \"../../redux/actions/userActions\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\n\nclass AddGame extends Component {\n  state = {\n    searchResults: [],\n    query: \"\",\n    year: 2020,\n    errorMessage: \"Could not find game! Please try again\",\n    displayErrorMessage: false,\n    searchInitiated: false,\n    searchVisible: true,\n    gameBuffer: []\n  };\n\n  handleInputChange = event => {\n    let newQuery = event.target.value;\n    this.setState({\n      query: newQuery\n    });\n  };\n\n  handleSubmitSearch = event => {\n    this.renderSearchResults(this.state.query);\n  };\n\n  renderSearchResults = async i_GameName => {\n    this.setState({\n      displayErrorMessage: false\n    });\n\n    let allResults = [];\n\n    let results = await searchGame(i_GameName)\n      .then(data => {\n        return data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    if (typeof results === typeof \"string\") {\n      this.setState({ displayErrorMessage: true });\n      return;\n    }\n\n    allResults = results;\n\n    this.setState({\n      searchResults: allResults,\n      searchInitiated: true\n    });\n  };\n\n  renderItems() {\n    if (\n      this.state.displayErrorMessage ||\n      (this.state.searchResults.length < 1 && this.state.searchInitiated)\n    ) {\n      return <h2>{this.state.errorMessage}</h2>;\n    } else {\n      return (\n        <div className=\"content\">\n          <div className=\"content card-container\">\n            <Cards\n              games={this.state.searchResults}\n              parentComponent={\"Add Game\"}\n              currentPage={\"Add Game\"}\n              handleAddGame={this.addGameToList}\n              handleGetGameFromList={this.props.handleGetGameFromList}\n              handleSearchVisibility={this.toggleSearchVisibility}\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  populateYears = () => {\n    const currentYear = new Date().getFullYear();\n\n    let yearArray = [];\n\n    for (let i = currentYear; i > 1969; i--) {\n      yearArray.push(\n        <option className=\"year\" key={i} value={i}>\n          {i}\n        </option>\n      );\n    }\n\n    return yearArray;\n  };\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13) {\n      this.renderSearchResults(this.state.query);\n    }\n  };\n\n  handleChange = event => {\n    const { value } = event.target;\n    this.setState({\n      year: value\n    });\n  };\n\n  handleSearchPreset = async event => {\n    const { name } = event.target;\n    const year = this.state.year;\n    let linkSuffix;\n\n    if (name === \"Most Popular\") {\n      linkSuffix = `added`;\n    } else {\n      linkSuffix = `rating`;\n    }\n\n    fetch(\n      `https://api.rawg.io/api/games?dates=${year}-01-01,${year}-12-31&ordering=-${linkSuffix}`\n    )\n      .then(result => {\n        return result.json();\n      })\n      .then(data => {\n        this.setState({\n          searchResults: data.results\n        });\n      });\n  };\n\n  toggleSearchVisibility = () => {\n    if (this.state.searchVisible) {\n      this.setState({\n        searchVisible: false\n      });\n    } else {\n      this.setState({\n        searchVisible: true\n      });\n    }\n  };\n\n  gameExists = (i_Game, i_GameList) => {\n    let exists = false;\n\n    if (i_GameList !== undefined && i_GameList.length > 0) {\n      i_GameList.forEach(game => {\n        if (game.slug === i_Game) {\n          exists = true;\n        }\n      });\n    }\n\n    return exists;\n  };\n\n  addGameToList = async (i_Game, i_Platform, i_Status) => {\n    const { username, games } = loadUserDataFromProps(this.props);\n\n    let myGameList = games;\n\n    const gameExists = this.gameExists(i_Game, myGameList);\n\n    if (gameExists) {\n      alert(\"Game already exits!\");\n    } else {\n      await getGameFromApi(i_Game)\n        .then(data => {\n          return data;\n        })\n        .then(resolvedGame => {\n          const convertedGame = Game.convertToGameObject(\n            resolvedGame,\n            i_Platform,\n            i_Status\n          );\n\n          return convertedGame;\n        })\n        .then(game => {\n          if (myGameList !== undefined && myGameList.length > 0) {\n            myGameList.unshift(game);\n          } else {\n            myGameList = [game];\n          }\n\n          this.props.updateGames(username, myGameList);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  };\n\n  renderSearchContainer = () => {\n    if (this.state.searchVisible) {\n      return (\n        <React.Fragment>\n          <div className=\"search-container\">\n            <div className=\"search\">\n              <input\n                type=\"text\"\n                className=\"search-box\"\n                placeholder=\"Which game are you looking for?\"\n                value={this.state.query}\n                onChange={this.handleInputChange}\n                onKeyDown={this.handleKeyDown}\n              ></input>\n              <button\n                className=\"btn-search link\"\n                onClick={this.handleSubmitSearch}\n              >\n                Search\n              </button>\n            </div>\n            <div className=\"search-presets\">\n              <button\n                className=\"btn-search link preset\"\n                onClick={this.handleSearchPreset}\n                name=\"Most Popular\"\n              >\n                Most Popular\n              </button>\n              <button\n                className=\"btn-search link preset\"\n                onClick={this.handleSearchPreset}\n                name=\"Highest Rated\"\n              >\n                Highest Rated\n              </button>\n              <select\n                className=\"btn-search link preset year-select\"\n                onChange={this.handleChange}\n              >\n                {this.populateYears()}\n              </select>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"center-container\">\n          <h1 className=\"page-title page-title-sml\">Add Game</h1>\n          {this.renderSearchContainer()}\n          {this.renderItems()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nAddGame.propTypes = {\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  updateGames: PropTypes.func.isRequired\n};\n\nconst mapActionsToProps = { updateGames };\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, mapActionsToProps)(AddGame);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n// Redux\nimport { connect } from \"react-redux\";\nimport {\n  logoutUser,\n  deleteAccount,\n  updateUserPassword\n} from \"../../redux/actions/userActions\";\n\nclass Account extends Component {\n  state = {\n    currentPassword: \"\",\n    newPassword: \"\",\n    confirmNewPassword: \"\",\n    editVisible: false,\n    errors: {},\n    passwordChanged: false\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  handleDeleteAccount = event => {\n    const {\n      user: {\n        credentials: { username, email }\n      }\n    } = this.props;\n\n    if (window.confirm(\"Are you sure you want to delete your account?\")) {\n      if (\n        window.prompt(\n          \"Enter your account's email address below to confirm:\"\n        ) !== email\n      ) {\n        alert(\"Incorrect input! Please try again\");\n      } else {\n        try {\n          this.props.deleteAccount(username);\n          alert(\"Account successfully deleted!\");\n          this.props.logoutUser();\n          this.props.history.push(\"/\");\n        } catch (err) {\n          console.log(err);\n          alert(err);\n        }\n      }\n    } else {\n      event.preventDefault();\n    }\n  };\n\n  handleSaveChanges = async event => {\n    event.preventDefault();\n    const {\n      user: {\n        credentials: { email }\n      }\n    } = this.props;\n\n    const updatePasswordRequest = {\n      email: email,\n      currentPassword: this.state.currentPassword,\n      newPassword: this.state.newPassword,\n      confirmNewPassword: this.state.confirmNewPassword\n    };\n\n    await this.props\n      .updateUserPassword(updatePasswordRequest)\n      .then(result => {\n        if (result) {\n          this.handleEditAccount();\n          this.props.history.push(\"/account\");\n          this.setState({\n            currentPassword: \"\",\n            newPassword: \"\",\n            confirmNewPassword: \"\"\n          });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleInputChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13) {\n      this.handleSaveChanges(event);\n    }\n  };\n\n  handleEditAccount = event => {\n    this.setState({\n      editVisible: !this.state.editVisible\n    });\n  };\n\n  renderEditAccount = i_Errors => {\n    const {\n      UI: { loading }\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <h2 className=\"sub-page-title\">Change Password</h2>\n        <form onSubmit={this.handleSaveChanges} className=\"form login-form\">\n          <div className=\"field-label-container\">\n            {this.state.currentPassword !== \"\" && (\n              <p className=\"field-label\">Current Password</p>\n            )}\n            <input\n              type=\"password\"\n              className=\"userdata-input userdata-input-account\"\n              name=\"currentPassword\"\n              placeholder=\"Current Password\"\n              onChange={this.handleInputChange}\n              onKeyDown={this.handleKeyDown}\n              value={this.state.currentPassword}\n            ></input>\n            <br />\n            {i_Errors.currentPassword && (\n              <p className=\"helper-text change-password-helper\">\n                {i_Errors.currentPassword}\n              </p>\n            )}\n          </div>\n          <div className=\"field-label-container\">\n            {this.state.newPassword !== \"\" && (\n              <p className=\"field-label\">New Password</p>\n            )}\n            <input\n              type=\"password\"\n              className=\"userdata-input userdata-input-account\"\n              name=\"newPassword\"\n              placeholder=\"New Password\"\n              onChange={this.handleInputChange}\n              onKeyDown={this.handleKeyDown}\n              value={this.state.newPassword}\n            ></input>\n            <br />\n            {i_Errors.newPassword && (\n              <p className=\"change-password-helper helper-text\">\n                {i_Errors.newPassword}\n              </p>\n            )}\n          </div>\n          <div className=\"field-label-container\">\n            {this.state.confirmNewPassword !== \"\" && (\n              <p className=\"field-label\">Confirm New Password</p>\n            )}\n            <input\n              type=\"password\"\n              className=\"userdata-input userdata-input-account\"\n              name=\"confirmNewPassword\"\n              placeholder=\"Confirm New Password\"\n              onChange={this.handleInputChange}\n              value={this.state.confirmNewPassword}\n              onKeyDown={this.handleKeyDown}\n            ></input>\n            <br />\n            {i_Errors.confirmNewPassword && (\n              <p className=\"change-password-helper helper-text\">\n                {i_Errors.confirmNewPassword}\n              </p>\n            )}\n          </div>\n          <div className=\"loader-container\">\n            {loading && <div className=\"loader\" />}\n          </div>\n          <button className=\"btn link\">Save Changes</button>\n          <button\n            className=\"btn btn-negative link\"\n            onClick={this.handleDeleteAccount}\n          >\n            Delete account\n          </button>\n        </form>\n        <button className=\"btn link btn-gray\" onClick={this.handleEditAccount}>\n          Cancel\n        </button>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    const {\n      user: {\n        credentials: { username, email }\n      }\n    } = this.props;\n\n    if (this.state.passwordChanged) {\n      alert(\"Password updated successfully!\");\n      this.setState({\n        passwordChanged: false\n      });\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"center-container\">\n          <h1 className=\"page-title page-title-sml\">Account</h1>\n          <br />\n          <div className=\"field-label-container\">\n            <p className=\"field-label\">Username</p>\n          </div>\n          <div className=\"field-box\">\n            <p>{username}</p>\n          </div>\n          <br />\n          <div className=\"field-label-container\">\n            <p className=\"field-label\">Email</p>\n          </div>\n          <div className=\"field-box\">\n            <p>{email}</p>\n          </div>\n          {this.state.editVisible ? (\n            <React.Fragment>{this.renderEditAccount(errors)}</React.Fragment>\n          ) : (\n            <React.Fragment>\n              <br />\n              <button className=\"btn link\" onClick={this.handleEditAccount}>\n                Change Password\n              </button>\n            </React.Fragment>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nAccount.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  updateUserPassword: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  deleteAccount,\n  updateUserPassword,\n  logoutUser\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Account);\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { SET_AUTHENTICATED } from \"./redux/types\";\nimport { logoutUser, getUserData } from \"./redux/actions/userActions\";\n//Axios\nimport axios from \"axios\";\n// Components\nimport AuthRoute from \"./util/AuthRoute\";\nimport jwtDecode from \"jwt-decode\";\nimport Navbar from \"./components/UI Elements/Navbar\";\nimport Footer from \"./components/UI Elements/Footer\";\n// Pages\nimport home from \"./components/Home Pages/home\";\nimport signup from \"./components/Home Pages/signup\";\nimport login from \"./components/Home Pages/login\";\nimport bcklg from \"./components/BCKLG Pages/BCKLG\";\nimport addGame from \"./components/BCKLG Pages/AddGame\";\nimport account from \"./components/BCKLG Pages/Account\";\n\naxios.defaults.baseURL =\n  \"https://europe-west1-bcklg-6b059.cloudfunctions.net/api\";\n\nconst token = localStorage.firebaseIdToken;\nif (token) {\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser());\n    window.location.href = \"/\";\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common[\"Authorization\"] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component {\n  state = {\n    homeNavItems: [\"Sign Up\", \"Login\"],\n    bcklgNavItems: [\"My Backlog\", \"Add Game\"]\n  };\n\n  renderApp = () => {\n    const router = (\n      <HashRouter basename=\"/\">\n        <Navbar\n          homeNav={this.state.homeNavItems}\n          bcklgNav={this.state.bcklgNavItems}\n          location={this.props.location}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={home} />\n          <div className=\"page-body\">\n            <div className=\"page-container\">\n              <AuthRoute exact path=\"/sign-up\" component={signup} />\n              <AuthRoute exact path=\"/login\" component={login} />\n              <Route exact path=\"/my-backlog\" component={bcklg} />\n              <Route exact path=\"/add-game\" component={addGame} />\n              <Route exact path=\"/account\" component={account} />\n            </div>\n          </div>\n        </Switch>\n      </HashRouter>\n    );\n\n    return (\n      <React.Fragment>\n        <Provider store={store}>\n          <React.Fragment>{router}</React.Fragment>\n        </Provider>\n        <Footer />\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return <React.Fragment>{this.renderApp()}</React.Fragment>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/BCKLG_Logo.ff82a027.svg\";"],"sourceRoot":""}